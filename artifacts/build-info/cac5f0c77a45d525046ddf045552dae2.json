{
	"id": "cac5f0c77a45d525046ddf045552dae2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"wasser/staking.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport {SafeMath} from \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n\r\n\r\ncontract Staking is Pausable, ReentrancyGuard, Initializable {\r\n using SafeMath for uint256;\r\n using SafeERC20 for IERC20;\r\n\r\n uint256 public minStakeAmount;\r\n uint256 public maxStakeAmount;\r\n address public owner;\r\n struct User {\r\n uint256 amount;\r\n uint256 deadline;\r\n }\r\n function initialize() public initializer {\r\n owner = msg.sender;\r\n } \r\n\r\n modifier onlyOwner(){\r\n require(msg.sender == owner, \"only admins are allowed\");\r\n _;\r\n }\r\n\r\n mapping(address => mapping(uint256 => User)) public userMonthToAmount;\r\n mapping(uint256 => uint256) public monthToInterestRate;\r\n\r\n IERC20 public token;\r\n\r\n function setAddress(address _address) external onlyOwner {\r\n token = IERC20(_address);\r\n }\r\n\r\n function stake(uint256 _amount, uint256 _month)\r\n external\r\n whenNotPaused\r\n nonReentrant\r\n {\r\n require(_amount >= minStakeAmount, \"add more amount\");\r\n require(_amount <= maxStakeAmount, \"add less amount\");\r\n uint256 interestRate = monthToInterestRate[_month];\r\n require(interestRate > 0, \"invalid month\");\r\n\r\n User storage user = userMonthToAmount[msg.sender][_month];\r\n require(user.amount == 0, \"already staked\");\r\n\r\n token.safeTransferFrom(msg.sender, address(this), _amount);\r\n user.amount = _amount;\r\n user.deadline = block.timestamp.add(_month * 60); /* CHANGE THE TIME BEFORE DEPLOY */\r\n\r\n }\r\n\r\n function unstake(uint256 _month) external nonReentrant {\r\n User storage user = userMonthToAmount[msg.sender][_month];\r\n uint256 amount = user.amount;\r\n require(amount > 0, \"no unstake data found\");\r\n require(block.timestamp > user.deadline, \"period is not expired\");\r\n uint256 interestRate = monthToInterestRate[_month];\r\n uint256 reward = calculateReward(amount, interestRate, _month);\r\n\r\n token.safeTransfer(msg.sender, amount.add(reward));\r\n delete userMonthToAmount[msg.sender][_month];\r\n }\r\n\r\n function calculateReward(\r\n uint256 _amount,\r\n uint256 _interestRate,\r\n uint256 _month\r\n ) public pure returns (uint256) {\r\n uint256 reward = _amount.mul(_interestRate).mul(_month).div(1000 * 12);\r\n return reward;\r\n }\r\n\r\n function updateMinAmount(uint256 _minAmount) external onlyOwner {\r\n minStakeAmount = _minAmount;\r\n }\r\n\r\n function updateMaxAmount(uint256 _maxAmount) external onlyOwner {\r\n maxStakeAmount = _maxAmount;\r\n }\r\n\r\n function withdraw(uint256 _amount) external onlyOwner {\r\n uint256 contractBalance = token.balanceOf(address(this));\r\n require(\r\n contractBalance >= _amount,\r\n \"Contract does not have enough balance to withdraw\"\r\n );\r\n token.safeTransfer(msg.sender, _amount);\r\n }\r\n\r\n function setMonthInterestRate(uint256 _month, uint256 _interestRate)\r\n external\r\n onlyOwner\r\n {\r\n monthToInterestRate[_month] = _interestRate;\r\n }\r\n\r\n function pause() public onlyOwner {\r\n _pause();\r\n }\r\n\r\n function unpause() public onlyOwner {\r\n _unpause();\r\n }\r\n\r\n function transferOwnership(address _address) external onlyOwner{\r\n owner = _address;\r\n }\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 271,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"wasser/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"wasser/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH9 0xBAC1390FFE9568F4CC PUSH29 0x4182027C60F92A0D5715AAAF3408209BFFAF16EC64736F6C6343000818 STOP CALLER ",
							"sourceMap": "482:6210:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH9 0xBAC1390FFE9568F4CC PUSH29 0x4182027C60F92A0D5715AAAF3408209BFFAF16EC64736F6C6343000818 STOP CALLER ",
							"sourceMap": "482:6210:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"wasser/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"wasser/staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_month",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "monthToInterestRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_month",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_interestRate",
									"type": "uint256"
								}
							],
							"name": "setMonthInterestRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_month",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_month",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxAmount",
									"type": "uint256"
								}
							],
							"name": "updateMaxAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "updateMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userMonthToAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"wasser/staking.sol\":410:3271  contract Staking is Pausable, ReentrancyGuard, Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  dup1\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"wasser/staking.sol\":410:3271  contract Staking is Pausable, ReentrancyGuard, Initializable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"wasser/staking.sol\":410:3271  contract Staking is Pausable, ReentrancyGuard, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xe30081a0\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xe30081a0\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf1887684\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xff897dbd\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x97378b1a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9fa828ac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa8e62b97\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x5c975abb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5d80ca32\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6cee0131\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x106b5da1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"wasser/staking.sol\":2537:2637  function updateMaxAmount(uint256 _maxAmount) external onlyOwner {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"wasser/staking.sol\":1711:2205  function unstake(uint256 _month) external nonReentrant {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"wasser/staking.sol\":2642:2904  function withdraw(uint256 _amount) external onlyOwner {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"wasser/staking.sol\":3116:3171  function unpause() public onlyOwner {... */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":570:599  uint256 public maxStakeAmount */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":2909:3055  function setMonthInterestRate(uint256 _month, uint256 _interestRate)... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"wasser/staking.sol\":1106:1706  function stake(uint256 _amount, uint256 _month)... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"wasser/staking.sol\":685:753  function initialize() public initializer {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"wasser/staking.sol\":3060:3111  function pause() public onlyOwner {... */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"wasser/staking.sol\":603:623  address public owner */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":926:980  mapping(uint256 => uint256) public monthToInterestRate */\n    tag_14:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":853:922  mapping(address => mapping(uint256 => User)) public userMonthToAmount */\n    tag_15:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":2210:2427  function calculateReward(... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":1011:1101  function setAddress(address _address) external onlyOwner {... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"wasser/staking.sol\":537:566  uint256 public minStakeAmount */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":3176:3264  function transferOwnership(address _address) external onlyOwner{... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"wasser/staking.sol\":986:1005  IERC20 public token */\n    tag_20:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"wasser/staking.sol\":2432:2532  function updateMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_21:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"wasser/staking.sol\":2537:2637  function updateMaxAmount(uint256 _maxAmount) external onlyOwner {... */\n    tag_28:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"wasser/staking.sol\":2622:2632  _maxAmount */\n      dup1\n        /* \"wasser/staking.sol\":2605:2619  maxStakeAmount */\n      0x03\n        /* \"wasser/staking.sol\":2605:2632  maxStakeAmount = _maxAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":2537:2637  function updateMaxAmount(uint256 _maxAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":1711:2205  function unstake(uint256 _month) external nonReentrant {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"wasser/staking.sol\":1770:1787  User storage user */\n      0x00\n        /* \"wasser/staking.sol\":1790:1807  userMonthToAmount */\n      0x05\n        /* \"wasser/staking.sol\":1790:1819  userMonthToAmount[msg.sender] */\n      0x00\n        /* \"wasser/staking.sol\":1808:1818  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":1790:1819  userMonthToAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"wasser/staking.sol\":1790:1827  userMonthToAmount[msg.sender][_month] */\n      0x00\n        /* \"wasser/staking.sol\":1820:1826  _month */\n      dup4\n        /* \"wasser/staking.sol\":1790:1827  userMonthToAmount[msg.sender][_month] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"wasser/staking.sol\":1770:1827  User storage user = userMonthToAmount[msg.sender][_month] */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":1831:1845  uint256 amount */\n      0x00\n        /* \"wasser/staking.sol\":1848:1852  user */\n      dup2\n        /* \"wasser/staking.sol\":1848:1859  user.amount */\n      0x00\n      add\n      sload\n        /* \"wasser/staking.sol\":1831:1859  uint256 amount = user.amount */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":1880:1881  0 */\n      0x00\n        /* \"wasser/staking.sol\":1871:1877  amount */\n      dup2\n        /* \"wasser/staking.sol\":1871:1881  amount > 0 */\n      gt\n        /* \"wasser/staking.sol\":1863:1907  require(amount > 0, \"no unstake data found\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"wasser/staking.sol\":1937:1941  user */\n      dup2\n        /* \"wasser/staking.sol\":1937:1950  user.deadline */\n      0x01\n      add\n      sload\n        /* \"wasser/staking.sol\":1919:1934  block.timestamp */\n      timestamp\n        /* \"wasser/staking.sol\":1919:1950  block.timestamp > user.deadline */\n      gt\n        /* \"wasser/staking.sol\":1911:1976  require(block.timestamp > user.deadline, \"period is not expired\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"wasser/staking.sol\":1980:2000  uint256 interestRate */\n      0x00\n        /* \"wasser/staking.sol\":2003:2022  monthToInterestRate */\n      0x06\n        /* \"wasser/staking.sol\":2003:2030  monthToInterestRate[_month] */\n      0x00\n        /* \"wasser/staking.sol\":2023:2029  _month */\n      dup6\n        /* \"wasser/staking.sol\":2003:2030  monthToInterestRate[_month] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"wasser/staking.sol\":1980:2030  uint256 interestRate = monthToInterestRate[_month] */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":2034:2048  uint256 reward */\n      0x00\n        /* \"wasser/staking.sol\":2051:2096  calculateReward(amount, interestRate, _month) */\n      tag_107\n        /* \"wasser/staking.sol\":2067:2073  amount */\n      dup4\n        /* \"wasser/staking.sol\":2075:2087  interestRate */\n      dup4\n        /* \"wasser/staking.sol\":2089:2095  _month */\n      dup8\n        /* \"wasser/staking.sol\":2051:2066  calculateReward */\n      tag_73\n        /* \"wasser/staking.sol\":2051:2096  calculateReward(amount, interestRate, _month) */\n      jump\t// in\n    tag_107:\n        /* \"wasser/staking.sol\":2034:2096  uint256 reward = calculateReward(amount, interestRate, _month) */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":2102:2152  token.safeTransfer(msg.sender, amount.add(reward)) */\n      tag_108\n        /* \"wasser/staking.sol\":2121:2131  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":2133:2151  amount.add(reward) */\n      tag_109\n        /* \"wasser/staking.sol\":2144:2150  reward */\n      dup4\n        /* \"wasser/staking.sol\":2133:2139  amount */\n      dup7\n        /* \"wasser/staking.sol\":2133:2143  amount.add */\n      tag_110\n      swap1\n        /* \"wasser/staking.sol\":2133:2151  amount.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"wasser/staking.sol\":2102:2107  token */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":2102:2120  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"wasser/staking.sol\":2102:2152  token.safeTransfer(msg.sender, amount.add(reward)) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"wasser/staking.sol\":2163:2180  userMonthToAmount */\n      0x05\n        /* \"wasser/staking.sol\":2163:2192  userMonthToAmount[msg.sender] */\n      0x00\n        /* \"wasser/staking.sol\":2181:2191  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":2163:2192  userMonthToAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"wasser/staking.sol\":2163:2200  userMonthToAmount[msg.sender][_month] */\n      0x00\n        /* \"wasser/staking.sol\":2193:2199  _month */\n      dup7\n        /* \"wasser/staking.sol\":2163:2200  userMonthToAmount[msg.sender][_month] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"wasser/staking.sol\":2156:2200  delete userMonthToAmount[msg.sender][_month] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"wasser/staking.sol\":1766:2205  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_112\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_113\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_112:\n        /* \"wasser/staking.sol\":1711:2205  function unstake(uint256 _month) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":2642:2904  function withdraw(uint256 _amount) external onlyOwner {... */\n    tag_34:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_95\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"wasser/staking.sol\":2700:2723  uint256 contractBalance */\n      0x00\n        /* \"wasser/staking.sol\":2726:2731  token */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":2726:2741  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"wasser/staking.sol\":2750:2754  this */\n      address\n        /* \"wasser/staking.sol\":2726:2756  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_118:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"wasser/staking.sol\":2700:2756  uint256 contractBalance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":2790:2797  _amount */\n      dup2\n        /* \"wasser/staking.sol\":2771:2786  contractBalance */\n      dup2\n        /* \"wasser/staking.sol\":2771:2797  contractBalance >= _amount */\n      lt\n      iszero\n        /* \"wasser/staking.sol\":2760:2856  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"wasser/staking.sol\":2860:2899  token.safeTransfer(msg.sender, _amount) */\n      tag_126\n        /* \"wasser/staking.sol\":2879:2889  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":2891:2898  _amount */\n      dup4\n        /* \"wasser/staking.sol\":2860:2865  token */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":2860:2878  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"wasser/staking.sol\":2860:2899  token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"wasser/staking.sol\":2696:2904  {... */\n      pop\n        /* \"wasser/staking.sol\":2642:2904  function withdraw(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":3116:3171  function unpause() public onlyOwner {... */\n    tag_36:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_95\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"wasser/staking.sol\":3156:3166  _unpause() */\n      tag_131\n        /* \"wasser/staking.sol\":3156:3164  _unpause */\n      tag_132\n        /* \"wasser/staking.sol\":3156:3166  _unpause() */\n      jump\t// in\n    tag_131:\n        /* \"wasser/staking.sol\":3116:3171  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"wasser/staking.sol\":570:599  uint256 public maxStakeAmount */\n    tag_42:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"wasser/staking.sol\":2909:3055  function setMonthInterestRate(uint256 _month, uint256 _interestRate)... */\n    tag_48:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_95\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"wasser/staking.sol\":3037:3050  _interestRate */\n      dup1\n        /* \"wasser/staking.sol\":3007:3026  monthToInterestRate */\n      0x06\n        /* \"wasser/staking.sol\":3007:3034  monthToInterestRate[_month] */\n      0x00\n        /* \"wasser/staking.sol\":3027:3033  _month */\n      dup5\n        /* \"wasser/staking.sol\":3007:3034  monthToInterestRate[_month] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"wasser/staking.sol\":3007:3050  monthToInterestRate[_month] = _interestRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":2909:3055  function setMonthInterestRate(uint256 _month, uint256 _interestRate)... */\n      pop\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":1106:1706  function stake(uint256 _amount, uint256 _month)... */\n    tag_51:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_140\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_142\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_142:\n        /* \"wasser/staking.sol\":1221:1235  minStakeAmount */\n      sload(0x02)\n        /* \"wasser/staking.sol\":1210:1217  _amount */\n      dup3\n        /* \"wasser/staking.sol\":1210:1235  _amount >= minStakeAmount */\n      lt\n      iszero\n        /* \"wasser/staking.sol\":1202:1255  require(_amount >= minStakeAmount, \"add more amount\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"wasser/staking.sol\":1278:1292  maxStakeAmount */\n      sload(0x03)\n        /* \"wasser/staking.sol\":1267:1274  _amount */\n      dup3\n        /* \"wasser/staking.sol\":1267:1292  _amount <= maxStakeAmount */\n      gt\n      iszero\n        /* \"wasser/staking.sol\":1259:1312  require(_amount <= maxStakeAmount, \"add less amount\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"wasser/staking.sol\":1316:1336  uint256 interestRate */\n      0x00\n        /* \"wasser/staking.sol\":1339:1358  monthToInterestRate */\n      0x06\n        /* \"wasser/staking.sol\":1339:1366  monthToInterestRate[_month] */\n      0x00\n        /* \"wasser/staking.sol\":1359:1365  _month */\n      dup4\n        /* \"wasser/staking.sol\":1339:1366  monthToInterestRate[_month] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"wasser/staking.sol\":1316:1366  uint256 interestRate = monthToInterestRate[_month] */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":1393:1394  0 */\n      0x00\n        /* \"wasser/staking.sol\":1378:1390  interestRate */\n      dup2\n        /* \"wasser/staking.sol\":1378:1394  interestRate > 0 */\n      gt\n        /* \"wasser/staking.sol\":1370:1412  require(interestRate > 0, \"invalid month\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"wasser/staking.sol\":1418:1435  User storage user */\n      0x00\n        /* \"wasser/staking.sol\":1438:1455  userMonthToAmount */\n      0x05\n        /* \"wasser/staking.sol\":1438:1467  userMonthToAmount[msg.sender] */\n      0x00\n        /* \"wasser/staking.sol\":1456:1466  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":1438:1467  userMonthToAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"wasser/staking.sol\":1438:1475  userMonthToAmount[msg.sender][_month] */\n      0x00\n        /* \"wasser/staking.sol\":1468:1474  _month */\n      dup5\n        /* \"wasser/staking.sol\":1438:1475  userMonthToAmount[msg.sender][_month] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"wasser/staking.sol\":1418:1475  User storage user = userMonthToAmount[msg.sender][_month] */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":1502:1503  0 */\n      0x00\n        /* \"wasser/staking.sol\":1487:1491  user */\n      dup2\n        /* \"wasser/staking.sol\":1487:1498  user.amount */\n      0x00\n      add\n      sload\n        /* \"wasser/staking.sol\":1487:1503  user.amount == 0 */\n      eq\n        /* \"wasser/staking.sol\":1479:1522  require(user.amount == 0, \"already staked\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"wasser/staking.sol\":1528:1586  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_156\n        /* \"wasser/staking.sol\":1551:1561  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":1571:1575  this */\n      address\n        /* \"wasser/staking.sol\":1578:1585  _amount */\n      dup7\n        /* \"wasser/staking.sol\":1528:1533  token */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":1528:1550  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_157\n      swap1\n        /* \"wasser/staking.sol\":1528:1586  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"wasser/staking.sol\":1604:1611  _amount */\n      dup4\n        /* \"wasser/staking.sol\":1590:1594  user */\n      dup2\n        /* \"wasser/staking.sol\":1590:1601  user.amount */\n      0x00\n      add\n        /* \"wasser/staking.sol\":1590:1611  user.amount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":1631:1663  block.timestamp.add(_month * 60) */\n      tag_158\n        /* \"wasser/staking.sol\":1660:1662  60 */\n      0x3c\n        /* \"wasser/staking.sol\":1651:1657  _month */\n      dup5\n        /* \"wasser/staking.sol\":1651:1662  _month * 60 */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"wasser/staking.sol\":1631:1646  block.timestamp */\n      timestamp\n        /* \"wasser/staking.sol\":1631:1650  block.timestamp.add */\n      tag_110\n      swap1\n        /* \"wasser/staking.sol\":1631:1663  block.timestamp.add(_month * 60) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"wasser/staking.sol\":1615:1619  user */\n      dup2\n        /* \"wasser/staking.sol\":1615:1628  user.deadline */\n      0x01\n      add\n        /* \"wasser/staking.sol\":1615:1663  user.deadline = block.timestamp.add(_month * 60) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":1198:1706  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_113\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_161:\n        /* \"wasser/staking.sol\":1106:1706  function stake(uint256 _amount, uint256 _month)... */\n      pop\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":685:753  function initialize() public initializer {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_166\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_169:\n        /* \"wasser/staking.sol\":738:748  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":730:735  owner */\n      0x04\n      0x00\n        /* \"wasser/staking.sol\":730:748  owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"wasser/staking.sol\":685:753  function initialize() public initializer {... */\n      jump\t// out\n        /* \"wasser/staking.sol\":3060:3111  function pause() public onlyOwner {... */\n    tag_55:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_95\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"wasser/staking.sol\":3098:3106  _pause() */\n      tag_178\n        /* \"wasser/staking.sol\":3098:3104  _pause */\n      tag_179\n        /* \"wasser/staking.sol\":3098:3106  _pause() */\n      jump\t// in\n    tag_178:\n        /* \"wasser/staking.sol\":3060:3111  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"wasser/staking.sol\":603:623  address public owner */\n    tag_57:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"wasser/staking.sol\":926:980  mapping(uint256 => uint256) public monthToInterestRate */\n    tag_62:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"wasser/staking.sol\":853:922  mapping(address => mapping(uint256 => User)) public userMonthToAmount */\n    tag_67:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"wasser/staking.sol\":2210:2427  function calculateReward(... */\n    tag_73:\n        /* \"wasser/staking.sol\":2322:2329  uint256 */\n      0x00\n        /* \"wasser/staking.sol\":2335:2349  uint256 reward */\n      dup1\n        /* \"wasser/staking.sol\":2352:2405  _amount.mul(_interestRate).mul(_month).div(1000 * 12) */\n      tag_181\n        /* \"wasser/staking.sol\":2395:2404  1000 * 12 */\n      0x2ee0\n        /* \"wasser/staking.sol\":2352:2390  _amount.mul(_interestRate).mul(_month) */\n      tag_182\n        /* \"wasser/staking.sol\":2383:2389  _month */\n      dup6\n        /* \"wasser/staking.sol\":2352:2378  _amount.mul(_interestRate) */\n      tag_183\n        /* \"wasser/staking.sol\":2364:2377  _interestRate */\n      dup9\n        /* \"wasser/staking.sol\":2352:2359  _amount */\n      dup11\n        /* \"wasser/staking.sol\":2352:2363  _amount.mul */\n      tag_184\n      swap1\n        /* \"wasser/staking.sol\":2352:2378  _amount.mul(_interestRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"wasser/staking.sol\":2352:2382  _amount.mul(_interestRate).mul */\n      tag_184\n      swap1\n        /* \"wasser/staking.sol\":2352:2390  _amount.mul(_interestRate).mul(_month) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"wasser/staking.sol\":2352:2394  _amount.mul(_interestRate).mul(_month).div */\n      tag_185\n      swap1\n        /* \"wasser/staking.sol\":2352:2405  _amount.mul(_interestRate).mul(_month).div(1000 * 12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"wasser/staking.sol\":2335:2405  uint256 reward = _amount.mul(_interestRate).mul(_month).div(1000 * 12) */\n      swap1\n      pop\n        /* \"wasser/staking.sol\":2416:2422  reward */\n      dup1\n        /* \"wasser/staking.sol\":2409:2422  return reward */\n      swap2\n      pop\n      pop\n        /* \"wasser/staking.sol\":2210:2427  function calculateReward(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":1011:1101  function setAddress(address _address) external onlyOwner {... */\n    tag_78:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_95\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"wasser/staking.sol\":1087:1095  _address */\n      dup1\n        /* \"wasser/staking.sol\":1072:1077  token */\n      0x07\n      0x00\n        /* \"wasser/staking.sol\":1072:1096  token = IERC20(_address) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":1011:1101  function setAddress(address _address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":537:566  uint256 public minStakeAmount */\n    tag_80:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"wasser/staking.sol\":3176:3264  function transferOwnership(address _address) external onlyOwner{... */\n    tag_84:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_95\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"wasser/staking.sol\":3251:3259  _address */\n      dup1\n        /* \"wasser/staking.sol\":3243:3248  owner */\n      0x04\n      0x00\n        /* \"wasser/staking.sol\":3243:3259  owner = _address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":3176:3264  function transferOwnership(address _address) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"wasser/staking.sol\":986:1005  IERC20 public token */\n    tag_86:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"wasser/staking.sol\":2432:2532  function updateMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_91:\n        /* \"wasser/staking.sol\":805:810  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"wasser/staking.sol\":791:801  msg.sender */\n      caller\n        /* \"wasser/staking.sol\":791:810  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"wasser/staking.sol\":783:838  require(msg.sender == owner, \"only admins are allowed\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_95\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"wasser/staking.sol\":2517:2527  _minAmount */\n      dup1\n        /* \"wasser/staking.sol\":2500:2514  minStakeAmount */\n      0x02\n        /* \"wasser/staking.sol\":2500:2527  minStakeAmount = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"wasser/staking.sol\":2432:2532  function updateMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_207\n      swap3\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_212\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_213\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_215\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_216\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_219\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_38\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_225\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_229\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_140\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_216\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_234\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_240\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_247\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_38\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_253\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_254\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_262\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_261)\n    tag_262:\n      0x60\n      swap2\n      pop\n    tag_261:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_263\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_264\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_268\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_269)\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_270\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_265)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_265:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_277:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_279:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_280:\n        /* \"#utility.yul\":490:514   */\n      tag_337\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_279\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_338:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_281:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_340\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_280\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_27:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_343\n      tag_277\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":766:885   */\n    tag_342:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_344\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_281\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_282:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_283:\n        /* \"#utility.yul\":1202:1223   */\n      tag_347\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_282\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_40:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_349\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_283\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1570   */\n    tag_284:\n        /* \"#utility.yul\":1539:1563   */\n      tag_351\n        /* \"#utility.yul\":1557:1562   */\n      dup2\n        /* \"#utility.yul\":1539:1563   */\n      tag_279\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1534:1537   */\n      dup3\n        /* \"#utility.yul\":1527:1564   */\n      mstore\n        /* \"#utility.yul\":1452:1570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1576:1798   */\n    tag_44:\n        /* \"#utility.yul\":1669:1673   */\n      0x00\n        /* \"#utility.yul\":1707:1709   */\n      0x20\n        /* \"#utility.yul\":1696:1705   */\n      dup3\n        /* \"#utility.yul\":1692:1710   */\n      add\n        /* \"#utility.yul\":1684:1710   */\n      swap1\n      pop\n        /* \"#utility.yul\":1720:1791   */\n      tag_353\n        /* \"#utility.yul\":1788:1789   */\n      0x00\n        /* \"#utility.yul\":1777:1786   */\n      dup4\n        /* \"#utility.yul\":1773:1790   */\n      add\n        /* \"#utility.yul\":1764:1770   */\n      dup5\n        /* \"#utility.yul\":1720:1791   */\n      tag_284\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1576:1798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1804:2278   */\n    tag_47:\n        /* \"#utility.yul\":1872:1878   */\n      0x00\n        /* \"#utility.yul\":1880:1886   */\n      dup1\n        /* \"#utility.yul\":1929:1931   */\n      0x40\n        /* \"#utility.yul\":1917:1926   */\n      dup4\n        /* \"#utility.yul\":1908:1915   */\n      dup6\n        /* \"#utility.yul\":1904:1927   */\n      sub\n        /* \"#utility.yul\":1900:1932   */\n      slt\n        /* \"#utility.yul\":1897:2016   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":1935:2014   */\n      tag_356\n      tag_277\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1897:2016   */\n    tag_355:\n        /* \"#utility.yul\":2055:2056   */\n      0x00\n        /* \"#utility.yul\":2080:2133   */\n      tag_357\n        /* \"#utility.yul\":2125:2132   */\n      dup6\n        /* \"#utility.yul\":2116:2122   */\n      dup3\n        /* \"#utility.yul\":2105:2114   */\n      dup7\n        /* \"#utility.yul\":2101:2123   */\n      add\n        /* \"#utility.yul\":2080:2133   */\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2070:2133   */\n      swap3\n      pop\n        /* \"#utility.yul\":2026:2143   */\n      pop\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2208:2261   */\n      tag_358\n        /* \"#utility.yul\":2253:2260   */\n      dup6\n        /* \"#utility.yul\":2244:2250   */\n      dup3\n        /* \"#utility.yul\":2233:2242   */\n      dup7\n        /* \"#utility.yul\":2229:2251   */\n      add\n        /* \"#utility.yul\":2208:2261   */\n      tag_281\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2198:2261   */\n      swap2\n      pop\n        /* \"#utility.yul\":2153:2271   */\n      pop\n        /* \"#utility.yul\":1804:2278   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2284:2410   */\n    tag_285:\n        /* \"#utility.yul\":2321:2328   */\n      0x00\n        /* \"#utility.yul\":2361:2403   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2354:2359   */\n      dup3\n        /* \"#utility.yul\":2350:2404   */\n      and\n        /* \"#utility.yul\":2339:2404   */\n      swap1\n      pop\n        /* \"#utility.yul\":2284:2410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2416:2512   */\n    tag_286:\n        /* \"#utility.yul\":2453:2460   */\n      0x00\n        /* \"#utility.yul\":2482:2506   */\n      tag_361\n        /* \"#utility.yul\":2500:2505   */\n      dup3\n        /* \"#utility.yul\":2482:2506   */\n      tag_285\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2471:2506   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2636   */\n    tag_287:\n        /* \"#utility.yul\":2605:2629   */\n      tag_363\n        /* \"#utility.yul\":2623:2628   */\n      dup2\n        /* \"#utility.yul\":2605:2629   */\n      tag_286\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2600:2603   */\n      dup3\n        /* \"#utility.yul\":2593:2630   */\n      mstore\n        /* \"#utility.yul\":2518:2636   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2642:2864   */\n    tag_59:\n        /* \"#utility.yul\":2735:2739   */\n      0x00\n        /* \"#utility.yul\":2773:2775   */\n      0x20\n        /* \"#utility.yul\":2762:2771   */\n      dup3\n        /* \"#utility.yul\":2758:2776   */\n      add\n        /* \"#utility.yul\":2750:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2857   */\n      tag_365\n        /* \"#utility.yul\":2854:2855   */\n      0x00\n        /* \"#utility.yul\":2843:2852   */\n      dup4\n        /* \"#utility.yul\":2839:2856   */\n      add\n        /* \"#utility.yul\":2830:2836   */\n      dup5\n        /* \"#utility.yul\":2786:2857   */\n      tag_287\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2642:2864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:2992   */\n    tag_288:\n        /* \"#utility.yul\":2943:2967   */\n      tag_367\n        /* \"#utility.yul\":2961:2966   */\n      dup2\n        /* \"#utility.yul\":2943:2967   */\n      tag_286\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2936:2941   */\n      dup2\n        /* \"#utility.yul\":2933:2968   */\n      eq\n        /* \"#utility.yul\":2923:2986   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2923:2986   */\n    tag_368:\n        /* \"#utility.yul\":2870:2992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3137   */\n    tag_289:\n        /* \"#utility.yul\":3044:3049   */\n      0x00\n        /* \"#utility.yul\":3082:3088   */\n      dup2\n        /* \"#utility.yul\":3069:3089   */\n      calldataload\n        /* \"#utility.yul\":3060:3089   */\n      swap1\n      pop\n        /* \"#utility.yul\":3098:3131   */\n      tag_370\n        /* \"#utility.yul\":3125:3130   */\n      dup2\n        /* \"#utility.yul\":3098:3131   */\n      tag_288\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2998:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3617   */\n    tag_66:\n        /* \"#utility.yul\":3211:3217   */\n      0x00\n        /* \"#utility.yul\":3219:3225   */\n      dup1\n        /* \"#utility.yul\":3268:3270   */\n      0x40\n        /* \"#utility.yul\":3256:3265   */\n      dup4\n        /* \"#utility.yul\":3247:3254   */\n      dup6\n        /* \"#utility.yul\":3243:3266   */\n      sub\n        /* \"#utility.yul\":3239:3271   */\n      slt\n        /* \"#utility.yul\":3236:3355   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":3274:3353   */\n      tag_373\n      tag_277\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3236:3355   */\n    tag_372:\n        /* \"#utility.yul\":3394:3395   */\n      0x00\n        /* \"#utility.yul\":3419:3472   */\n      tag_374\n        /* \"#utility.yul\":3464:3471   */\n      dup6\n        /* \"#utility.yul\":3455:3461   */\n      dup3\n        /* \"#utility.yul\":3444:3453   */\n      dup7\n        /* \"#utility.yul\":3440:3462   */\n      add\n        /* \"#utility.yul\":3419:3472   */\n      tag_289\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3409:3472   */\n      swap3\n      pop\n        /* \"#utility.yul\":3365:3482   */\n      pop\n        /* \"#utility.yul\":3521:3523   */\n      0x20\n        /* \"#utility.yul\":3547:3600   */\n      tag_375\n        /* \"#utility.yul\":3592:3599   */\n      dup6\n        /* \"#utility.yul\":3583:3589   */\n      dup3\n        /* \"#utility.yul\":3572:3581   */\n      dup7\n        /* \"#utility.yul\":3568:3590   */\n      add\n        /* \"#utility.yul\":3547:3600   */\n      tag_281\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3537:3600   */\n      swap2\n      pop\n        /* \"#utility.yul\":3492:3610   */\n      pop\n        /* \"#utility.yul\":3143:3617   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3955   */\n    tag_69:\n        /* \"#utility.yul\":3744:3748   */\n      0x00\n        /* \"#utility.yul\":3782:3784   */\n      0x40\n        /* \"#utility.yul\":3771:3780   */\n      dup3\n        /* \"#utility.yul\":3767:3785   */\n      add\n        /* \"#utility.yul\":3759:3785   */\n      swap1\n      pop\n        /* \"#utility.yul\":3795:3866   */\n      tag_377\n        /* \"#utility.yul\":3863:3864   */\n      0x00\n        /* \"#utility.yul\":3852:3861   */\n      dup4\n        /* \"#utility.yul\":3848:3865   */\n      add\n        /* \"#utility.yul\":3839:3845   */\n      dup6\n        /* \"#utility.yul\":3795:3866   */\n      tag_284\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3876:3948   */\n      tag_378\n        /* \"#utility.yul\":3944:3946   */\n      0x20\n        /* \"#utility.yul\":3933:3942   */\n      dup4\n        /* \"#utility.yul\":3929:3947   */\n      add\n        /* \"#utility.yul\":3920:3926   */\n      dup5\n        /* \"#utility.yul\":3876:3948   */\n      tag_284\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3623:3955   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4580   */\n    tag_72:\n        /* \"#utility.yul\":4038:4044   */\n      0x00\n        /* \"#utility.yul\":4046:4052   */\n      dup1\n        /* \"#utility.yul\":4054:4060   */\n      0x00\n        /* \"#utility.yul\":4103:4105   */\n      0x60\n        /* \"#utility.yul\":4091:4100   */\n      dup5\n        /* \"#utility.yul\":4082:4089   */\n      dup7\n        /* \"#utility.yul\":4078:4101   */\n      sub\n        /* \"#utility.yul\":4074:4106   */\n      slt\n        /* \"#utility.yul\":4071:4190   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":4109:4188   */\n      tag_381\n      tag_277\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4071:4190   */\n    tag_380:\n        /* \"#utility.yul\":4229:4230   */\n      0x00\n        /* \"#utility.yul\":4254:4307   */\n      tag_382\n        /* \"#utility.yul\":4299:4306   */\n      dup7\n        /* \"#utility.yul\":4290:4296   */\n      dup3\n        /* \"#utility.yul\":4279:4288   */\n      dup8\n        /* \"#utility.yul\":4275:4297   */\n      add\n        /* \"#utility.yul\":4254:4307   */\n      tag_281\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4244:4307   */\n      swap4\n      pop\n        /* \"#utility.yul\":4200:4317   */\n      pop\n        /* \"#utility.yul\":4356:4358   */\n      0x20\n        /* \"#utility.yul\":4382:4435   */\n      tag_383\n        /* \"#utility.yul\":4427:4434   */\n      dup7\n        /* \"#utility.yul\":4418:4424   */\n      dup3\n        /* \"#utility.yul\":4407:4416   */\n      dup8\n        /* \"#utility.yul\":4403:4425   */\n      add\n        /* \"#utility.yul\":4382:4435   */\n      tag_281\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4372:4435   */\n      swap3\n      pop\n        /* \"#utility.yul\":4327:4445   */\n      pop\n        /* \"#utility.yul\":4484:4486   */\n      0x40\n        /* \"#utility.yul\":4510:4563   */\n      tag_384\n        /* \"#utility.yul\":4555:4562   */\n      dup7\n        /* \"#utility.yul\":4546:4552   */\n      dup3\n        /* \"#utility.yul\":4535:4544   */\n      dup8\n        /* \"#utility.yul\":4531:4553   */\n      add\n        /* \"#utility.yul\":4510:4563   */\n      tag_281\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4500:4563   */\n      swap2\n      pop\n        /* \"#utility.yul\":4455:4573   */\n      pop\n        /* \"#utility.yul\":3961:4580   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4586:4915   */\n    tag_77:\n        /* \"#utility.yul\":4645:4651   */\n      0x00\n        /* \"#utility.yul\":4694:4696   */\n      0x20\n        /* \"#utility.yul\":4682:4691   */\n      dup3\n        /* \"#utility.yul\":4673:4680   */\n      dup5\n        /* \"#utility.yul\":4669:4692   */\n      sub\n        /* \"#utility.yul\":4665:4697   */\n      slt\n        /* \"#utility.yul\":4662:4781   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":4700:4779   */\n      tag_387\n      tag_277\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4662:4781   */\n    tag_386:\n        /* \"#utility.yul\":4820:4821   */\n      0x00\n        /* \"#utility.yul\":4845:4898   */\n      tag_388\n        /* \"#utility.yul\":4890:4897   */\n      dup5\n        /* \"#utility.yul\":4881:4887   */\n      dup3\n        /* \"#utility.yul\":4870:4879   */\n      dup6\n        /* \"#utility.yul\":4866:4888   */\n      add\n        /* \"#utility.yul\":4845:4898   */\n      tag_289\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4835:4898   */\n      swap2\n      pop\n        /* \"#utility.yul\":4791:4908   */\n      pop\n        /* \"#utility.yul\":4586:4915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4921:4981   */\n    tag_290:\n        /* \"#utility.yul\":4949:4952   */\n      0x00\n        /* \"#utility.yul\":4970:4975   */\n      dup2\n        /* \"#utility.yul\":4963:4975   */\n      swap1\n      pop\n        /* \"#utility.yul\":4921:4981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4987:5129   */\n    tag_291:\n        /* \"#utility.yul\":5037:5046   */\n      0x00\n        /* \"#utility.yul\":5070:5123   */\n      tag_391\n        /* \"#utility.yul\":5088:5122   */\n      tag_392\n        /* \"#utility.yul\":5097:5121   */\n      tag_393\n        /* \"#utility.yul\":5115:5120   */\n      dup5\n        /* \"#utility.yul\":5097:5121   */\n      tag_285\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5088:5122   */\n      tag_290\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5070:5123   */\n      tag_285\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5057:5123   */\n      swap1\n      pop\n        /* \"#utility.yul\":4987:5129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5261   */\n    tag_292:\n        /* \"#utility.yul\":5185:5194   */\n      0x00\n        /* \"#utility.yul\":5218:5255   */\n      tag_395\n        /* \"#utility.yul\":5249:5254   */\n      dup3\n        /* \"#utility.yul\":5218:5255   */\n      tag_291\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5205:5255   */\n      swap1\n      pop\n        /* \"#utility.yul\":5135:5261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5267:5407   */\n    tag_293:\n        /* \"#utility.yul\":5331:5340   */\n      0x00\n        /* \"#utility.yul\":5364:5401   */\n      tag_397\n        /* \"#utility.yul\":5395:5400   */\n      dup3\n        /* \"#utility.yul\":5364:5401   */\n      tag_292\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5351:5401   */\n      swap1\n      pop\n        /* \"#utility.yul\":5267:5407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5413:5572   */\n    tag_294:\n        /* \"#utility.yul\":5514:5565   */\n      tag_399\n        /* \"#utility.yul\":5559:5564   */\n      dup2\n        /* \"#utility.yul\":5514:5565   */\n      tag_293\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5509:5512   */\n      dup3\n        /* \"#utility.yul\":5502:5566   */\n      mstore\n        /* \"#utility.yul\":5413:5572   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5578:5828   */\n    tag_88:\n        /* \"#utility.yul\":5685:5689   */\n      0x00\n        /* \"#utility.yul\":5723:5725   */\n      0x20\n        /* \"#utility.yul\":5712:5721   */\n      dup3\n        /* \"#utility.yul\":5708:5726   */\n      add\n        /* \"#utility.yul\":5700:5726   */\n      swap1\n      pop\n        /* \"#utility.yul\":5736:5821   */\n      tag_401\n        /* \"#utility.yul\":5818:5819   */\n      0x00\n        /* \"#utility.yul\":5807:5816   */\n      dup4\n        /* \"#utility.yul\":5803:5820   */\n      add\n        /* \"#utility.yul\":5794:5800   */\n      dup5\n        /* \"#utility.yul\":5736:5821   */\n      tag_294\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5578:5828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5834:6003   */\n    tag_295:\n        /* \"#utility.yul\":5918:5929   */\n      0x00\n        /* \"#utility.yul\":5952:5958   */\n      dup3\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5959   */\n      mstore\n        /* \"#utility.yul\":5992:5996   */\n      0x20\n        /* \"#utility.yul\":5987:5990   */\n      dup3\n        /* \"#utility.yul\":5983:5997   */\n      add\n        /* \"#utility.yul\":5968:5997   */\n      swap1\n      pop\n        /* \"#utility.yul\":5834:6003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6009:6182   */\n    tag_296:\n        /* \"#utility.yul\":6149:6174   */\n      0x6f6e6c792061646d696e732061726520616c6c6f776564000000000000000000\n        /* \"#utility.yul\":6145:6146   */\n      0x00\n        /* \"#utility.yul\":6137:6143   */\n      dup3\n        /* \"#utility.yul\":6133:6147   */\n      add\n        /* \"#utility.yul\":6126:6175   */\n      mstore\n        /* \"#utility.yul\":6009:6182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6188:6554   */\n    tag_297:\n        /* \"#utility.yul\":6330:6333   */\n      0x00\n        /* \"#utility.yul\":6351:6418   */\n      tag_405\n        /* \"#utility.yul\":6415:6417   */\n      0x17\n        /* \"#utility.yul\":6410:6413   */\n      dup4\n        /* \"#utility.yul\":6351:6418   */\n      tag_295\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6344:6418   */\n      swap2\n      pop\n        /* \"#utility.yul\":6427:6520   */\n      tag_406\n        /* \"#utility.yul\":6516:6519   */\n      dup3\n        /* \"#utility.yul\":6427:6520   */\n      tag_296\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6545:6547   */\n      0x20\n        /* \"#utility.yul\":6540:6543   */\n      dup3\n        /* \"#utility.yul\":6536:6548   */\n      add\n        /* \"#utility.yul\":6529:6548   */\n      swap1\n      pop\n        /* \"#utility.yul\":6188:6554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6560:6979   */\n    tag_95:\n        /* \"#utility.yul\":6726:6730   */\n      0x00\n        /* \"#utility.yul\":6764:6766   */\n      0x20\n        /* \"#utility.yul\":6753:6762   */\n      dup3\n        /* \"#utility.yul\":6749:6767   */\n      add\n        /* \"#utility.yul\":6741:6767   */\n      swap1\n      pop\n        /* \"#utility.yul\":6813:6822   */\n      dup2\n        /* \"#utility.yul\":6807:6811   */\n      dup2\n        /* \"#utility.yul\":6803:6823   */\n      sub\n        /* \"#utility.yul\":6799:6800   */\n      0x00\n        /* \"#utility.yul\":6788:6797   */\n      dup4\n        /* \"#utility.yul\":6784:6801   */\n      add\n        /* \"#utility.yul\":6777:6824   */\n      mstore\n        /* \"#utility.yul\":6841:6972   */\n      tag_408\n        /* \"#utility.yul\":6967:6971   */\n      dup2\n        /* \"#utility.yul\":6841:6972   */\n      tag_297\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6833:6972   */\n      swap1\n      pop\n        /* \"#utility.yul\":6560:6979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7156   */\n    tag_298:\n        /* \"#utility.yul\":7125:7148   */\n      0x6e6f20756e7374616b65206461746120666f756e640000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7113:7119   */\n      dup3\n        /* \"#utility.yul\":7109:7123   */\n      add\n        /* \"#utility.yul\":7102:7149   */\n      mstore\n        /* \"#utility.yul\":6985:7156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7162:7528   */\n    tag_299:\n        /* \"#utility.yul\":7304:7307   */\n      0x00\n        /* \"#utility.yul\":7325:7392   */\n      tag_411\n        /* \"#utility.yul\":7389:7391   */\n      0x15\n        /* \"#utility.yul\":7384:7387   */\n      dup4\n        /* \"#utility.yul\":7325:7392   */\n      tag_295\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7318:7392   */\n      swap2\n      pop\n        /* \"#utility.yul\":7401:7494   */\n      tag_412\n        /* \"#utility.yul\":7490:7493   */\n      dup3\n        /* \"#utility.yul\":7401:7494   */\n      tag_298\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7519:7521   */\n      0x20\n        /* \"#utility.yul\":7514:7517   */\n      dup3\n        /* \"#utility.yul\":7510:7522   */\n      add\n        /* \"#utility.yul\":7503:7522   */\n      swap1\n      pop\n        /* \"#utility.yul\":7162:7528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7534:7953   */\n    tag_103:\n        /* \"#utility.yul\":7700:7704   */\n      0x00\n        /* \"#utility.yul\":7738:7740   */\n      0x20\n        /* \"#utility.yul\":7727:7736   */\n      dup3\n        /* \"#utility.yul\":7723:7741   */\n      add\n        /* \"#utility.yul\":7715:7741   */\n      swap1\n      pop\n        /* \"#utility.yul\":7787:7796   */\n      dup2\n        /* \"#utility.yul\":7781:7785   */\n      dup2\n        /* \"#utility.yul\":7777:7797   */\n      sub\n        /* \"#utility.yul\":7773:7774   */\n      0x00\n        /* \"#utility.yul\":7762:7771   */\n      dup4\n        /* \"#utility.yul\":7758:7775   */\n      add\n        /* \"#utility.yul\":7751:7798   */\n      mstore\n        /* \"#utility.yul\":7815:7946   */\n      tag_414\n        /* \"#utility.yul\":7941:7945   */\n      dup2\n        /* \"#utility.yul\":7815:7946   */\n      tag_299\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7807:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7534:7953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7959:8130   */\n    tag_300:\n        /* \"#utility.yul\":8099:8122   */\n      0x706572696f64206973206e6f7420657870697265640000000000000000000000\n        /* \"#utility.yul\":8095:8096   */\n      0x00\n        /* \"#utility.yul\":8087:8093   */\n      dup3\n        /* \"#utility.yul\":8083:8097   */\n      add\n        /* \"#utility.yul\":8076:8123   */\n      mstore\n        /* \"#utility.yul\":7959:8130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8136:8502   */\n    tag_301:\n        /* \"#utility.yul\":8278:8281   */\n      0x00\n        /* \"#utility.yul\":8299:8366   */\n      tag_417\n        /* \"#utility.yul\":8363:8365   */\n      0x15\n        /* \"#utility.yul\":8358:8361   */\n      dup4\n        /* \"#utility.yul\":8299:8366   */\n      tag_295\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8292:8366   */\n      swap2\n      pop\n        /* \"#utility.yul\":8375:8468   */\n      tag_418\n        /* \"#utility.yul\":8464:8467   */\n      dup3\n        /* \"#utility.yul\":8375:8468   */\n      tag_300\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8493:8495   */\n      0x20\n        /* \"#utility.yul\":8488:8491   */\n      dup3\n        /* \"#utility.yul\":8484:8496   */\n      add\n        /* \"#utility.yul\":8477:8496   */\n      swap1\n      pop\n        /* \"#utility.yul\":8136:8502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8508:8927   */\n    tag_106:\n        /* \"#utility.yul\":8674:8678   */\n      0x00\n        /* \"#utility.yul\":8712:8714   */\n      0x20\n        /* \"#utility.yul\":8701:8710   */\n      dup3\n        /* \"#utility.yul\":8697:8715   */\n      add\n        /* \"#utility.yul\":8689:8715   */\n      swap1\n      pop\n        /* \"#utility.yul\":8761:8770   */\n      dup2\n        /* \"#utility.yul\":8755:8759   */\n      dup2\n        /* \"#utility.yul\":8751:8771   */\n      sub\n        /* \"#utility.yul\":8747:8748   */\n      0x00\n        /* \"#utility.yul\":8736:8745   */\n      dup4\n        /* \"#utility.yul\":8732:8749   */\n      add\n        /* \"#utility.yul\":8725:8772   */\n      mstore\n        /* \"#utility.yul\":8789:8920   */\n      tag_420\n        /* \"#utility.yul\":8915:8919   */\n      dup2\n        /* \"#utility.yul\":8789:8920   */\n      tag_301\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8781:8920   */\n      swap1\n      pop\n        /* \"#utility.yul\":8508:8927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8933:9076   */\n    tag_302:\n        /* \"#utility.yul\":8990:8995   */\n      0x00\n        /* \"#utility.yul\":9021:9027   */\n      dup2\n        /* \"#utility.yul\":9015:9028   */\n      mload\n        /* \"#utility.yul\":9006:9028   */\n      swap1\n      pop\n        /* \"#utility.yul\":9037:9070   */\n      tag_422\n        /* \"#utility.yul\":9064:9069   */\n      dup2\n        /* \"#utility.yul\":9037:9070   */\n      tag_280\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8933:9076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9082:9433   */\n    tag_122:\n        /* \"#utility.yul\":9152:9158   */\n      0x00\n        /* \"#utility.yul\":9201:9203   */\n      0x20\n        /* \"#utility.yul\":9189:9198   */\n      dup3\n        /* \"#utility.yul\":9180:9187   */\n      dup5\n        /* \"#utility.yul\":9176:9199   */\n      sub\n        /* \"#utility.yul\":9172:9204   */\n      slt\n        /* \"#utility.yul\":9169:9288   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9207:9286   */\n      tag_425\n      tag_277\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9169:9288   */\n    tag_424:\n        /* \"#utility.yul\":9327:9328   */\n      0x00\n        /* \"#utility.yul\":9352:9416   */\n      tag_426\n        /* \"#utility.yul\":9408:9415   */\n      dup5\n        /* \"#utility.yul\":9399:9405   */\n      dup3\n        /* \"#utility.yul\":9388:9397   */\n      dup6\n        /* \"#utility.yul\":9384:9406   */\n      add\n        /* \"#utility.yul\":9352:9416   */\n      tag_302\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9342:9416   */\n      swap2\n      pop\n        /* \"#utility.yul\":9298:9426   */\n      pop\n        /* \"#utility.yul\":9082:9433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9439:9675   */\n    tag_303:\n        /* \"#utility.yul\":9579:9613   */\n      0x436f6e747261637420646f6573206e6f74206861766520656e6f756768206261\n        /* \"#utility.yul\":9575:9576   */\n      0x00\n        /* \"#utility.yul\":9567:9573   */\n      dup3\n        /* \"#utility.yul\":9563:9577   */\n      add\n        /* \"#utility.yul\":9556:9614   */\n      mstore\n        /* \"#utility.yul\":9648:9667   */\n      0x6c616e636520746f207769746864726177000000000000000000000000000000\n        /* \"#utility.yul\":9643:9645   */\n      0x20\n        /* \"#utility.yul\":9635:9641   */\n      dup3\n        /* \"#utility.yul\":9631:9646   */\n      add\n        /* \"#utility.yul\":9624:9668   */\n      mstore\n        /* \"#utility.yul\":9439:9675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9681:10047   */\n    tag_304:\n        /* \"#utility.yul\":9823:9826   */\n      0x00\n        /* \"#utility.yul\":9844:9911   */\n      tag_429\n        /* \"#utility.yul\":9908:9910   */\n      0x31\n        /* \"#utility.yul\":9903:9906   */\n      dup4\n        /* \"#utility.yul\":9844:9911   */\n      tag_295\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9837:9911   */\n      swap2\n      pop\n        /* \"#utility.yul\":9920:10013   */\n      tag_430\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":9920:10013   */\n      tag_303\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10038:10040   */\n      0x40\n        /* \"#utility.yul\":10033:10036   */\n      dup3\n        /* \"#utility.yul\":10029:10041   */\n      add\n        /* \"#utility.yul\":10022:10041   */\n      swap1\n      pop\n        /* \"#utility.yul\":9681:10047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10053:10472   */\n    tag_125:\n        /* \"#utility.yul\":10219:10223   */\n      0x00\n        /* \"#utility.yul\":10257:10259   */\n      0x20\n        /* \"#utility.yul\":10246:10255   */\n      dup3\n        /* \"#utility.yul\":10242:10260   */\n      add\n        /* \"#utility.yul\":10234:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":10306:10315   */\n      dup2\n        /* \"#utility.yul\":10300:10304   */\n      dup2\n        /* \"#utility.yul\":10296:10316   */\n      sub\n        /* \"#utility.yul\":10292:10293   */\n      0x00\n        /* \"#utility.yul\":10281:10290   */\n      dup4\n        /* \"#utility.yul\":10277:10294   */\n      add\n        /* \"#utility.yul\":10270:10317   */\n      mstore\n        /* \"#utility.yul\":10334:10465   */\n      tag_432\n        /* \"#utility.yul\":10460:10464   */\n      dup2\n        /* \"#utility.yul\":10334:10465   */\n      tag_304\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10326:10465   */\n      swap1\n      pop\n        /* \"#utility.yul\":10053:10472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10478:10643   */\n    tag_305:\n        /* \"#utility.yul\":10618:10635   */\n      0x616464206d6f726520616d6f756e740000000000000000000000000000000000\n        /* \"#utility.yul\":10614:10615   */\n      0x00\n        /* \"#utility.yul\":10606:10612   */\n      dup3\n        /* \"#utility.yul\":10602:10616   */\n      add\n        /* \"#utility.yul\":10595:10636   */\n      mstore\n        /* \"#utility.yul\":10478:10643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10649:11015   */\n    tag_306:\n        /* \"#utility.yul\":10791:10794   */\n      0x00\n        /* \"#utility.yul\":10812:10879   */\n      tag_435\n        /* \"#utility.yul\":10876:10878   */\n      0x0f\n        /* \"#utility.yul\":10871:10874   */\n      dup4\n        /* \"#utility.yul\":10812:10879   */\n      tag_295\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10805:10879   */\n      swap2\n      pop\n        /* \"#utility.yul\":10888:10981   */\n      tag_436\n        /* \"#utility.yul\":10977:10980   */\n      dup3\n        /* \"#utility.yul\":10888:10981   */\n      tag_305\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11006:11008   */\n      0x20\n        /* \"#utility.yul\":11001:11004   */\n      dup3\n        /* \"#utility.yul\":10997:11009   */\n      add\n        /* \"#utility.yul\":10990:11009   */\n      swap1\n      pop\n        /* \"#utility.yul\":10649:11015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11021:11440   */\n    tag_146:\n        /* \"#utility.yul\":11187:11191   */\n      0x00\n        /* \"#utility.yul\":11225:11227   */\n      0x20\n        /* \"#utility.yul\":11214:11223   */\n      dup3\n        /* \"#utility.yul\":11210:11228   */\n      add\n        /* \"#utility.yul\":11202:11228   */\n      swap1\n      pop\n        /* \"#utility.yul\":11274:11283   */\n      dup2\n        /* \"#utility.yul\":11268:11272   */\n      dup2\n        /* \"#utility.yul\":11264:11284   */\n      sub\n        /* \"#utility.yul\":11260:11261   */\n      0x00\n        /* \"#utility.yul\":11249:11258   */\n      dup4\n        /* \"#utility.yul\":11245:11262   */\n      add\n        /* \"#utility.yul\":11238:11285   */\n      mstore\n        /* \"#utility.yul\":11302:11433   */\n      tag_438\n        /* \"#utility.yul\":11428:11432   */\n      dup2\n        /* \"#utility.yul\":11302:11433   */\n      tag_306\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11294:11433   */\n      swap1\n      pop\n        /* \"#utility.yul\":11021:11440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11446:11611   */\n    tag_307:\n        /* \"#utility.yul\":11586:11603   */\n      0x616464206c65737320616d6f756e740000000000000000000000000000000000\n        /* \"#utility.yul\":11582:11583   */\n      0x00\n        /* \"#utility.yul\":11574:11580   */\n      dup3\n        /* \"#utility.yul\":11570:11584   */\n      add\n        /* \"#utility.yul\":11563:11604   */\n      mstore\n        /* \"#utility.yul\":11446:11611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11617:11983   */\n    tag_308:\n        /* \"#utility.yul\":11759:11762   */\n      0x00\n        /* \"#utility.yul\":11780:11847   */\n      tag_441\n        /* \"#utility.yul\":11844:11846   */\n      0x0f\n        /* \"#utility.yul\":11839:11842   */\n      dup4\n        /* \"#utility.yul\":11780:11847   */\n      tag_295\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11773:11847   */\n      swap2\n      pop\n        /* \"#utility.yul\":11856:11949   */\n      tag_442\n        /* \"#utility.yul\":11945:11948   */\n      dup3\n        /* \"#utility.yul\":11856:11949   */\n      tag_307\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"#utility.yul\":11969:11972   */\n      dup3\n        /* \"#utility.yul\":11965:11977   */\n      add\n        /* \"#utility.yul\":11958:11977   */\n      swap1\n      pop\n        /* \"#utility.yul\":11617:11983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11989:12408   */\n    tag_149:\n        /* \"#utility.yul\":12155:12159   */\n      0x00\n        /* \"#utility.yul\":12193:12195   */\n      0x20\n        /* \"#utility.yul\":12182:12191   */\n      dup3\n        /* \"#utility.yul\":12178:12196   */\n      add\n        /* \"#utility.yul\":12170:12196   */\n      swap1\n      pop\n        /* \"#utility.yul\":12242:12251   */\n      dup2\n        /* \"#utility.yul\":12236:12240   */\n      dup2\n        /* \"#utility.yul\":12232:12252   */\n      sub\n        /* \"#utility.yul\":12228:12229   */\n      0x00\n        /* \"#utility.yul\":12217:12226   */\n      dup4\n        /* \"#utility.yul\":12213:12230   */\n      add\n        /* \"#utility.yul\":12206:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12401   */\n      tag_444\n        /* \"#utility.yul\":12396:12400   */\n      dup2\n        /* \"#utility.yul\":12270:12401   */\n      tag_308\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":12262:12401   */\n      swap1\n      pop\n        /* \"#utility.yul\":11989:12408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12414:12577   */\n    tag_309:\n        /* \"#utility.yul\":12554:12569   */\n      0x696e76616c6964206d6f6e746800000000000000000000000000000000000000\n        /* \"#utility.yul\":12550:12551   */\n      0x00\n        /* \"#utility.yul\":12542:12548   */\n      dup3\n        /* \"#utility.yul\":12538:12552   */\n      add\n        /* \"#utility.yul\":12531:12570   */\n      mstore\n        /* \"#utility.yul\":12414:12577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12583:12949   */\n    tag_310:\n        /* \"#utility.yul\":12725:12728   */\n      0x00\n        /* \"#utility.yul\":12746:12813   */\n      tag_447\n        /* \"#utility.yul\":12810:12812   */\n      0x0d\n        /* \"#utility.yul\":12805:12808   */\n      dup4\n        /* \"#utility.yul\":12746:12813   */\n      tag_295\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12739:12813   */\n      swap2\n      pop\n        /* \"#utility.yul\":12822:12915   */\n      tag_448\n        /* \"#utility.yul\":12911:12914   */\n      dup3\n        /* \"#utility.yul\":12822:12915   */\n      tag_309\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12940:12942   */\n      0x20\n        /* \"#utility.yul\":12935:12938   */\n      dup3\n        /* \"#utility.yul\":12931:12943   */\n      add\n        /* \"#utility.yul\":12924:12943   */\n      swap1\n      pop\n        /* \"#utility.yul\":12583:12949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12955:13374   */\n    tag_152:\n        /* \"#utility.yul\":13121:13125   */\n      0x00\n        /* \"#utility.yul\":13159:13161   */\n      0x20\n        /* \"#utility.yul\":13148:13157   */\n      dup3\n        /* \"#utility.yul\":13144:13162   */\n      add\n        /* \"#utility.yul\":13136:13162   */\n      swap1\n      pop\n        /* \"#utility.yul\":13208:13217   */\n      dup2\n        /* \"#utility.yul\":13202:13206   */\n      dup2\n        /* \"#utility.yul\":13198:13218   */\n      sub\n        /* \"#utility.yul\":13194:13195   */\n      0x00\n        /* \"#utility.yul\":13183:13192   */\n      dup4\n        /* \"#utility.yul\":13179:13196   */\n      add\n        /* \"#utility.yul\":13172:13219   */\n      mstore\n        /* \"#utility.yul\":13236:13367   */\n      tag_450\n        /* \"#utility.yul\":13362:13366   */\n      dup2\n        /* \"#utility.yul\":13236:13367   */\n      tag_310\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13228:13367   */\n      swap1\n      pop\n        /* \"#utility.yul\":12955:13374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13380:13544   */\n    tag_311:\n        /* \"#utility.yul\":13520:13536   */\n      0x616c7265616479207374616b6564000000000000000000000000000000000000\n        /* \"#utility.yul\":13516:13517   */\n      0x00\n        /* \"#utility.yul\":13508:13514   */\n      dup3\n        /* \"#utility.yul\":13504:13518   */\n      add\n        /* \"#utility.yul\":13497:13537   */\n      mstore\n        /* \"#utility.yul\":13380:13544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13550:13916   */\n    tag_312:\n        /* \"#utility.yul\":13692:13695   */\n      0x00\n        /* \"#utility.yul\":13713:13780   */\n      tag_453\n        /* \"#utility.yul\":13777:13779   */\n      0x0e\n        /* \"#utility.yul\":13772:13775   */\n      dup4\n        /* \"#utility.yul\":13713:13780   */\n      tag_295\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":13706:13780   */\n      swap2\n      pop\n        /* \"#utility.yul\":13789:13882   */\n      tag_454\n        /* \"#utility.yul\":13878:13881   */\n      dup3\n        /* \"#utility.yul\":13789:13882   */\n      tag_311\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13907:13909   */\n      0x20\n        /* \"#utility.yul\":13902:13905   */\n      dup3\n        /* \"#utility.yul\":13898:13910   */\n      add\n        /* \"#utility.yul\":13891:13910   */\n      swap1\n      pop\n        /* \"#utility.yul\":13550:13916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13922:14341   */\n    tag_155:\n        /* \"#utility.yul\":14088:14092   */\n      0x00\n        /* \"#utility.yul\":14126:14128   */\n      0x20\n        /* \"#utility.yul\":14115:14124   */\n      dup3\n        /* \"#utility.yul\":14111:14129   */\n      add\n        /* \"#utility.yul\":14103:14129   */\n      swap1\n      pop\n        /* \"#utility.yul\":14175:14184   */\n      dup2\n        /* \"#utility.yul\":14169:14173   */\n      dup2\n        /* \"#utility.yul\":14165:14185   */\n      sub\n        /* \"#utility.yul\":14161:14162   */\n      0x00\n        /* \"#utility.yul\":14150:14159   */\n      dup4\n        /* \"#utility.yul\":14146:14163   */\n      add\n        /* \"#utility.yul\":14139:14186   */\n      mstore\n        /* \"#utility.yul\":14203:14334   */\n      tag_456\n        /* \"#utility.yul\":14329:14333   */\n      dup2\n        /* \"#utility.yul\":14203:14334   */\n      tag_312\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14195:14334   */\n      swap1\n      pop\n        /* \"#utility.yul\":13922:14341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14347:14527   */\n    tag_313:\n        /* \"#utility.yul\":14395:14472   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14392:14393   */\n      0x00\n        /* \"#utility.yul\":14385:14473   */\n      mstore\n        /* \"#utility.yul\":14492:14496   */\n      0x11\n        /* \"#utility.yul\":14489:14490   */\n      0x04\n        /* \"#utility.yul\":14482:14497   */\n      mstore\n        /* \"#utility.yul\":14516:14520   */\n      0x24\n        /* \"#utility.yul\":14513:14514   */\n      0x00\n        /* \"#utility.yul\":14506:14521   */\n      revert\n        /* \"#utility.yul\":14533:14943   */\n    tag_160:\n        /* \"#utility.yul\":14573:14580   */\n      0x00\n        /* \"#utility.yul\":14596:14616   */\n      tag_459\n        /* \"#utility.yul\":14614:14615   */\n      dup3\n        /* \"#utility.yul\":14596:14616   */\n      tag_279\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14591:14616   */\n      swap2\n      pop\n        /* \"#utility.yul\":14630:14650   */\n      tag_460\n        /* \"#utility.yul\":14648:14649   */\n      dup4\n        /* \"#utility.yul\":14630:14650   */\n      tag_279\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":14625:14650   */\n      swap3\n      pop\n        /* \"#utility.yul\":14685:14686   */\n      dup3\n        /* \"#utility.yul\":14682:14683   */\n      dup3\n        /* \"#utility.yul\":14678:14687   */\n      mul\n        /* \"#utility.yul\":14707:14737   */\n      tag_461\n        /* \"#utility.yul\":14725:14736   */\n      dup2\n        /* \"#utility.yul\":14707:14737   */\n      tag_279\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14696:14737   */\n      swap2\n      pop\n        /* \"#utility.yul\":14886:14887   */\n      dup3\n        /* \"#utility.yul\":14877:14884   */\n      dup3\n        /* \"#utility.yul\":14873:14888   */\n      div\n        /* \"#utility.yul\":14870:14871   */\n      dup5\n        /* \"#utility.yul\":14867:14889   */\n      eq\n        /* \"#utility.yul\":14847:14848   */\n      dup4\n        /* \"#utility.yul\":14840:14849   */\n      iszero\n        /* \"#utility.yul\":14820:14903   */\n      or\n        /* \"#utility.yul\":14797:14936   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":14916:14934   */\n      tag_463\n      tag_313\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14797:14936   */\n    tag_462:\n        /* \"#utility.yul\":14581:14943   */\n      pop\n        /* \"#utility.yul\":14533:14943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14949:15034   */\n    tag_314:\n        /* \"#utility.yul\":14994:15001   */\n      0x00\n        /* \"#utility.yul\":15023:15028   */\n      dup2\n        /* \"#utility.yul\":15012:15028   */\n      swap1\n      pop\n        /* \"#utility.yul\":14949:15034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15040:15141   */\n    tag_315:\n        /* \"#utility.yul\":15076:15083   */\n      0x00\n        /* \"#utility.yul\":15116:15134   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15109:15114   */\n      dup3\n        /* \"#utility.yul\":15105:15135   */\n      and\n        /* \"#utility.yul\":15094:15135   */\n      swap1\n      pop\n        /* \"#utility.yul\":15040:15141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15147:15303   */\n    tag_316:\n        /* \"#utility.yul\":15204:15213   */\n      0x00\n        /* \"#utility.yul\":15237:15297   */\n      tag_467\n        /* \"#utility.yul\":15254:15296   */\n      tag_468\n        /* \"#utility.yul\":15263:15295   */\n      tag_469\n        /* \"#utility.yul\":15289:15294   */\n      dup5\n        /* \"#utility.yul\":15263:15295   */\n      tag_314\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15254:15296   */\n      tag_290\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15237:15297   */\n      tag_315\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15224:15297   */\n      swap1\n      pop\n        /* \"#utility.yul\":15147:15303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15309:15454   */\n    tag_317:\n        /* \"#utility.yul\":15403:15447   */\n      tag_471\n        /* \"#utility.yul\":15441:15446   */\n      dup2\n        /* \"#utility.yul\":15403:15447   */\n      tag_316\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15398:15401   */\n      dup3\n        /* \"#utility.yul\":15391:15448   */\n      mstore\n        /* \"#utility.yul\":15309:15454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15460:15696   */\n    tag_173:\n        /* \"#utility.yul\":15560:15564   */\n      0x00\n        /* \"#utility.yul\":15598:15600   */\n      0x20\n        /* \"#utility.yul\":15587:15596   */\n      dup3\n        /* \"#utility.yul\":15583:15601   */\n      add\n        /* \"#utility.yul\":15575:15601   */\n      swap1\n      pop\n        /* \"#utility.yul\":15611:15689   */\n      tag_473\n        /* \"#utility.yul\":15686:15687   */\n      0x00\n        /* \"#utility.yul\":15675:15684   */\n      dup4\n        /* \"#utility.yul\":15671:15688   */\n      add\n        /* \"#utility.yul\":15662:15668   */\n      dup5\n        /* \"#utility.yul\":15611:15689   */\n      tag_317\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15460:15696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15702:15883   */\n    tag_318:\n        /* \"#utility.yul\":15842:15875   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":15838:15839   */\n      0x00\n        /* \"#utility.yul\":15830:15836   */\n      dup3\n        /* \"#utility.yul\":15826:15840   */\n      add\n        /* \"#utility.yul\":15819:15876   */\n      mstore\n        /* \"#utility.yul\":15702:15883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15889:16255   */\n    tag_319:\n        /* \"#utility.yul\":16031:16034   */\n      0x00\n        /* \"#utility.yul\":16052:16119   */\n      tag_476\n        /* \"#utility.yul\":16116:16118   */\n      0x1f\n        /* \"#utility.yul\":16111:16114   */\n      dup4\n        /* \"#utility.yul\":16052:16119   */\n      tag_295\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16045:16119   */\n      swap2\n      pop\n        /* \"#utility.yul\":16128:16221   */\n      tag_477\n        /* \"#utility.yul\":16217:16220   */\n      dup3\n        /* \"#utility.yul\":16128:16221   */\n      tag_318\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16246:16248   */\n      0x20\n        /* \"#utility.yul\":16241:16244   */\n      dup3\n        /* \"#utility.yul\":16237:16249   */\n      add\n        /* \"#utility.yul\":16230:16249   */\n      swap1\n      pop\n        /* \"#utility.yul\":15889:16255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16261:16680   */\n    tag_201:\n        /* \"#utility.yul\":16427:16431   */\n      0x00\n        /* \"#utility.yul\":16465:16467   */\n      0x20\n        /* \"#utility.yul\":16454:16463   */\n      dup3\n        /* \"#utility.yul\":16450:16468   */\n      add\n        /* \"#utility.yul\":16442:16468   */\n      swap1\n      pop\n        /* \"#utility.yul\":16514:16523   */\n      dup2\n        /* \"#utility.yul\":16508:16512   */\n      dup2\n        /* \"#utility.yul\":16504:16524   */\n      sub\n        /* \"#utility.yul\":16500:16501   */\n      0x00\n        /* \"#utility.yul\":16489:16498   */\n      dup4\n        /* \"#utility.yul\":16485:16502   */\n      add\n        /* \"#utility.yul\":16478:16525   */\n      mstore\n        /* \"#utility.yul\":16542:16673   */\n      tag_479\n        /* \"#utility.yul\":16668:16672   */\n      dup2\n        /* \"#utility.yul\":16542:16673   */\n      tag_319\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16534:16673   */\n      swap1\n      pop\n        /* \"#utility.yul\":16261:16680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16686:16877   */\n    tag_204:\n        /* \"#utility.yul\":16726:16729   */\n      0x00\n        /* \"#utility.yul\":16745:16765   */\n      tag_481\n        /* \"#utility.yul\":16763:16764   */\n      dup3\n        /* \"#utility.yul\":16745:16765   */\n      tag_279\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16740:16765   */\n      swap2\n      pop\n        /* \"#utility.yul\":16779:16799   */\n      tag_482\n        /* \"#utility.yul\":16797:16798   */\n      dup4\n        /* \"#utility.yul\":16779:16799   */\n      tag_279\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":16774:16799   */\n      swap3\n      pop\n        /* \"#utility.yul\":16822:16823   */\n      dup3\n        /* \"#utility.yul\":16819:16820   */\n      dup3\n        /* \"#utility.yul\":16815:16824   */\n      add\n        /* \"#utility.yul\":16808:16824   */\n      swap1\n      pop\n        /* \"#utility.yul\":16843:16846   */\n      dup1\n        /* \"#utility.yul\":16840:16841   */\n      dup3\n        /* \"#utility.yul\":16837:16847   */\n      gt\n        /* \"#utility.yul\":16834:16870   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":16850:16868   */\n      tag_484\n      tag_313\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":16834:16870   */\n    tag_483:\n        /* \"#utility.yul\":16686:16877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16883:17215   */\n    tag_208:\n        /* \"#utility.yul\":17004:17008   */\n      0x00\n        /* \"#utility.yul\":17042:17044   */\n      0x40\n        /* \"#utility.yul\":17031:17040   */\n      dup3\n        /* \"#utility.yul\":17027:17045   */\n      add\n        /* \"#utility.yul\":17019:17045   */\n      swap1\n      pop\n        /* \"#utility.yul\":17055:17126   */\n      tag_486\n        /* \"#utility.yul\":17123:17124   */\n      0x00\n        /* \"#utility.yul\":17112:17121   */\n      dup4\n        /* \"#utility.yul\":17108:17125   */\n      add\n        /* \"#utility.yul\":17099:17105   */\n      dup6\n        /* \"#utility.yul\":17055:17126   */\n      tag_287\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":17136:17208   */\n      tag_487\n        /* \"#utility.yul\":17204:17206   */\n      0x20\n        /* \"#utility.yul\":17193:17202   */\n      dup4\n        /* \"#utility.yul\":17189:17207   */\n      add\n        /* \"#utility.yul\":17180:17186   */\n      dup5\n        /* \"#utility.yul\":17136:17208   */\n      tag_284\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16883:17215   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17221:17387   */\n    tag_320:\n        /* \"#utility.yul\":17361:17379   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":17357:17358   */\n      0x00\n        /* \"#utility.yul\":17349:17355   */\n      dup3\n        /* \"#utility.yul\":17345:17359   */\n      add\n        /* \"#utility.yul\":17338:17380   */\n      mstore\n        /* \"#utility.yul\":17221:17387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17393:17759   */\n    tag_321:\n        /* \"#utility.yul\":17535:17538   */\n      0x00\n        /* \"#utility.yul\":17556:17623   */\n      tag_490\n        /* \"#utility.yul\":17620:17622   */\n      0x10\n        /* \"#utility.yul\":17615:17618   */\n      dup4\n        /* \"#utility.yul\":17556:17623   */\n      tag_295\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":17549:17623   */\n      swap2\n      pop\n        /* \"#utility.yul\":17632:17725   */\n      tag_491\n        /* \"#utility.yul\":17721:17724   */\n      dup3\n        /* \"#utility.yul\":17632:17725   */\n      tag_320\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":17750:17752   */\n      0x20\n        /* \"#utility.yul\":17745:17748   */\n      dup3\n        /* \"#utility.yul\":17741:17753   */\n      add\n        /* \"#utility.yul\":17734:17753   */\n      swap1\n      pop\n        /* \"#utility.yul\":17393:17759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17765:18184   */\n    tag_222:\n        /* \"#utility.yul\":17931:17935   */\n      0x00\n        /* \"#utility.yul\":17969:17971   */\n      0x20\n        /* \"#utility.yul\":17958:17967   */\n      dup3\n        /* \"#utility.yul\":17954:17972   */\n      add\n        /* \"#utility.yul\":17946:17972   */\n      swap1\n      pop\n        /* \"#utility.yul\":18018:18027   */\n      dup2\n        /* \"#utility.yul\":18012:18016   */\n      dup2\n        /* \"#utility.yul\":18008:18028   */\n      sub\n        /* \"#utility.yul\":18004:18005   */\n      0x00\n        /* \"#utility.yul\":17993:18002   */\n      dup4\n        /* \"#utility.yul\":17989:18006   */\n      add\n        /* \"#utility.yul\":17982:18029   */\n      mstore\n        /* \"#utility.yul\":18046:18177   */\n      tag_493\n        /* \"#utility.yul\":18172:18176   */\n      dup2\n        /* \"#utility.yul\":18046:18177   */\n      tag_321\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18038:18177   */\n      swap1\n      pop\n        /* \"#utility.yul\":17765:18184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18190:18632   */\n    tag_226:\n        /* \"#utility.yul\":18339:18343   */\n      0x00\n        /* \"#utility.yul\":18377:18379   */\n      0x60\n        /* \"#utility.yul\":18366:18375   */\n      dup3\n        /* \"#utility.yul\":18362:18380   */\n      add\n        /* \"#utility.yul\":18354:18380   */\n      swap1\n      pop\n        /* \"#utility.yul\":18390:18461   */\n      tag_495\n        /* \"#utility.yul\":18458:18459   */\n      0x00\n        /* \"#utility.yul\":18447:18456   */\n      dup4\n        /* \"#utility.yul\":18443:18460   */\n      add\n        /* \"#utility.yul\":18434:18440   */\n      dup7\n        /* \"#utility.yul\":18390:18461   */\n      tag_287\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18471:18543   */\n      tag_496\n        /* \"#utility.yul\":18539:18541   */\n      0x20\n        /* \"#utility.yul\":18528:18537   */\n      dup4\n        /* \"#utility.yul\":18524:18542   */\n      add\n        /* \"#utility.yul\":18515:18521   */\n      dup6\n        /* \"#utility.yul\":18471:18543   */\n      tag_287\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18553:18625   */\n      tag_497\n        /* \"#utility.yul\":18621:18623   */\n      0x40\n        /* \"#utility.yul\":18610:18619   */\n      dup4\n        /* \"#utility.yul\":18606:18624   */\n      add\n        /* \"#utility.yul\":18597:18603   */\n      dup5\n        /* \"#utility.yul\":18553:18625   */\n      tag_284\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18190:18632   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18638:18818   */\n    tag_322:\n        /* \"#utility.yul\":18686:18763   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18683:18684   */\n      0x00\n        /* \"#utility.yul\":18676:18764   */\n      mstore\n        /* \"#utility.yul\":18783:18787   */\n      0x12\n        /* \"#utility.yul\":18780:18781   */\n      0x04\n        /* \"#utility.yul\":18773:18788   */\n      mstore\n        /* \"#utility.yul\":18807:18811   */\n      0x24\n        /* \"#utility.yul\":18804:18805   */\n      0x00\n        /* \"#utility.yul\":18797:18812   */\n      revert\n        /* \"#utility.yul\":18824:19009   */\n    tag_237:\n        /* \"#utility.yul\":18864:18865   */\n      0x00\n        /* \"#utility.yul\":18881:18901   */\n      tag_500\n        /* \"#utility.yul\":18899:18900   */\n      dup3\n        /* \"#utility.yul\":18881:18901   */\n      tag_279\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":18876:18901   */\n      swap2\n      pop\n        /* \"#utility.yul\":18915:18935   */\n      tag_501\n        /* \"#utility.yul\":18933:18934   */\n      dup4\n        /* \"#utility.yul\":18915:18935   */\n      tag_279\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":18910:18935   */\n      swap3\n      pop\n        /* \"#utility.yul\":18954:18955   */\n      dup3\n        /* \"#utility.yul\":18944:18979   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":18959:18977   */\n      tag_503\n      tag_322\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18944:18979   */\n    tag_502:\n        /* \"#utility.yul\":19001:19002   */\n      dup3\n        /* \"#utility.yul\":18998:18999   */\n      dup3\n        /* \"#utility.yul\":18994:19003   */\n      div\n        /* \"#utility.yul\":18989:19003   */\n      swap1\n      pop\n        /* \"#utility.yul\":18824:19009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19015:19131   */\n    tag_323:\n        /* \"#utility.yul\":19085:19106   */\n      tag_505\n        /* \"#utility.yul\":19100:19105   */\n      dup2\n        /* \"#utility.yul\":19085:19106   */\n      tag_282\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":19078:19083   */\n      dup2\n        /* \"#utility.yul\":19075:19107   */\n      eq\n        /* \"#utility.yul\":19065:19125   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":19121:19122   */\n      0x00\n        /* \"#utility.yul\":19118:19119   */\n      dup1\n        /* \"#utility.yul\":19111:19123   */\n      revert\n        /* \"#utility.yul\":19065:19125   */\n    tag_506:\n        /* \"#utility.yul\":19015:19131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19137:19274   */\n    tag_324:\n        /* \"#utility.yul\":19191:19196   */\n      0x00\n        /* \"#utility.yul\":19222:19228   */\n      dup2\n        /* \"#utility.yul\":19216:19229   */\n      mload\n        /* \"#utility.yul\":19207:19229   */\n      swap1\n      pop\n        /* \"#utility.yul\":19238:19268   */\n      tag_508\n        /* \"#utility.yul\":19262:19267   */\n      dup2\n        /* \"#utility.yul\":19238:19268   */\n      tag_323\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19137:19274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19280:19625   */\n    tag_243:\n        /* \"#utility.yul\":19347:19353   */\n      0x00\n        /* \"#utility.yul\":19396:19398   */\n      0x20\n        /* \"#utility.yul\":19384:19393   */\n      dup3\n        /* \"#utility.yul\":19375:19382   */\n      dup5\n        /* \"#utility.yul\":19371:19394   */\n      sub\n        /* \"#utility.yul\":19367:19399   */\n      slt\n        /* \"#utility.yul\":19364:19483   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":19402:19481   */\n      tag_511\n      tag_277\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":19364:19483   */\n    tag_510:\n        /* \"#utility.yul\":19522:19523   */\n      0x00\n        /* \"#utility.yul\":19547:19608   */\n      tag_512\n        /* \"#utility.yul\":19600:19607   */\n      dup5\n        /* \"#utility.yul\":19591:19597   */\n      dup3\n        /* \"#utility.yul\":19580:19589   */\n      dup6\n        /* \"#utility.yul\":19576:19598   */\n      add\n        /* \"#utility.yul\":19547:19608   */\n      tag_324\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":19537:19608   */\n      swap2\n      pop\n        /* \"#utility.yul\":19493:19618   */\n      pop\n        /* \"#utility.yul\":19280:19625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19631:19801   */\n    tag_325:\n        /* \"#utility.yul\":19771:19793   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":19767:19768   */\n      0x00\n        /* \"#utility.yul\":19759:19765   */\n      dup3\n        /* \"#utility.yul\":19755:19769   */\n      add\n        /* \"#utility.yul\":19748:19794   */\n      mstore\n        /* \"#utility.yul\":19631:19801   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19807:20173   */\n    tag_326:\n        /* \"#utility.yul\":19949:19952   */\n      0x00\n        /* \"#utility.yul\":19970:20037   */\n      tag_515\n        /* \"#utility.yul\":20034:20036   */\n      0x14\n        /* \"#utility.yul\":20029:20032   */\n      dup4\n        /* \"#utility.yul\":19970:20037   */\n      tag_295\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":19963:20037   */\n      swap2\n      pop\n        /* \"#utility.yul\":20046:20139   */\n      tag_516\n        /* \"#utility.yul\":20135:20138   */\n      dup3\n        /* \"#utility.yul\":20046:20139   */\n      tag_325\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":20164:20166   */\n      0x20\n        /* \"#utility.yul\":20159:20162   */\n      dup3\n        /* \"#utility.yul\":20155:20167   */\n      add\n        /* \"#utility.yul\":20148:20167   */\n      swap1\n      pop\n        /* \"#utility.yul\":19807:20173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20179:20598   */\n    tag_250:\n        /* \"#utility.yul\":20345:20349   */\n      0x00\n        /* \"#utility.yul\":20383:20385   */\n      0x20\n        /* \"#utility.yul\":20372:20381   */\n      dup3\n        /* \"#utility.yul\":20368:20386   */\n      add\n        /* \"#utility.yul\":20360:20386   */\n      swap1\n      pop\n        /* \"#utility.yul\":20432:20441   */\n      dup2\n        /* \"#utility.yul\":20426:20430   */\n      dup2\n        /* \"#utility.yul\":20422:20442   */\n      sub\n        /* \"#utility.yul\":20418:20419   */\n      0x00\n        /* \"#utility.yul\":20407:20416   */\n      dup4\n        /* \"#utility.yul\":20403:20420   */\n      add\n        /* \"#utility.yul\":20396:20443   */\n      mstore\n        /* \"#utility.yul\":20460:20591   */\n      tag_518\n        /* \"#utility.yul\":20586:20590   */\n      dup2\n        /* \"#utility.yul\":20460:20591   */\n      tag_326\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":20452:20591   */\n      swap1\n      pop\n        /* \"#utility.yul\":20179:20598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20604:20702   */\n    tag_327:\n        /* \"#utility.yul\":20655:20661   */\n      0x00\n        /* \"#utility.yul\":20689:20694   */\n      dup2\n        /* \"#utility.yul\":20683:20695   */\n      mload\n        /* \"#utility.yul\":20673:20695   */\n      swap1\n      pop\n        /* \"#utility.yul\":20604:20702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20708:20855   */\n    tag_328:\n        /* \"#utility.yul\":20809:20820   */\n      0x00\n        /* \"#utility.yul\":20846:20849   */\n      dup2\n        /* \"#utility.yul\":20831:20849   */\n      swap1\n      pop\n        /* \"#utility.yul\":20708:20855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20861:21107   */\n    tag_329:\n        /* \"#utility.yul\":20942:20943   */\n      0x00\n        /* \"#utility.yul\":20952:21065   */\n    tag_522:\n        /* \"#utility.yul\":20966:20972   */\n      dup4\n        /* \"#utility.yul\":20963:20964   */\n      dup2\n        /* \"#utility.yul\":20960:20973   */\n      lt\n        /* \"#utility.yul\":20952:21065   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":21051:21052   */\n      dup1\n        /* \"#utility.yul\":21046:21049   */\n      dup3\n        /* \"#utility.yul\":21042:21053   */\n      add\n        /* \"#utility.yul\":21036:21054   */\n      mload\n        /* \"#utility.yul\":21032:21033   */\n      dup2\n        /* \"#utility.yul\":21027:21030   */\n      dup5\n        /* \"#utility.yul\":21023:21034   */\n      add\n        /* \"#utility.yul\":21016:21055   */\n      mstore\n        /* \"#utility.yul\":20988:20990   */\n      0x20\n        /* \"#utility.yul\":20985:20986   */\n      dup2\n        /* \"#utility.yul\":20981:20991   */\n      add\n        /* \"#utility.yul\":20976:20991   */\n      swap1\n      pop\n        /* \"#utility.yul\":20952:21065   */\n      jump(tag_522)\n    tag_524:\n        /* \"#utility.yul\":21099:21100   */\n      0x00\n        /* \"#utility.yul\":21090:21096   */\n      dup5\n        /* \"#utility.yul\":21085:21088   */\n      dup5\n        /* \"#utility.yul\":21081:21097   */\n      add\n        /* \"#utility.yul\":21074:21101   */\n      mstore\n        /* \"#utility.yul\":20923:21107   */\n      pop\n        /* \"#utility.yul\":20861:21107   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21113:21499   */\n    tag_330:\n        /* \"#utility.yul\":21217:21220   */\n      0x00\n        /* \"#utility.yul\":21245:21283   */\n      tag_526\n        /* \"#utility.yul\":21277:21282   */\n      dup3\n        /* \"#utility.yul\":21245:21283   */\n      tag_327\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":21299:21387   */\n      tag_527\n        /* \"#utility.yul\":21380:21386   */\n      dup2\n        /* \"#utility.yul\":21375:21378   */\n      dup6\n        /* \"#utility.yul\":21299:21387   */\n      tag_328\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":21292:21387   */\n      swap4\n      pop\n        /* \"#utility.yul\":21396:21461   */\n      tag_528\n        /* \"#utility.yul\":21454:21460   */\n      dup2\n        /* \"#utility.yul\":21449:21452   */\n      dup6\n        /* \"#utility.yul\":21442:21446   */\n      0x20\n        /* \"#utility.yul\":21435:21440   */\n      dup7\n        /* \"#utility.yul\":21431:21447   */\n      add\n        /* \"#utility.yul\":21396:21461   */\n      tag_329\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":21486:21492   */\n      dup1\n        /* \"#utility.yul\":21481:21484   */\n      dup5\n        /* \"#utility.yul\":21477:21493   */\n      add\n        /* \"#utility.yul\":21470:21493   */\n      swap2\n      pop\n        /* \"#utility.yul\":21221:21499   */\n      pop\n        /* \"#utility.yul\":21113:21499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21505:21776   */\n    tag_259:\n        /* \"#utility.yul\":21635:21638   */\n      0x00\n        /* \"#utility.yul\":21657:21750   */\n      tag_530\n        /* \"#utility.yul\":21746:21749   */\n      dup3\n        /* \"#utility.yul\":21737:21743   */\n      dup5\n        /* \"#utility.yul\":21657:21750   */\n      tag_330\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":21650:21750   */\n      swap2\n      pop\n        /* \"#utility.yul\":21767:21770   */\n      dup2\n        /* \"#utility.yul\":21760:21770   */\n      swap1\n      pop\n        /* \"#utility.yul\":21505:21776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cdc7912c64497fe3cbd867e772631832d32e68a5e607084f7ef5e6c0b4a8179e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_280": {
									"entryPoint": null,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b505f805f6101000a81548160ff0219169083151502179055506001808190555061202a8061003c5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80638456cb59116100ab578063e30081a01161006f578063e30081a0146102b8578063f1887684146102d4578063f2fde38b146102f2578063fc0c546a1461030e578063ff897dbd1461032c5761011f565b80638456cb59146101ff5780638da5cb5b1461020957806397378b1a146102275780639fa828ac14610257578063a8e62b97146102885761011f565b80635c975abb116100f25780635c975abb146101815780635d80ca321461019f5780636cee0131146101bd5780637b0472f0146101d95780638129fc1c146101f55761011f565b8063106b5da1146101235780632e17de781461013f5780632e1a7d4d1461015b5780633f4ba83a14610177575b5f80fd5b61013d600480360381019061013891906115d7565b610348565b005b610159600480360381019061015491906115d7565b6103e1565b005b610175600480360381019061017091906115d7565b6105b3565b005b61017f610771565b005b61018961080a565b604051610196919061161c565b60405180910390f35b6101a761081e565b6040516101b49190611644565b60405180910390f35b6101d760048036038101906101d2919061165d565b610824565b005b6101f360048036038101906101ee919061165d565b6108cd565b005b6101fd610add565b005b610207610c94565b005b610211610d2d565b60405161021e91906116da565b60405180910390f35b610241600480360381019061023c91906115d7565b610d52565b60405161024e9190611644565b60405180910390f35b610271600480360381019061026c919061171d565b610d67565b60405161027f92919061175b565b60405180910390f35b6102a2600480360381019061029d9190611782565b610d92565b6040516102af9190611644565b60405180910390f35b6102d260048036038101906102cd91906117d2565b610dda565b005b6102dc610eac565b6040516102e99190611644565b60405180910390f35b61030c600480360381019061030791906117d2565b610eb2565b005b610316610f84565b6040516103239190611858565b60405180910390f35b610346600480360381019061034191906115d7565b610fa9565b005b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906118cb565b60405180910390fd5b8060038190555050565b6103e9611042565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2090505f815f015490505f8111610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890611933565b60405180910390fd5b816001015442116104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061199b565b60405180910390fd5b5f60065f8581526020019081526020015f205490505f6104e8838387610d92565b905061054833610501838661109190919063ffffffff16565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a69092919063ffffffff16565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8681526020019081526020015f205f8082015f9055600182015f90555050505050506105b0611125565b50565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610642576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610639906118cb565b60405180910390fd5b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161069d91906116da565b602060405180830381865afa1580156106b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dc91906119cd565b905081811015610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890611a68565b60405180910390fd5b61076d338360075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a69092919063ffffffff16565b5050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f7906118cb565b60405180910390fd5b61080861112e565b565b5f805f9054906101000a900460ff16905090565b60035481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa906118cb565b60405180910390fd5b8060065f8481526020019081526020015f20819055505050565b6108d561118e565b6108dd611042565b600254821015610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091990611ad0565b60405180910390fd5b600354821115610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90611b38565b60405180910390fd5b5f60065f8381526020019081526020015f205490505f81116109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590611ba0565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f2090505f815f015414610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4990611c08565b60405180910390fd5b610aa033308660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111d8909392919063ffffffff16565b83815f0181905550610ac7603c84610ab89190611c53565b4261109190919063ffffffff16565b81600101819055505050610ad9611125565b5050565b5f610ae661125a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b2e5750825b90505f60018367ffffffffffffffff16148015610b6157505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b6f575080155b15610ba6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bf3576001855f0160086101000a81548160ff0219169083151502179055505b3360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c8d575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c849190611ce0565b60405180910390a15b5050505050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1a906118cb565b60405180910390fd5b610d2b611281565b565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006602052805f5260405f205f915090505481565b6005602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b5f80610dcd612ee0610dbf85610db1888a6112e290919063ffffffff16565b6112e290919063ffffffff16565b6112f790919063ffffffff16565b9050809150509392505050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e60906118cb565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f38906118cb565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f906118cb565b60405180910390fd5b8060028190555050565b600260015403611087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107e90611d43565b60405180910390fd5b6002600181905550565b5f818361109e9190611d61565b905092915050565b611120838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016110d9929190611d94565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061130c565b505050565b60018081905550565b6111366113a1565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111776113ea565b60405161118491906116da565b60405180910390a1565b61119661080a565b156111d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cd90611e05565b60405180910390fd5b565b611254848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161120d93929190611e23565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061130c565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61128961118e565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112cb6113ea565b6040516112d891906116da565b60405180910390a1565b5f81836112ef9190611c53565b905092915050565b5f81836113049190611e85565b905092915050565b5f611336828473ffffffffffffffffffffffffffffffffffffffff166113f190919063ffffffff16565b90505f81511415801561135a5750808060200190518101906113589190611edf565b155b1561139c57826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161139391906116da565b60405180910390fd5b505050565b6113a961080a565b6113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90611f54565b60405180910390fd5b565b5f33905090565b60606113fe83835f611406565b905092915050565b60608147101561144d57306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161144491906116da565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516114759190611fde565b5f6040518083038185875af1925050503d805f81146114af576040519150601f19603f3d011682016040523d82523d5f602084013e6114b4565b606091505b50915091506114c48683836114cf565b925050509392505050565b6060826114e4576114df8261155c565b611554565b5f825114801561150a57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561154c57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161154391906116da565b60405180910390fd5b819050611555565b5b9392505050565b5f8151111561156e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b6115b6816115a4565b81146115c0575f80fd5b50565b5f813590506115d1816115ad565b92915050565b5f602082840312156115ec576115eb6115a0565b5b5f6115f9848285016115c3565b91505092915050565b5f8115159050919050565b61161681611602565b82525050565b5f60208201905061162f5f83018461160d565b92915050565b61163e816115a4565b82525050565b5f6020820190506116575f830184611635565b92915050565b5f8060408385031215611673576116726115a0565b5b5f611680858286016115c3565b9250506020611691858286016115c3565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116c48261169b565b9050919050565b6116d4816116ba565b82525050565b5f6020820190506116ed5f8301846116cb565b92915050565b6116fc816116ba565b8114611706575f80fd5b50565b5f81359050611717816116f3565b92915050565b5f8060408385031215611733576117326115a0565b5b5f61174085828601611709565b9250506020611751858286016115c3565b9150509250929050565b5f60408201905061176e5f830185611635565b61177b6020830184611635565b9392505050565b5f805f60608486031215611799576117986115a0565b5b5f6117a6868287016115c3565b93505060206117b7868287016115c3565b92505060406117c8868287016115c3565b9150509250925092565b5f602082840312156117e7576117e66115a0565b5b5f6117f484828501611709565b91505092915050565b5f819050919050565b5f61182061181b6118168461169b565b6117fd565b61169b565b9050919050565b5f61183182611806565b9050919050565b5f61184282611827565b9050919050565b61185281611838565b82525050565b5f60208201905061186b5f830184611849565b92915050565b5f82825260208201905092915050565b7f6f6e6c792061646d696e732061726520616c6c6f7765640000000000000000005f82015250565b5f6118b5601783611871565b91506118c082611881565b602082019050919050565b5f6020820190508181035f8301526118e2816118a9565b9050919050565b7f6e6f20756e7374616b65206461746120666f756e6400000000000000000000005f82015250565b5f61191d601583611871565b9150611928826118e9565b602082019050919050565b5f6020820190508181035f83015261194a81611911565b9050919050565b7f706572696f64206973206e6f74206578706972656400000000000000000000005f82015250565b5f611985601583611871565b915061199082611951565b602082019050919050565b5f6020820190508181035f8301526119b281611979565b9050919050565b5f815190506119c7816115ad565b92915050565b5f602082840312156119e2576119e16115a0565b5b5f6119ef848285016119b9565b91505092915050565b7f436f6e747261637420646f6573206e6f74206861766520656e6f7567682062615f8201527f6c616e636520746f207769746864726177000000000000000000000000000000602082015250565b5f611a52603183611871565b9150611a5d826119f8565b604082019050919050565b5f6020820190508181035f830152611a7f81611a46565b9050919050565b7f616464206d6f726520616d6f756e7400000000000000000000000000000000005f82015250565b5f611aba600f83611871565b9150611ac582611a86565b602082019050919050565b5f6020820190508181035f830152611ae781611aae565b9050919050565b7f616464206c65737320616d6f756e7400000000000000000000000000000000005f82015250565b5f611b22600f83611871565b9150611b2d82611aee565b602082019050919050565b5f6020820190508181035f830152611b4f81611b16565b9050919050565b7f696e76616c6964206d6f6e7468000000000000000000000000000000000000005f82015250565b5f611b8a600d83611871565b9150611b9582611b56565b602082019050919050565b5f6020820190508181035f830152611bb781611b7e565b9050919050565b7f616c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f611bf2600e83611871565b9150611bfd82611bbe565b602082019050919050565b5f6020820190508181035f830152611c1f81611be6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c5d826115a4565b9150611c68836115a4565b9250828202611c76816115a4565b91508282048414831517611c8d57611c8c611c26565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f611cca611cc5611cc084611c94565b6117fd565b611c9d565b9050919050565b611cda81611cb0565b82525050565b5f602082019050611cf35f830184611cd1565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611d2d601f83611871565b9150611d3882611cf9565b602082019050919050565b5f6020820190508181035f830152611d5a81611d21565b9050919050565b5f611d6b826115a4565b9150611d76836115a4565b9250828201905080821115611d8e57611d8d611c26565b5b92915050565b5f604082019050611da75f8301856116cb565b611db46020830184611635565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611def601083611871565b9150611dfa82611dbb565b602082019050919050565b5f6020820190508181035f830152611e1c81611de3565b9050919050565b5f606082019050611e365f8301866116cb565b611e4360208301856116cb565b611e506040830184611635565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611e8f826115a4565b9150611e9a836115a4565b925082611eaa57611ea9611e58565b5b828204905092915050565b611ebe81611602565b8114611ec8575f80fd5b50565b5f81519050611ed981611eb5565b92915050565b5f60208284031215611ef457611ef36115a0565b5b5f611f0184828501611ecb565b91505092915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611f3e601483611871565b9150611f4982611f0a565b602082019050919050565b5f6020820190508181035f830152611f6b81611f32565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015611fa3578082015181840152602081019050611f88565b5f8484015250505050565b5f611fb882611f72565b611fc28185611f7c565b9350611fd2818560208601611f86565b80840191505092915050565b5f611fe98284611fae565b91508190509291505056fea2646970667358221220cdc7912c64497fe3cbd867e772631832d32e68a5e607084f7ef5e6c0b4a8179e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x202A DUP1 PUSH2 0x3C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE30081A0 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE30081A0 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xFF897DBD EQ PUSH2 0x32C JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x97378B1A EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x9FA828AC EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xA8E62B97 EQ PUSH2 0x288 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x5D80CA32 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x6CEE0131 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1F5 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x106B5DA1 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x771 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH2 0xADD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP3 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xDDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xFA9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x1042 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BE SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x4E8 DUP4 DUP4 DUP8 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 CALLER PUSH2 0x501 DUP4 DUP7 PUSH2 0x1091 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x5B0 PUSH2 0x1125 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D CALLER DUP4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F7 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x808 PUSH2 0x112E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x118E JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95E SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B5 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD EQ PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 CALLER ADDRESS DUP7 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11D8 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xAC7 PUSH1 0x3C DUP5 PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST TIMESTAMP PUSH2 0x1091 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xAD9 PUSH2 0x1125 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAE6 PUSH2 0x125A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB61 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC8D JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC84 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1A SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2B PUSH2 0x1281 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDCD PUSH2 0x2EE0 PUSH2 0xDBF DUP6 PUSH2 0xDB1 DUP9 DUP11 PUSH2 0x12E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF38 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107E SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1120 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x130C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1136 PUSH2 0x13A1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1177 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1196 PUSH2 0x80A JUMP JUMPDEST ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CD SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1254 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x120D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x130C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1289 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x12CB PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x12EF SWAP2 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1336 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x135A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1358 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x139C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13A9 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DF SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13FE DUP4 DUP4 PUSH0 PUSH2 0x1406 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x144D JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1444 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1475 SWAP2 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14C4 DUP7 DUP4 DUP4 PUSH2 0x14CF JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x14E4 JUMPI PUSH2 0x14DF DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x1554 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x150A JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x154C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1543 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1555 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x156E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B6 DUP2 PUSH2 0x15A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x15C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D1 DUP2 PUSH2 0x15AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH2 0x15EB PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F9 DUP5 DUP3 DUP6 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1616 DUP2 PUSH2 0x1602 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162F PUSH0 DUP4 ADD DUP5 PUSH2 0x160D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163E DUP2 PUSH2 0x15A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1657 PUSH0 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1680 DUP6 DUP3 DUP7 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1691 DUP6 DUP3 DUP7 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C4 DUP3 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D4 DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16ED PUSH0 DUP4 ADD DUP5 PUSH2 0x16CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16FC DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP2 EQ PUSH2 0x1706 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1717 DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1740 DUP6 DUP3 DUP7 ADD PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1751 DUP6 DUP3 DUP7 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x176E PUSH0 DUP4 ADD DUP6 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x177B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A6 DUP7 DUP3 DUP8 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17B7 DUP7 DUP3 DUP8 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17C8 DUP7 DUP3 DUP8 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17E6 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F4 DUP5 DUP3 DUP6 ADD PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1820 PUSH2 0x181B PUSH2 0x1816 DUP5 PUSH2 0x169B JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1831 DUP3 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1842 DUP3 PUSH2 0x1827 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186B PUSH0 DUP4 ADD DUP5 PUSH2 0x1849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E732061726520616C6C6F776564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18B5 PUSH1 0x17 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C0 DUP3 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18E2 DUP2 PUSH2 0x18A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F20756E7374616B65206461746120666F756E640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x191D PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1928 DUP3 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x194A DUP2 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x706572696F64206973206E6F7420657870697265640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1985 PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1990 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B2 DUP2 PUSH2 0x1979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C7 DUP2 PUSH2 0x15AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19EF DUP5 DUP3 DUP6 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E636520746F207769746864726177000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A52 PUSH1 0x31 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5D DUP3 PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A7F DUP2 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616464206D6F726520616D6F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABA PUSH1 0xF DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC5 DUP3 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE7 DUP2 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616464206C65737320616D6F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B22 PUSH1 0xF DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2D DUP3 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B4F DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964206D6F6E746800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8A PUSH1 0xD DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B95 DUP3 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB7 DUP2 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF2 PUSH1 0xE DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFD DUP3 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C1F DUP2 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5D DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C68 DUP4 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C76 DUP2 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C8D JUMPI PUSH2 0x1C8C PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCA PUSH2 0x1CC5 PUSH2 0x1CC0 DUP5 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDA DUP2 PUSH2 0x1CB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH1 0x1F DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5A DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6B DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP4 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DA7 PUSH0 DUP4 ADD DUP6 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1DB4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEF PUSH1 0x10 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFA DUP3 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1C DUP2 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E36 PUSH0 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1E43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1E50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E8F DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9A DUP4 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EAA JUMPI PUSH2 0x1EA9 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1602 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F01 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3E PUSH1 0x14 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F6B DUP2 PUSH2 0x1F32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F88 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB8 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 DUP6 PUSH2 0x1F7C JUMP JUMPDEST SWAP4 POP PUSH2 0x1FD2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F86 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE9 DUP3 DUP5 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC7 SWAP2 0x2C PUSH5 0x497FE3CBD8 PUSH8 0xE772631832D32E68 0xA5 0xE6 SMOD ADDMOD 0x4F PUSH31 0xF5E6C0B4A8179E64736F6C6343000818003300000000000000000000000000 ",
							"sourceMap": "410:2861:9:-:0;;;;;;;;;;;;;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:2;1821:7;:22;;;;410:2861:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_780": {
									"entryPoint": 4876,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getInitializableStorage_252": {
									"entryPoint": 4698,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1095": {
									"entryPoint": 5098,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_414": {
									"entryPoint": 4389,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_406": {
									"entryPoint": 4162,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_344": {
									"entryPoint": 4737,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_317": {
									"entryPoint": 4494,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_328": {
									"entryPoint": 5025,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1082": {
									"entryPoint": 5468,
									"id": 1082,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_360": {
									"entryPoint": 4398,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_1289": {
									"entryPoint": 4241,
									"id": 1289,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_1698": {
									"entryPoint": 3474,
									"id": 1698,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@div_1334": {
									"entryPoint": 4855,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_950": {
									"entryPoint": 5126,
									"id": 950,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_904": {
									"entryPoint": 5105,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1470": {
									"entryPoint": 2781,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxStakeAmount_1452": {
									"entryPoint": 2078,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minStakeAmount_1450": {
									"entryPoint": 3756,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@monthToInterestRate_1493": {
									"entryPoint": 3410,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1319": {
									"entryPoint": 4834,
									"id": 1319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1454": {
									"entryPoint": 3373,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_1780": {
									"entryPoint": 3220,
									"id": 1780,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_305": {
									"entryPoint": 2058,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_617": {
									"entryPoint": 4568,
									"id": 617,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_590": {
									"entryPoint": 4262,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAddress_1510": {
									"entryPoint": 3546,
									"id": 1510,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMonthInterestRate_1771": {
									"entryPoint": 2084,
									"id": 1771,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_1597": {
									"entryPoint": 2253,
									"id": 1597,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token_1496": {
									"entryPoint": 3972,
									"id": 1496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1801": {
									"entryPoint": 3762,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1789": {
									"entryPoint": 1905,
									"id": 1789,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_1669": {
									"entryPoint": 993,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMaxAmount_1722": {
									"entryPoint": 840,
									"id": 1722,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMinAmount_1710": {
									"entryPoint": 4009,
									"id": 1710,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userMonthToAmount_1489": {
									"entryPoint": 3431,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1042": {
									"entryPoint": 5327,
									"id": 1042,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1755": {
									"entryPoint": 1459,
									"id": 1755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$504_to_t_address_fromStack": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$504__to_t_address__fromStack_reversed": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 7316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$504_to_t_address": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21779:10",
										"nodeType": "YulBlock",
										"src": "0:21779:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "756:263:10",
													"nodeType": "YulBlock",
													"src": "756:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:10",
																"nodeType": "YulBlock",
																"src": "802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:10"
																			},
																			"nativeSrc": "804:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:10"
																		},
																		"nativeSrc": "804:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:10"
																},
																"nativeSrc": "769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "769:32:10"
															},
															"nativeSrc": "766:119:10",
															"nodeType": "YulIf",
															"src": "766:119:10"
														},
														{
															"nativeSrc": "895:117:10",
															"nodeType": "YulBlock",
															"src": "895:117:10",
															"statements": [
																{
																	"nativeSrc": "910:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:10",
																			"nodeType": "YulTypedName",
																			"src": "914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:10",
																	"nodeType": "YulAssignment",
																	"src": "939:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:10"
																				},
																				"nativeSrc": "970:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:10"
																		},
																		"nativeSrc": "949:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:10",
														"nodeType": "YulTypedName",
														"src": "726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:10",
														"nodeType": "YulTypedName",
														"src": "737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:10",
														"nodeType": "YulTypedName",
														"src": "749:6:10",
														"type": ""
													}
												],
												"src": "690:329:10"
											},
											{
												"body": {
													"nativeSrc": "1067:48:10",
													"nodeType": "YulBlock",
													"src": "1067:48:10",
													"statements": [
														{
															"nativeSrc": "1077:32:10",
															"nodeType": "YulAssignment",
															"src": "1077:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:10"
																		},
																		"nativeSrc": "1095:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:10"
																},
																"nativeSrc": "1088:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:10",
														"nodeType": "YulTypedName",
														"src": "1049:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:10",
														"nodeType": "YulTypedName",
														"src": "1059:7:10",
														"type": ""
													}
												],
												"src": "1025:90:10"
											},
											{
												"body": {
													"nativeSrc": "1180:50:10",
													"nodeType": "YulBlock",
													"src": "1180:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:10"
																		},
																		"nativeSrc": "1202:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:10"
																},
																"nativeSrc": "1190:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:10"
															},
															"nativeSrc": "1190:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:10",
														"nodeType": "YulTypedName",
														"src": "1168:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:10",
														"nodeType": "YulTypedName",
														"src": "1175:3:10",
														"type": ""
													}
												],
												"src": "1121:109:10"
											},
											{
												"body": {
													"nativeSrc": "1328:118:10",
													"nodeType": "YulBlock",
													"src": "1328:118:10",
													"statements": [
														{
															"nativeSrc": "1338:26:10",
															"nodeType": "YulAssignment",
															"src": "1338:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:10"
																},
																"nativeSrc": "1346:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:10"
																		},
																		"nativeSrc": "1421:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:10"
																},
																"nativeSrc": "1374:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:10"
															},
															"nativeSrc": "1374:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:10",
														"nodeType": "YulTypedName",
														"src": "1300:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:10",
														"nodeType": "YulTypedName",
														"src": "1312:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:10",
														"nodeType": "YulTypedName",
														"src": "1323:4:10",
														"type": ""
													}
												],
												"src": "1236:210:10"
											},
											{
												"body": {
													"nativeSrc": "1517:53:10",
													"nodeType": "YulBlock",
													"src": "1517:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1534:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1534:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1557:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1557:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1539:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1539:17:10"
																		},
																		"nativeSrc": "1539:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:10"
																},
																"nativeSrc": "1527:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:37:10"
															},
															"nativeSrc": "1527:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1452:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1505:5:10",
														"nodeType": "YulTypedName",
														"src": "1505:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1512:3:10",
														"nodeType": "YulTypedName",
														"src": "1512:3:10",
														"type": ""
													}
												],
												"src": "1452:118:10"
											},
											{
												"body": {
													"nativeSrc": "1674:124:10",
													"nodeType": "YulBlock",
													"src": "1674:124:10",
													"statements": [
														{
															"nativeSrc": "1684:26:10",
															"nodeType": "YulAssignment",
															"src": "1684:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1696:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1696:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1707:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1707:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1692:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1692:3:10"
																},
																"nativeSrc": "1692:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1692:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1684:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1684:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1764:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1764:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1777:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1777:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1788:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1788:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1773:3:10"
																		},
																		"nativeSrc": "1773:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1773:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1720:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1720:43:10"
																},
																"nativeSrc": "1720:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1720:71:10"
															},
															"nativeSrc": "1720:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1720:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1576:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1646:9:10",
														"nodeType": "YulTypedName",
														"src": "1646:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1658:6:10",
														"nodeType": "YulTypedName",
														"src": "1658:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1669:4:10",
														"nodeType": "YulTypedName",
														"src": "1669:4:10",
														"type": ""
													}
												],
												"src": "1576:222:10"
											},
											{
												"body": {
													"nativeSrc": "1887:391:10",
													"nodeType": "YulBlock",
													"src": "1887:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1933:83:10",
																"nodeType": "YulBlock",
																"src": "1933:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1935:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1935:77:10"
																			},
																			"nativeSrc": "1935:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1935:79:10"
																		},
																		"nativeSrc": "1935:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1935:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1908:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1908:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1917:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1917:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1904:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1904:3:10"
																		},
																		"nativeSrc": "1904:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1929:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1900:3:10"
																},
																"nativeSrc": "1900:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1900:32:10"
															},
															"nativeSrc": "1897:119:10",
															"nodeType": "YulIf",
															"src": "1897:119:10"
														},
														{
															"nativeSrc": "2026:117:10",
															"nodeType": "YulBlock",
															"src": "2026:117:10",
															"statements": [
																{
																	"nativeSrc": "2041:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2041:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2055:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2055:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2045:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2045:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2070:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2070:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2105:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2105:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2116:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2116:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2101:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2101:3:10"
																				},
																				"nativeSrc": "2101:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2101:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2125:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2125:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2080:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2080:20:10"
																		},
																		"nativeSrc": "2080:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2070:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2070:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2153:118:10",
															"nodeType": "YulBlock",
															"src": "2153:118:10",
															"statements": [
																{
																	"nativeSrc": "2168:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2168:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2182:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2172:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2172:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2198:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2198:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2233:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2233:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2244:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2244:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2229:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:10"
																				},
																				"nativeSrc": "2229:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2253:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2253:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2208:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2208:20:10"
																		},
																		"nativeSrc": "2208:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2208:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2198:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2198:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1804:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1849:9:10",
														"nodeType": "YulTypedName",
														"src": "1849:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1860:7:10",
														"nodeType": "YulTypedName",
														"src": "1860:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1872:6:10",
														"nodeType": "YulTypedName",
														"src": "1872:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1880:6:10",
														"nodeType": "YulTypedName",
														"src": "1880:6:10",
														"type": ""
													}
												],
												"src": "1804:474:10"
											},
											{
												"body": {
													"nativeSrc": "2329:81:10",
													"nodeType": "YulBlock",
													"src": "2329:81:10",
													"statements": [
														{
															"nativeSrc": "2339:65:10",
															"nodeType": "YulAssignment",
															"src": "2339:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2354:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2354:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2361:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2361:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2350:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:10"
																},
																"nativeSrc": "2350:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2350:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2339:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2339:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2284:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2311:5:10",
														"nodeType": "YulTypedName",
														"src": "2311:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2321:7:10",
														"nodeType": "YulTypedName",
														"src": "2321:7:10",
														"type": ""
													}
												],
												"src": "2284:126:10"
											},
											{
												"body": {
													"nativeSrc": "2461:51:10",
													"nodeType": "YulBlock",
													"src": "2461:51:10",
													"statements": [
														{
															"nativeSrc": "2471:35:10",
															"nodeType": "YulAssignment",
															"src": "2471:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2500:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2482:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2482:17:10"
																},
																"nativeSrc": "2482:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2482:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2471:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2471:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2416:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2443:5:10",
														"nodeType": "YulTypedName",
														"src": "2443:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2453:7:10",
														"nodeType": "YulTypedName",
														"src": "2453:7:10",
														"type": ""
													}
												],
												"src": "2416:96:10"
											},
											{
												"body": {
													"nativeSrc": "2583:53:10",
													"nodeType": "YulBlock",
													"src": "2583:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2600:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2600:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2623:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2623:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2605:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2605:17:10"
																		},
																		"nativeSrc": "2605:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2593:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:10"
																},
																"nativeSrc": "2593:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2593:37:10"
															},
															"nativeSrc": "2593:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2593:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2518:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2571:5:10",
														"nodeType": "YulTypedName",
														"src": "2571:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2578:3:10",
														"nodeType": "YulTypedName",
														"src": "2578:3:10",
														"type": ""
													}
												],
												"src": "2518:118:10"
											},
											{
												"body": {
													"nativeSrc": "2740:124:10",
													"nodeType": "YulBlock",
													"src": "2740:124:10",
													"statements": [
														{
															"nativeSrc": "2750:26:10",
															"nodeType": "YulAssignment",
															"src": "2750:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2762:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2762:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2758:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:10"
																},
																"nativeSrc": "2758:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2758:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2750:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2750:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2830:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2843:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2854:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2854:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2839:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:10"
																		},
																		"nativeSrc": "2839:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2786:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2786:43:10"
																},
																"nativeSrc": "2786:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2786:71:10"
															},
															"nativeSrc": "2786:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2786:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2642:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2712:9:10",
														"nodeType": "YulTypedName",
														"src": "2712:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2724:6:10",
														"nodeType": "YulTypedName",
														"src": "2724:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2735:4:10",
														"nodeType": "YulTypedName",
														"src": "2735:4:10",
														"type": ""
													}
												],
												"src": "2642:222:10"
											},
											{
												"body": {
													"nativeSrc": "2913:79:10",
													"nodeType": "YulBlock",
													"src": "2913:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2970:16:10",
																"nodeType": "YulBlock",
																"src": "2970:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2979:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2982:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2972:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:10"
																			},
																			"nativeSrc": "2972:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:10"
																		},
																		"nativeSrc": "2972:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2936:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2936:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2961:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2961:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2943:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2943:17:10"
																				},
																				"nativeSrc": "2943:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2933:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2933:2:10"
																		},
																		"nativeSrc": "2933:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2933:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2926:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:10"
																},
																"nativeSrc": "2926:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2926:43:10"
															},
															"nativeSrc": "2923:63:10",
															"nodeType": "YulIf",
															"src": "2923:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2870:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2906:5:10",
														"nodeType": "YulTypedName",
														"src": "2906:5:10",
														"type": ""
													}
												],
												"src": "2870:122:10"
											},
											{
												"body": {
													"nativeSrc": "3050:87:10",
													"nodeType": "YulBlock",
													"src": "3050:87:10",
													"statements": [
														{
															"nativeSrc": "3060:29:10",
															"nodeType": "YulAssignment",
															"src": "3060:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3082:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3082:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3069:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:12:10"
																},
																"nativeSrc": "3069:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3069:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3060:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3060:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3125:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3125:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3098:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3098:26:10"
																},
																"nativeSrc": "3098:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3098:33:10"
															},
															"nativeSrc": "3098:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3098:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2998:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3028:6:10",
														"nodeType": "YulTypedName",
														"src": "3028:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3036:3:10",
														"nodeType": "YulTypedName",
														"src": "3036:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3044:5:10",
														"nodeType": "YulTypedName",
														"src": "3044:5:10",
														"type": ""
													}
												],
												"src": "2998:139:10"
											},
											{
												"body": {
													"nativeSrc": "3226:391:10",
													"nodeType": "YulBlock",
													"src": "3226:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3272:83:10",
																"nodeType": "YulBlock",
																"src": "3272:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3274:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3274:77:10"
																			},
																			"nativeSrc": "3274:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3274:79:10"
																		},
																		"nativeSrc": "3274:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3274:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3247:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3247:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3256:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3256:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3243:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:10"
																		},
																		"nativeSrc": "3243:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3243:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3268:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3268:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3239:3:10"
																},
																"nativeSrc": "3239:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3239:32:10"
															},
															"nativeSrc": "3236:119:10",
															"nodeType": "YulIf",
															"src": "3236:119:10"
														},
														{
															"nativeSrc": "3365:117:10",
															"nodeType": "YulBlock",
															"src": "3365:117:10",
															"statements": [
																{
																	"nativeSrc": "3380:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3380:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3394:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3394:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3384:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3384:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3409:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3409:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3444:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3444:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3455:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3455:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3440:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3440:3:10"
																				},
																				"nativeSrc": "3440:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3440:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3464:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3464:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3419:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3419:20:10"
																		},
																		"nativeSrc": "3419:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3409:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3409:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3492:118:10",
															"nodeType": "YulBlock",
															"src": "3492:118:10",
															"statements": [
																{
																	"nativeSrc": "3507:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3507:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3521:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3511:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3511:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3537:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3537:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3572:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3572:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3583:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3583:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3568:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3568:3:10"
																				},
																				"nativeSrc": "3568:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3568:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3592:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3592:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3547:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3547:20:10"
																		},
																		"nativeSrc": "3547:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3537:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3537:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3143:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3188:9:10",
														"nodeType": "YulTypedName",
														"src": "3188:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3199:7:10",
														"nodeType": "YulTypedName",
														"src": "3199:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3211:6:10",
														"nodeType": "YulTypedName",
														"src": "3211:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3219:6:10",
														"nodeType": "YulTypedName",
														"src": "3219:6:10",
														"type": ""
													}
												],
												"src": "3143:474:10"
											},
											{
												"body": {
													"nativeSrc": "3749:206:10",
													"nodeType": "YulBlock",
													"src": "3749:206:10",
													"statements": [
														{
															"nativeSrc": "3759:26:10",
															"nodeType": "YulAssignment",
															"src": "3759:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3771:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3771:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3782:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3767:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:10"
																},
																"nativeSrc": "3767:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3767:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3759:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3759:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3839:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3839:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3852:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3852:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3863:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3863:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3848:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:10"
																		},
																		"nativeSrc": "3848:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3848:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3795:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3795:43:10"
																},
																"nativeSrc": "3795:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3795:71:10"
															},
															"nativeSrc": "3795:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3795:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3920:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3933:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3933:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3944:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3944:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3929:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:10"
																		},
																		"nativeSrc": "3929:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3929:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3876:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3876:43:10"
																},
																"nativeSrc": "3876:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3876:72:10"
															},
															"nativeSrc": "3876:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3876:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3623:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3713:9:10",
														"nodeType": "YulTypedName",
														"src": "3713:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3725:6:10",
														"nodeType": "YulTypedName",
														"src": "3725:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3733:6:10",
														"nodeType": "YulTypedName",
														"src": "3733:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3744:4:10",
														"nodeType": "YulTypedName",
														"src": "3744:4:10",
														"type": ""
													}
												],
												"src": "3623:332:10"
											},
											{
												"body": {
													"nativeSrc": "4061:519:10",
													"nodeType": "YulBlock",
													"src": "4061:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4107:83:10",
																"nodeType": "YulBlock",
																"src": "4107:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4109:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4109:77:10"
																			},
																			"nativeSrc": "4109:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4109:79:10"
																		},
																		"nativeSrc": "4109:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4109:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4082:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4082:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4091:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4091:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4078:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4078:3:10"
																		},
																		"nativeSrc": "4078:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4078:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4103:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4103:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4074:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:10"
																},
																"nativeSrc": "4074:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4074:32:10"
															},
															"nativeSrc": "4071:119:10",
															"nodeType": "YulIf",
															"src": "4071:119:10"
														},
														{
															"nativeSrc": "4200:117:10",
															"nodeType": "YulBlock",
															"src": "4200:117:10",
															"statements": [
																{
																	"nativeSrc": "4215:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4215:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4229:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4229:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4219:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4219:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4244:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4244:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4279:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4279:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4290:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4290:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4275:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4275:3:10"
																				},
																				"nativeSrc": "4275:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4275:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4299:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4299:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4254:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4254:20:10"
																		},
																		"nativeSrc": "4254:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4254:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4244:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4244:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4327:118:10",
															"nodeType": "YulBlock",
															"src": "4327:118:10",
															"statements": [
																{
																	"nativeSrc": "4342:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4342:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4356:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4356:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4346:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4346:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4372:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4372:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4407:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4407:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4418:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4418:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4403:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4403:3:10"
																				},
																				"nativeSrc": "4403:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4403:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4427:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4382:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4382:20:10"
																		},
																		"nativeSrc": "4382:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4372:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4372:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4455:118:10",
															"nodeType": "YulBlock",
															"src": "4455:118:10",
															"statements": [
																{
																	"nativeSrc": "4470:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4470:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4484:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4484:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4474:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4474:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4500:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4500:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4535:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4535:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4546:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4546:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4531:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:10"
																				},
																				"nativeSrc": "4531:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4531:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4555:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4555:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4510:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4510:20:10"
																		},
																		"nativeSrc": "4510:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4500:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4500:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "3961:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4015:9:10",
														"nodeType": "YulTypedName",
														"src": "4015:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4026:7:10",
														"nodeType": "YulTypedName",
														"src": "4026:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4038:6:10",
														"nodeType": "YulTypedName",
														"src": "4038:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4046:6:10",
														"nodeType": "YulTypedName",
														"src": "4046:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4054:6:10",
														"nodeType": "YulTypedName",
														"src": "4054:6:10",
														"type": ""
													}
												],
												"src": "3961:619:10"
											},
											{
												"body": {
													"nativeSrc": "4652:263:10",
													"nodeType": "YulBlock",
													"src": "4652:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4698:83:10",
																"nodeType": "YulBlock",
																"src": "4698:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4700:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4700:77:10"
																			},
																			"nativeSrc": "4700:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4700:79:10"
																		},
																		"nativeSrc": "4700:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4673:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4673:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4682:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4669:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4669:3:10"
																		},
																		"nativeSrc": "4669:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4669:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4694:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4665:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:10"
																},
																"nativeSrc": "4665:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4665:32:10"
															},
															"nativeSrc": "4662:119:10",
															"nodeType": "YulIf",
															"src": "4662:119:10"
														},
														{
															"nativeSrc": "4791:117:10",
															"nodeType": "YulBlock",
															"src": "4791:117:10",
															"statements": [
																{
																	"nativeSrc": "4806:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4806:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4820:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4820:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4810:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4810:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4835:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4835:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4870:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4870:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4881:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4881:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4866:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4866:3:10"
																				},
																				"nativeSrc": "4866:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4866:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4890:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4890:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4845:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4845:20:10"
																		},
																		"nativeSrc": "4845:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4845:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4835:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4835:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4586:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4622:9:10",
														"nodeType": "YulTypedName",
														"src": "4622:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4633:7:10",
														"nodeType": "YulTypedName",
														"src": "4633:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4645:6:10",
														"nodeType": "YulTypedName",
														"src": "4645:6:10",
														"type": ""
													}
												],
												"src": "4586:329:10"
											},
											{
												"body": {
													"nativeSrc": "4953:28:10",
													"nodeType": "YulBlock",
													"src": "4953:28:10",
													"statements": [
														{
															"nativeSrc": "4963:12:10",
															"nodeType": "YulAssignment",
															"src": "4963:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4970:5:10",
																"nodeType": "YulIdentifier",
																"src": "4970:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4921:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4939:5:10",
														"nodeType": "YulTypedName",
														"src": "4939:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4949:3:10",
														"nodeType": "YulTypedName",
														"src": "4949:3:10",
														"type": ""
													}
												],
												"src": "4921:60:10"
											},
											{
												"body": {
													"nativeSrc": "5047:82:10",
													"nodeType": "YulBlock",
													"src": "5047:82:10",
													"statements": [
														{
															"nativeSrc": "5057:66:10",
															"nodeType": "YulAssignment",
															"src": "5057:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5115:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5115:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5097:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5097:17:10"
																				},
																				"nativeSrc": "5097:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5088:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5088:8:10"
																		},
																		"nativeSrc": "5088:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5088:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5070:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5070:17:10"
																},
																"nativeSrc": "5070:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5070:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5057:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5057:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4987:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5027:5:10",
														"nodeType": "YulTypedName",
														"src": "5027:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5037:9:10",
														"nodeType": "YulTypedName",
														"src": "5037:9:10",
														"type": ""
													}
												],
												"src": "4987:142:10"
											},
											{
												"body": {
													"nativeSrc": "5195:66:10",
													"nodeType": "YulBlock",
													"src": "5195:66:10",
													"statements": [
														{
															"nativeSrc": "5205:50:10",
															"nodeType": "YulAssignment",
															"src": "5205:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5249:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5249:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5218:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5218:30:10"
																},
																"nativeSrc": "5218:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5218:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5205:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5205:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5135:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5175:5:10",
														"nodeType": "YulTypedName",
														"src": "5175:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5185:9:10",
														"nodeType": "YulTypedName",
														"src": "5185:9:10",
														"type": ""
													}
												],
												"src": "5135:126:10"
											},
											{
												"body": {
													"nativeSrc": "5341:66:10",
													"nodeType": "YulBlock",
													"src": "5341:66:10",
													"statements": [
														{
															"nativeSrc": "5351:50:10",
															"nodeType": "YulAssignment",
															"src": "5351:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5395:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5395:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5364:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5364:30:10"
																},
																"nativeSrc": "5364:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5364:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5351:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5351:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$504_to_t_address",
												"nativeSrc": "5267:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5321:5:10",
														"nodeType": "YulTypedName",
														"src": "5321:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5331:9:10",
														"nodeType": "YulTypedName",
														"src": "5331:9:10",
														"type": ""
													}
												],
												"src": "5267:140:10"
											},
											{
												"body": {
													"nativeSrc": "5492:80:10",
													"nodeType": "YulBlock",
													"src": "5492:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5509:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5559:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5559:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$504_to_t_address",
																			"nativeSrc": "5514:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "5514:44:10"
																		},
																		"nativeSrc": "5514:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5514:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:10"
																},
																"nativeSrc": "5502:64:10",
																"nodeType": "YulFunctionCall",
																"src": "5502:64:10"
															},
															"nativeSrc": "5502:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "5502:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$504_to_t_address_fromStack",
												"nativeSrc": "5413:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5480:5:10",
														"nodeType": "YulTypedName",
														"src": "5480:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5487:3:10",
														"nodeType": "YulTypedName",
														"src": "5487:3:10",
														"type": ""
													}
												],
												"src": "5413:159:10"
											},
											{
												"body": {
													"nativeSrc": "5690:138:10",
													"nodeType": "YulBlock",
													"src": "5690:138:10",
													"statements": [
														{
															"nativeSrc": "5700:26:10",
															"nodeType": "YulAssignment",
															"src": "5700:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:10"
																},
																"nativeSrc": "5708:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5794:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5794:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5807:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5807:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5818:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5818:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5803:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5803:3:10"
																		},
																		"nativeSrc": "5803:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5803:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$504_to_t_address_fromStack",
																	"nativeSrc": "5736:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:57:10"
																},
																"nativeSrc": "5736:85:10",
																"nodeType": "YulFunctionCall",
																"src": "5736:85:10"
															},
															"nativeSrc": "5736:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "5736:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$504__to_t_address__fromStack_reversed",
												"nativeSrc": "5578:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:10",
														"nodeType": "YulTypedName",
														"src": "5662:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:10",
														"nodeType": "YulTypedName",
														"src": "5674:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:10",
														"nodeType": "YulTypedName",
														"src": "5685:4:10",
														"type": ""
													}
												],
												"src": "5578:250:10"
											},
											{
												"body": {
													"nativeSrc": "5930:73:10",
													"nodeType": "YulBlock",
													"src": "5930:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5947:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5952:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5952:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5940:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:10"
																},
																"nativeSrc": "5940:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5940:19:10"
															},
															"nativeSrc": "5940:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "5940:19:10"
														},
														{
															"nativeSrc": "5968:29:10",
															"nodeType": "YulAssignment",
															"src": "5968:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5987:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5987:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5992:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5992:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:10"
																},
																"nativeSrc": "5983:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5983:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5968:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "5968:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5834:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5902:3:10",
														"nodeType": "YulTypedName",
														"src": "5902:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5907:6:10",
														"nodeType": "YulTypedName",
														"src": "5907:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5918:11:10",
														"nodeType": "YulTypedName",
														"src": "5918:11:10",
														"type": ""
													}
												],
												"src": "5834:169:10"
											},
											{
												"body": {
													"nativeSrc": "6115:67:10",
													"nodeType": "YulBlock",
													"src": "6115:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6137:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6137:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6145:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6145:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6133:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:10"
																		},
																		"nativeSrc": "6133:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6133:14:10"
																	},
																	{
																		"hexValue": "6f6e6c792061646d696e732061726520616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "6149:25:10",
																		"nodeType": "YulLiteral",
																		"src": "6149:25:10",
																		"type": "",
																		"value": "only admins are allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6126:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:10"
																},
																"nativeSrc": "6126:49:10",
																"nodeType": "YulFunctionCall",
																"src": "6126:49:10"
															},
															"nativeSrc": "6126:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "6126:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7",
												"nativeSrc": "6009:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6107:6:10",
														"nodeType": "YulTypedName",
														"src": "6107:6:10",
														"type": ""
													}
												],
												"src": "6009:173:10"
											},
											{
												"body": {
													"nativeSrc": "6334:220:10",
													"nodeType": "YulBlock",
													"src": "6334:220:10",
													"statements": [
														{
															"nativeSrc": "6344:74:10",
															"nodeType": "YulAssignment",
															"src": "6344:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6410:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6410:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6415:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6351:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6351:58:10"
																},
																"nativeSrc": "6351:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6351:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6344:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6516:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6516:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7",
																	"nativeSrc": "6427:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6427:88:10"
																},
																"nativeSrc": "6427:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6427:93:10"
															},
															"nativeSrc": "6427:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6427:93:10"
														},
														{
															"nativeSrc": "6529:19:10",
															"nodeType": "YulAssignment",
															"src": "6529:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6540:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6540:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6545:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6545:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6536:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:10"
																},
																"nativeSrc": "6536:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6536:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6188:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6322:3:10",
														"nodeType": "YulTypedName",
														"src": "6322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6330:3:10",
														"nodeType": "YulTypedName",
														"src": "6330:3:10",
														"type": ""
													}
												],
												"src": "6188:366:10"
											},
											{
												"body": {
													"nativeSrc": "6731:248:10",
													"nodeType": "YulBlock",
													"src": "6731:248:10",
													"statements": [
														{
															"nativeSrc": "6741:26:10",
															"nodeType": "YulAssignment",
															"src": "6741:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6753:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6753:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6764:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6764:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6749:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6749:3:10"
																},
																"nativeSrc": "6749:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6749:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6741:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6741:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6788:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6788:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6799:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6799:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6784:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6784:3:10"
																		},
																		"nativeSrc": "6784:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6784:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6807:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6807:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6813:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6813:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6803:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:10"
																		},
																		"nativeSrc": "6803:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6803:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6777:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:10"
																},
																"nativeSrc": "6777:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6777:47:10"
															},
															"nativeSrc": "6777:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6777:47:10"
														},
														{
															"nativeSrc": "6833:139:10",
															"nodeType": "YulAssignment",
															"src": "6833:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6967:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6967:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6841:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6841:124:10"
																},
																"nativeSrc": "6841:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6841:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6833:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6833:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6560:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6711:9:10",
														"nodeType": "YulTypedName",
														"src": "6711:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6726:4:10",
														"nodeType": "YulTypedName",
														"src": "6726:4:10",
														"type": ""
													}
												],
												"src": "6560:419:10"
											},
											{
												"body": {
													"nativeSrc": "7091:65:10",
													"nodeType": "YulBlock",
													"src": "7091:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7113:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7113:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7121:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7121:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7109:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:10"
																		},
																		"nativeSrc": "7109:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:14:10"
																	},
																	{
																		"hexValue": "6e6f20756e7374616b65206461746120666f756e64",
																		"kind": "string",
																		"nativeSrc": "7125:23:10",
																		"nodeType": "YulLiteral",
																		"src": "7125:23:10",
																		"type": "",
																		"value": "no unstake data found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:10"
																},
																"nativeSrc": "7102:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7102:47:10"
															},
															"nativeSrc": "7102:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7102:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185",
												"nativeSrc": "6985:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7083:6:10",
														"nodeType": "YulTypedName",
														"src": "7083:6:10",
														"type": ""
													}
												],
												"src": "6985:171:10"
											},
											{
												"body": {
													"nativeSrc": "7308:220:10",
													"nodeType": "YulBlock",
													"src": "7308:220:10",
													"statements": [
														{
															"nativeSrc": "7318:74:10",
															"nodeType": "YulAssignment",
															"src": "7318:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7384:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7384:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7389:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7389:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7325:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7325:58:10"
																},
																"nativeSrc": "7325:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7325:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7318:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7318:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7490:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7490:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185",
																	"nativeSrc": "7401:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7401:88:10"
																},
																"nativeSrc": "7401:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7401:93:10"
															},
															"nativeSrc": "7401:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7401:93:10"
														},
														{
															"nativeSrc": "7503:19:10",
															"nodeType": "YulAssignment",
															"src": "7503:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7514:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7514:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7519:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7510:3:10"
																},
																"nativeSrc": "7510:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7510:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7503:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7162:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7296:3:10",
														"nodeType": "YulTypedName",
														"src": "7296:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7304:3:10",
														"nodeType": "YulTypedName",
														"src": "7304:3:10",
														"type": ""
													}
												],
												"src": "7162:366:10"
											},
											{
												"body": {
													"nativeSrc": "7705:248:10",
													"nodeType": "YulBlock",
													"src": "7705:248:10",
													"statements": [
														{
															"nativeSrc": "7715:26:10",
															"nodeType": "YulAssignment",
															"src": "7715:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7727:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7727:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7738:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7738:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7723:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7723:3:10"
																},
																"nativeSrc": "7723:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7723:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7715:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7715:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7762:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7762:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7773:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7773:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7758:3:10"
																		},
																		"nativeSrc": "7758:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7758:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7781:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7781:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7787:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7787:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7777:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7777:3:10"
																		},
																		"nativeSrc": "7777:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7777:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7751:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7751:6:10"
																},
																"nativeSrc": "7751:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7751:47:10"
															},
															"nativeSrc": "7751:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7751:47:10"
														},
														{
															"nativeSrc": "7807:139:10",
															"nodeType": "YulAssignment",
															"src": "7807:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7941:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7941:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7815:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7815:124:10"
																},
																"nativeSrc": "7815:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7815:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7807:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7534:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7685:9:10",
														"nodeType": "YulTypedName",
														"src": "7685:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7700:4:10",
														"nodeType": "YulTypedName",
														"src": "7700:4:10",
														"type": ""
													}
												],
												"src": "7534:419:10"
											},
											{
												"body": {
													"nativeSrc": "8065:65:10",
													"nodeType": "YulBlock",
													"src": "8065:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8087:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8095:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8095:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8083:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8083:3:10"
																		},
																		"nativeSrc": "8083:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8083:14:10"
																	},
																	{
																		"hexValue": "706572696f64206973206e6f742065787069726564",
																		"kind": "string",
																		"nativeSrc": "8099:23:10",
																		"nodeType": "YulLiteral",
																		"src": "8099:23:10",
																		"type": "",
																		"value": "period is not expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8076:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:10"
																},
																"nativeSrc": "8076:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8076:47:10"
															},
															"nativeSrc": "8076:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8076:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485",
												"nativeSrc": "7959:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8057:6:10",
														"nodeType": "YulTypedName",
														"src": "8057:6:10",
														"type": ""
													}
												],
												"src": "7959:171:10"
											},
											{
												"body": {
													"nativeSrc": "8282:220:10",
													"nodeType": "YulBlock",
													"src": "8282:220:10",
													"statements": [
														{
															"nativeSrc": "8292:74:10",
															"nodeType": "YulAssignment",
															"src": "8292:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8358:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8358:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8363:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8299:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8299:58:10"
																},
																"nativeSrc": "8299:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8299:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8292:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8464:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8464:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485",
																	"nativeSrc": "8375:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8375:88:10"
																},
																"nativeSrc": "8375:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8375:93:10"
															},
															"nativeSrc": "8375:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8375:93:10"
														},
														{
															"nativeSrc": "8477:19:10",
															"nodeType": "YulAssignment",
															"src": "8477:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8488:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8488:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8493:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8493:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8484:3:10"
																},
																"nativeSrc": "8484:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8484:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8136:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8270:3:10",
														"nodeType": "YulTypedName",
														"src": "8270:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8278:3:10",
														"nodeType": "YulTypedName",
														"src": "8278:3:10",
														"type": ""
													}
												],
												"src": "8136:366:10"
											},
											{
												"body": {
													"nativeSrc": "8679:248:10",
													"nodeType": "YulBlock",
													"src": "8679:248:10",
													"statements": [
														{
															"nativeSrc": "8689:26:10",
															"nodeType": "YulAssignment",
															"src": "8689:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8701:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8701:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8712:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8712:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8697:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8697:3:10"
																},
																"nativeSrc": "8697:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8697:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8689:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8736:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8736:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8747:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8747:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8732:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8732:3:10"
																		},
																		"nativeSrc": "8732:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8732:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8755:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8755:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8761:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8751:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8751:3:10"
																		},
																		"nativeSrc": "8751:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8751:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8725:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8725:6:10"
																},
																"nativeSrc": "8725:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8725:47:10"
															},
															"nativeSrc": "8725:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8725:47:10"
														},
														{
															"nativeSrc": "8781:139:10",
															"nodeType": "YulAssignment",
															"src": "8781:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8915:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8915:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8789:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8789:124:10"
																},
																"nativeSrc": "8789:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8789:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8781:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8508:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8659:9:10",
														"nodeType": "YulTypedName",
														"src": "8659:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8674:4:10",
														"nodeType": "YulTypedName",
														"src": "8674:4:10",
														"type": ""
													}
												],
												"src": "8508:419:10"
											},
											{
												"body": {
													"nativeSrc": "8996:80:10",
													"nodeType": "YulBlock",
													"src": "8996:80:10",
													"statements": [
														{
															"nativeSrc": "9006:22:10",
															"nodeType": "YulAssignment",
															"src": "9006:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9021:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9021:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9015:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9015:5:10"
																},
																"nativeSrc": "9015:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9015:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9006:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9006:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9064:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9064:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9037:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "9037:26:10"
																},
																"nativeSrc": "9037:33:10",
																"nodeType": "YulFunctionCall",
																"src": "9037:33:10"
															},
															"nativeSrc": "9037:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "9037:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8933:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8974:6:10",
														"nodeType": "YulTypedName",
														"src": "8974:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8982:3:10",
														"nodeType": "YulTypedName",
														"src": "8982:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8990:5:10",
														"nodeType": "YulTypedName",
														"src": "8990:5:10",
														"type": ""
													}
												],
												"src": "8933:143:10"
											},
											{
												"body": {
													"nativeSrc": "9159:274:10",
													"nodeType": "YulBlock",
													"src": "9159:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9205:83:10",
																"nodeType": "YulBlock",
																"src": "9205:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9207:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9207:77:10"
																			},
																			"nativeSrc": "9207:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9207:79:10"
																		},
																		"nativeSrc": "9207:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9207:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9180:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9180:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9189:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9189:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9176:3:10"
																		},
																		"nativeSrc": "9176:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9176:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9201:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9172:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9172:3:10"
																},
																"nativeSrc": "9172:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9172:32:10"
															},
															"nativeSrc": "9169:119:10",
															"nodeType": "YulIf",
															"src": "9169:119:10"
														},
														{
															"nativeSrc": "9298:128:10",
															"nodeType": "YulBlock",
															"src": "9298:128:10",
															"statements": [
																{
																	"nativeSrc": "9313:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9313:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9327:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9327:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9317:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9317:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9342:74:10",
																	"nodeType": "YulAssignment",
																	"src": "9342:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9388:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9388:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9399:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9399:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9384:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9384:3:10"
																				},
																				"nativeSrc": "9384:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9384:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9408:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9408:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9352:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "9352:31:10"
																		},
																		"nativeSrc": "9352:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9352:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9342:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9342:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9082:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9129:9:10",
														"nodeType": "YulTypedName",
														"src": "9129:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9140:7:10",
														"nodeType": "YulTypedName",
														"src": "9140:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9152:6:10",
														"nodeType": "YulTypedName",
														"src": "9152:6:10",
														"type": ""
													}
												],
												"src": "9082:351:10"
											},
											{
												"body": {
													"nativeSrc": "9545:130:10",
													"nodeType": "YulBlock",
													"src": "9545:130:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9567:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9567:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9575:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9575:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9563:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9563:3:10"
																		},
																		"nativeSrc": "9563:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9563:14:10"
																	},
																	{
																		"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f756768206261",
																		"kind": "string",
																		"nativeSrc": "9579:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9579:34:10",
																		"type": "",
																		"value": "Contract does not have enough ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:10"
																},
																"nativeSrc": "9556:58:10",
																"nodeType": "YulFunctionCall",
																"src": "9556:58:10"
															},
															"nativeSrc": "9556:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "9556:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9635:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9635:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9643:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9643:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9631:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9631:3:10"
																		},
																		"nativeSrc": "9631:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9631:15:10"
																	},
																	{
																		"hexValue": "6c616e636520746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "9648:19:10",
																		"nodeType": "YulLiteral",
																		"src": "9648:19:10",
																		"type": "",
																		"value": "lance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:10"
																},
																"nativeSrc": "9624:44:10",
																"nodeType": "YulFunctionCall",
																"src": "9624:44:10"
															},
															"nativeSrc": "9624:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "9624:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8",
												"nativeSrc": "9439:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9537:6:10",
														"nodeType": "YulTypedName",
														"src": "9537:6:10",
														"type": ""
													}
												],
												"src": "9439:236:10"
											},
											{
												"body": {
													"nativeSrc": "9827:220:10",
													"nodeType": "YulBlock",
													"src": "9827:220:10",
													"statements": [
														{
															"nativeSrc": "9837:74:10",
															"nodeType": "YulAssignment",
															"src": "9837:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9903:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9903:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9908:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9908:2:10",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9844:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9844:58:10"
																},
																"nativeSrc": "9844:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9844:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10009:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8",
																	"nativeSrc": "9920:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9920:88:10"
																},
																"nativeSrc": "9920:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9920:93:10"
															},
															"nativeSrc": "9920:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9920:93:10"
														},
														{
															"nativeSrc": "10022:19:10",
															"nodeType": "YulAssignment",
															"src": "10022:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10033:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10033:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10038:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10038:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10029:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10029:3:10"
																},
																"nativeSrc": "10029:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10029:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10022:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10022:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9681:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9815:3:10",
														"nodeType": "YulTypedName",
														"src": "9815:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9823:3:10",
														"nodeType": "YulTypedName",
														"src": "9823:3:10",
														"type": ""
													}
												],
												"src": "9681:366:10"
											},
											{
												"body": {
													"nativeSrc": "10224:248:10",
													"nodeType": "YulBlock",
													"src": "10224:248:10",
													"statements": [
														{
															"nativeSrc": "10234:26:10",
															"nodeType": "YulAssignment",
															"src": "10234:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10246:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10246:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10242:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:10"
																},
																"nativeSrc": "10242:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10242:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10234:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10234:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10281:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10292:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10292:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10277:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10277:3:10"
																		},
																		"nativeSrc": "10277:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10277:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10300:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10300:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10306:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10296:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10296:3:10"
																		},
																		"nativeSrc": "10296:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10296:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:10"
																},
																"nativeSrc": "10270:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10270:47:10"
															},
															"nativeSrc": "10270:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10270:47:10"
														},
														{
															"nativeSrc": "10326:139:10",
															"nodeType": "YulAssignment",
															"src": "10326:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10460:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10460:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10334:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10334:124:10"
																},
																"nativeSrc": "10334:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10334:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10326:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10326:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10053:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10204:9:10",
														"nodeType": "YulTypedName",
														"src": "10204:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10219:4:10",
														"nodeType": "YulTypedName",
														"src": "10219:4:10",
														"type": ""
													}
												],
												"src": "10053:419:10"
											},
											{
												"body": {
													"nativeSrc": "10584:59:10",
													"nodeType": "YulBlock",
													"src": "10584:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10606:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10606:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10614:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10614:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10602:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:10"
																		},
																		"nativeSrc": "10602:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10602:14:10"
																	},
																	{
																		"hexValue": "616464206d6f726520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10618:17:10",
																		"nodeType": "YulLiteral",
																		"src": "10618:17:10",
																		"type": "",
																		"value": "add more amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10595:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10595:6:10"
																},
																"nativeSrc": "10595:41:10",
																"nodeType": "YulFunctionCall",
																"src": "10595:41:10"
															},
															"nativeSrc": "10595:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "10595:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d",
												"nativeSrc": "10478:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10576:6:10",
														"nodeType": "YulTypedName",
														"src": "10576:6:10",
														"type": ""
													}
												],
												"src": "10478:165:10"
											},
											{
												"body": {
													"nativeSrc": "10795:220:10",
													"nodeType": "YulBlock",
													"src": "10795:220:10",
													"statements": [
														{
															"nativeSrc": "10805:74:10",
															"nodeType": "YulAssignment",
															"src": "10805:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10871:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10871:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10876:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10876:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10812:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10812:58:10"
																},
																"nativeSrc": "10812:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10812:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10805:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10977:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d",
																	"nativeSrc": "10888:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10888:88:10"
																},
																"nativeSrc": "10888:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10888:93:10"
															},
															"nativeSrc": "10888:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10888:93:10"
														},
														{
															"nativeSrc": "10990:19:10",
															"nodeType": "YulAssignment",
															"src": "10990:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11001:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11006:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10997:3:10"
																},
																"nativeSrc": "10997:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10997:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10990:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10649:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10783:3:10",
														"nodeType": "YulTypedName",
														"src": "10783:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10791:3:10",
														"nodeType": "YulTypedName",
														"src": "10791:3:10",
														"type": ""
													}
												],
												"src": "10649:366:10"
											},
											{
												"body": {
													"nativeSrc": "11192:248:10",
													"nodeType": "YulBlock",
													"src": "11192:248:10",
													"statements": [
														{
															"nativeSrc": "11202:26:10",
															"nodeType": "YulAssignment",
															"src": "11202:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11214:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11214:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11225:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11225:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11210:3:10"
																},
																"nativeSrc": "11210:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11210:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11202:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11202:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11249:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11249:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11260:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11260:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11245:3:10"
																		},
																		"nativeSrc": "11245:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11245:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11268:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11268:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11274:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11274:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11264:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11264:3:10"
																		},
																		"nativeSrc": "11264:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11264:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:10"
																},
																"nativeSrc": "11238:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11238:47:10"
															},
															"nativeSrc": "11238:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11238:47:10"
														},
														{
															"nativeSrc": "11294:139:10",
															"nodeType": "YulAssignment",
															"src": "11294:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11428:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11428:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11302:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11302:124:10"
																},
																"nativeSrc": "11302:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11302:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11294:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11021:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11172:9:10",
														"nodeType": "YulTypedName",
														"src": "11172:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11187:4:10",
														"nodeType": "YulTypedName",
														"src": "11187:4:10",
														"type": ""
													}
												],
												"src": "11021:419:10"
											},
											{
												"body": {
													"nativeSrc": "11552:59:10",
													"nodeType": "YulBlock",
													"src": "11552:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11574:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11574:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11582:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11582:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11570:3:10"
																		},
																		"nativeSrc": "11570:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11570:14:10"
																	},
																	{
																		"hexValue": "616464206c65737320616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11586:17:10",
																		"nodeType": "YulLiteral",
																		"src": "11586:17:10",
																		"type": "",
																		"value": "add less amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11563:6:10"
																},
																"nativeSrc": "11563:41:10",
																"nodeType": "YulFunctionCall",
																"src": "11563:41:10"
															},
															"nativeSrc": "11563:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "11563:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23",
												"nativeSrc": "11446:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11544:6:10",
														"nodeType": "YulTypedName",
														"src": "11544:6:10",
														"type": ""
													}
												],
												"src": "11446:165:10"
											},
											{
												"body": {
													"nativeSrc": "11763:220:10",
													"nodeType": "YulBlock",
													"src": "11763:220:10",
													"statements": [
														{
															"nativeSrc": "11773:74:10",
															"nodeType": "YulAssignment",
															"src": "11773:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11839:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11839:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11844:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11844:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11780:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11780:58:10"
																},
																"nativeSrc": "11780:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11780:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11773:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11945:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11945:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23",
																	"nativeSrc": "11856:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11856:88:10"
																},
																"nativeSrc": "11856:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11856:93:10"
															},
															"nativeSrc": "11856:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11856:93:10"
														},
														{
															"nativeSrc": "11958:19:10",
															"nodeType": "YulAssignment",
															"src": "11958:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11969:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11969:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11974:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11974:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11965:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11965:3:10"
																},
																"nativeSrc": "11965:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11965:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11958:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11958:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11617:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11751:3:10",
														"nodeType": "YulTypedName",
														"src": "11751:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11759:3:10",
														"nodeType": "YulTypedName",
														"src": "11759:3:10",
														"type": ""
													}
												],
												"src": "11617:366:10"
											},
											{
												"body": {
													"nativeSrc": "12160:248:10",
													"nodeType": "YulBlock",
													"src": "12160:248:10",
													"statements": [
														{
															"nativeSrc": "12170:26:10",
															"nodeType": "YulAssignment",
															"src": "12170:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12182:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12182:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12193:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12193:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12178:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12178:3:10"
																},
																"nativeSrc": "12178:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12178:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12170:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12170:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12217:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12217:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12228:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12228:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12213:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12213:3:10"
																		},
																		"nativeSrc": "12213:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12213:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12236:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12236:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12242:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12232:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12232:3:10"
																		},
																		"nativeSrc": "12232:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12232:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12206:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12206:6:10"
																},
																"nativeSrc": "12206:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12206:47:10"
															},
															"nativeSrc": "12206:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12206:47:10"
														},
														{
															"nativeSrc": "12262:139:10",
															"nodeType": "YulAssignment",
															"src": "12262:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12396:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12396:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12270:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12270:124:10"
																},
																"nativeSrc": "12270:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12270:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12262:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11989:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12140:9:10",
														"nodeType": "YulTypedName",
														"src": "12140:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12155:4:10",
														"nodeType": "YulTypedName",
														"src": "12155:4:10",
														"type": ""
													}
												],
												"src": "11989:419:10"
											},
											{
												"body": {
													"nativeSrc": "12520:57:10",
													"nodeType": "YulBlock",
													"src": "12520:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12542:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12542:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12550:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12550:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12538:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12538:3:10"
																		},
																		"nativeSrc": "12538:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12538:14:10"
																	},
																	{
																		"hexValue": "696e76616c6964206d6f6e7468",
																		"kind": "string",
																		"nativeSrc": "12554:15:10",
																		"nodeType": "YulLiteral",
																		"src": "12554:15:10",
																		"type": "",
																		"value": "invalid month"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12531:6:10"
																},
																"nativeSrc": "12531:39:10",
																"nodeType": "YulFunctionCall",
																"src": "12531:39:10"
															},
															"nativeSrc": "12531:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "12531:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0",
												"nativeSrc": "12414:163:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12512:6:10",
														"nodeType": "YulTypedName",
														"src": "12512:6:10",
														"type": ""
													}
												],
												"src": "12414:163:10"
											},
											{
												"body": {
													"nativeSrc": "12729:220:10",
													"nodeType": "YulBlock",
													"src": "12729:220:10",
													"statements": [
														{
															"nativeSrc": "12739:74:10",
															"nodeType": "YulAssignment",
															"src": "12739:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12805:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12805:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12810:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12746:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12746:58:10"
																},
																"nativeSrc": "12746:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12746:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12739:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12911:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12911:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0",
																	"nativeSrc": "12822:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12822:88:10"
																},
																"nativeSrc": "12822:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12822:93:10"
															},
															"nativeSrc": "12822:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12822:93:10"
														},
														{
															"nativeSrc": "12924:19:10",
															"nodeType": "YulAssignment",
															"src": "12924:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12935:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12935:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12940:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12940:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12931:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12931:3:10"
																},
																"nativeSrc": "12931:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12931:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12924:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12924:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12583:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12717:3:10",
														"nodeType": "YulTypedName",
														"src": "12717:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12725:3:10",
														"nodeType": "YulTypedName",
														"src": "12725:3:10",
														"type": ""
													}
												],
												"src": "12583:366:10"
											},
											{
												"body": {
													"nativeSrc": "13126:248:10",
													"nodeType": "YulBlock",
													"src": "13126:248:10",
													"statements": [
														{
															"nativeSrc": "13136:26:10",
															"nodeType": "YulAssignment",
															"src": "13136:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13148:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13148:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13159:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13159:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13144:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13144:3:10"
																},
																"nativeSrc": "13144:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13144:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13136:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13136:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13183:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13183:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13194:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13194:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13179:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13179:3:10"
																		},
																		"nativeSrc": "13179:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13179:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13202:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13202:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13208:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13208:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13198:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13198:3:10"
																		},
																		"nativeSrc": "13198:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13198:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13172:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13172:6:10"
																},
																"nativeSrc": "13172:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13172:47:10"
															},
															"nativeSrc": "13172:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13172:47:10"
														},
														{
															"nativeSrc": "13228:139:10",
															"nodeType": "YulAssignment",
															"src": "13228:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13362:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13362:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13236:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13236:124:10"
																},
																"nativeSrc": "13236:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13236:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13228:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13228:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12955:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13106:9:10",
														"nodeType": "YulTypedName",
														"src": "13106:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13121:4:10",
														"nodeType": "YulTypedName",
														"src": "13121:4:10",
														"type": ""
													}
												],
												"src": "12955:419:10"
											},
											{
												"body": {
													"nativeSrc": "13486:58:10",
													"nodeType": "YulBlock",
													"src": "13486:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13508:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13508:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13516:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13516:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13504:3:10"
																		},
																		"nativeSrc": "13504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13504:14:10"
																	},
																	{
																		"hexValue": "616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "13520:16:10",
																		"nodeType": "YulLiteral",
																		"src": "13520:16:10",
																		"type": "",
																		"value": "already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13497:6:10"
																},
																"nativeSrc": "13497:40:10",
																"nodeType": "YulFunctionCall",
																"src": "13497:40:10"
															},
															"nativeSrc": "13497:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "13497:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e",
												"nativeSrc": "13380:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13478:6:10",
														"nodeType": "YulTypedName",
														"src": "13478:6:10",
														"type": ""
													}
												],
												"src": "13380:164:10"
											},
											{
												"body": {
													"nativeSrc": "13696:220:10",
													"nodeType": "YulBlock",
													"src": "13696:220:10",
													"statements": [
														{
															"nativeSrc": "13706:74:10",
															"nodeType": "YulAssignment",
															"src": "13706:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13772:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13772:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13777:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13777:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13713:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13713:58:10"
																},
																"nativeSrc": "13713:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13713:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13706:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13706:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13878:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13878:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e",
																	"nativeSrc": "13789:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13789:88:10"
																},
																"nativeSrc": "13789:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13789:93:10"
															},
															"nativeSrc": "13789:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13789:93:10"
														},
														{
															"nativeSrc": "13891:19:10",
															"nodeType": "YulAssignment",
															"src": "13891:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13902:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13902:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13907:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13907:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13898:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13898:3:10"
																},
																"nativeSrc": "13898:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13898:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13891:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13891:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13550:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13684:3:10",
														"nodeType": "YulTypedName",
														"src": "13684:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13692:3:10",
														"nodeType": "YulTypedName",
														"src": "13692:3:10",
														"type": ""
													}
												],
												"src": "13550:366:10"
											},
											{
												"body": {
													"nativeSrc": "14093:248:10",
													"nodeType": "YulBlock",
													"src": "14093:248:10",
													"statements": [
														{
															"nativeSrc": "14103:26:10",
															"nodeType": "YulAssignment",
															"src": "14103:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14115:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14115:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14126:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14111:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14111:3:10"
																},
																"nativeSrc": "14111:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14111:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14103:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14103:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14150:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14150:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14161:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14146:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14146:3:10"
																		},
																		"nativeSrc": "14146:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14146:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14169:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14169:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14175:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14175:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14165:3:10"
																		},
																		"nativeSrc": "14165:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14165:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14139:6:10"
																},
																"nativeSrc": "14139:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14139:47:10"
															},
															"nativeSrc": "14139:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14139:47:10"
														},
														{
															"nativeSrc": "14195:139:10",
															"nodeType": "YulAssignment",
															"src": "14195:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14329:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14329:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14203:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14203:124:10"
																},
																"nativeSrc": "14203:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14203:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14195:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14195:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13922:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14073:9:10",
														"nodeType": "YulTypedName",
														"src": "14073:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14088:4:10",
														"nodeType": "YulTypedName",
														"src": "14088:4:10",
														"type": ""
													}
												],
												"src": "13922:419:10"
											},
											{
												"body": {
													"nativeSrc": "14375:152:10",
													"nodeType": "YulBlock",
													"src": "14375:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14392:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14392:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14395:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14395:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14385:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14385:6:10"
																},
																"nativeSrc": "14385:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14385:88:10"
															},
															"nativeSrc": "14385:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14385:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14489:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14489:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14492:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14492:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14482:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14482:6:10"
																},
																"nativeSrc": "14482:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14482:15:10"
															},
															"nativeSrc": "14482:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14482:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14513:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14513:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14516:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14516:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14506:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14506:6:10"
																},
																"nativeSrc": "14506:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14506:15:10"
															},
															"nativeSrc": "14506:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14506:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14347:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14347:180:10"
											},
											{
												"body": {
													"nativeSrc": "14581:362:10",
													"nodeType": "YulBlock",
													"src": "14581:362:10",
													"statements": [
														{
															"nativeSrc": "14591:25:10",
															"nodeType": "YulAssignment",
															"src": "14591:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14614:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14614:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14596:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14596:17:10"
																},
																"nativeSrc": "14596:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14596:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14591:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14591:1:10"
																}
															]
														},
														{
															"nativeSrc": "14625:25:10",
															"nodeType": "YulAssignment",
															"src": "14625:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14648:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14648:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14630:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14630:17:10"
																},
																"nativeSrc": "14630:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14630:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14625:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14625:1:10"
																}
															]
														},
														{
															"nativeSrc": "14659:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14659:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14682:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14682:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14685:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14685:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14678:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14678:3:10"
																},
																"nativeSrc": "14678:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14678:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14663:11:10",
																	"nodeType": "YulTypedName",
																	"src": "14663:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14696:41:10",
															"nodeType": "YulAssignment",
															"src": "14696:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14725:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "14725:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14707:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14707:17:10"
																},
																"nativeSrc": "14707:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14707:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14696:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14696:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14914:22:10",
																"nodeType": "YulBlock",
																"src": "14914:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14916:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14916:16:10"
																			},
																			"nativeSrc": "14916:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14916:18:10"
																		},
																		"nativeSrc": "14916:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14916:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14847:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14847:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14840:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14840:6:10"
																				},
																				"nativeSrc": "14840:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14840:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14870:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14870:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14877:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "14877:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14886:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "14886:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14873:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "14873:3:10"
																						},
																						"nativeSrc": "14873:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14873:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14867:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "14867:2:10"
																				},
																				"nativeSrc": "14867:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14867:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14820:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14820:2:10"
																		},
																		"nativeSrc": "14820:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14820:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14800:6:10"
																},
																"nativeSrc": "14800:113:10",
																"nodeType": "YulFunctionCall",
																"src": "14800:113:10"
															},
															"nativeSrc": "14797:139:10",
															"nodeType": "YulIf",
															"src": "14797:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14533:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14564:1:10",
														"nodeType": "YulTypedName",
														"src": "14564:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14567:1:10",
														"nodeType": "YulTypedName",
														"src": "14567:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14573:7:10",
														"nodeType": "YulTypedName",
														"src": "14573:7:10",
														"type": ""
													}
												],
												"src": "14533:410:10"
											},
											{
												"body": {
													"nativeSrc": "15002:32:10",
													"nodeType": "YulBlock",
													"src": "15002:32:10",
													"statements": [
														{
															"nativeSrc": "15012:16:10",
															"nodeType": "YulAssignment",
															"src": "15012:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "15023:5:10",
																"nodeType": "YulIdentifier",
																"src": "15023:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15012:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "15012:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "14949:85:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14984:5:10",
														"nodeType": "YulTypedName",
														"src": "14984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14994:7:10",
														"nodeType": "YulTypedName",
														"src": "14994:7:10",
														"type": ""
													}
												],
												"src": "14949:85:10"
											},
											{
												"body": {
													"nativeSrc": "15084:57:10",
													"nodeType": "YulBlock",
													"src": "15084:57:10",
													"statements": [
														{
															"nativeSrc": "15094:41:10",
															"nodeType": "YulAssignment",
															"src": "15094:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15109:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15109:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15116:18:10",
																		"nodeType": "YulLiteral",
																		"src": "15116:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15105:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15105:3:10"
																},
																"nativeSrc": "15105:30:10",
																"nodeType": "YulFunctionCall",
																"src": "15105:30:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15094:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "15094:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "15040:101:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15066:5:10",
														"nodeType": "YulTypedName",
														"src": "15066:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15076:7:10",
														"nodeType": "YulTypedName",
														"src": "15076:7:10",
														"type": ""
													}
												],
												"src": "15040:101:10"
											},
											{
												"body": {
													"nativeSrc": "15214:89:10",
													"nodeType": "YulBlock",
													"src": "15214:89:10",
													"statements": [
														{
															"nativeSrc": "15224:73:10",
															"nodeType": "YulAssignment",
															"src": "15224:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15289:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "15289:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "15263:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "15263:25:10"
																				},
																				"nativeSrc": "15263:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15263:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15254:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "15254:8:10"
																		},
																		"nativeSrc": "15254:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15254:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "15237:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "15237:16:10"
																},
																"nativeSrc": "15237:60:10",
																"nodeType": "YulFunctionCall",
																"src": "15237:60:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15224:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "15224:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "15147:156:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15194:5:10",
														"nodeType": "YulTypedName",
														"src": "15194:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15204:9:10",
														"nodeType": "YulTypedName",
														"src": "15204:9:10",
														"type": ""
													}
												],
												"src": "15147:156:10"
											},
											{
												"body": {
													"nativeSrc": "15381:73:10",
													"nodeType": "YulBlock",
													"src": "15381:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15398:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15398:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15441:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "15441:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "15403:37:10",
																			"nodeType": "YulIdentifier",
																			"src": "15403:37:10"
																		},
																		"nativeSrc": "15403:44:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15403:44:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15391:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15391:6:10"
																},
																"nativeSrc": "15391:57:10",
																"nodeType": "YulFunctionCall",
																"src": "15391:57:10"
															},
															"nativeSrc": "15391:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "15391:57:10"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "15309:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15369:5:10",
														"nodeType": "YulTypedName",
														"src": "15369:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15376:3:10",
														"nodeType": "YulTypedName",
														"src": "15376:3:10",
														"type": ""
													}
												],
												"src": "15309:145:10"
											},
											{
												"body": {
													"nativeSrc": "15565:131:10",
													"nodeType": "YulBlock",
													"src": "15565:131:10",
													"statements": [
														{
															"nativeSrc": "15575:26:10",
															"nodeType": "YulAssignment",
															"src": "15575:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15587:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15587:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15598:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15598:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15583:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15583:3:10"
																},
																"nativeSrc": "15583:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15583:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15575:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15575:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15662:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15662:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15675:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15675:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15686:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15686:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15671:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15671:3:10"
																		},
																		"nativeSrc": "15671:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15671:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "15611:50:10",
																	"nodeType": "YulIdentifier",
																	"src": "15611:50:10"
																},
																"nativeSrc": "15611:78:10",
																"nodeType": "YulFunctionCall",
																"src": "15611:78:10"
															},
															"nativeSrc": "15611:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "15611:78:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "15460:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15537:9:10",
														"nodeType": "YulTypedName",
														"src": "15537:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15549:6:10",
														"nodeType": "YulTypedName",
														"src": "15549:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15560:4:10",
														"nodeType": "YulTypedName",
														"src": "15560:4:10",
														"type": ""
													}
												],
												"src": "15460:236:10"
											},
											{
												"body": {
													"nativeSrc": "15808:75:10",
													"nodeType": "YulBlock",
													"src": "15808:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15830:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15830:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15838:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15838:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15826:3:10"
																		},
																		"nativeSrc": "15826:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15826:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "15842:33:10",
																		"nodeType": "YulLiteral",
																		"src": "15842:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15819:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15819:6:10"
																},
																"nativeSrc": "15819:57:10",
																"nodeType": "YulFunctionCall",
																"src": "15819:57:10"
															},
															"nativeSrc": "15819:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "15819:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "15702:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15800:6:10",
														"nodeType": "YulTypedName",
														"src": "15800:6:10",
														"type": ""
													}
												],
												"src": "15702:181:10"
											},
											{
												"body": {
													"nativeSrc": "16035:220:10",
													"nodeType": "YulBlock",
													"src": "16035:220:10",
													"statements": [
														{
															"nativeSrc": "16045:74:10",
															"nodeType": "YulAssignment",
															"src": "16045:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16111:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16111:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16116:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16116:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16052:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16052:58:10"
																},
																"nativeSrc": "16052:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16052:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16045:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16045:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16217:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16217:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "16128:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16128:88:10"
																},
																"nativeSrc": "16128:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16128:93:10"
															},
															"nativeSrc": "16128:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16128:93:10"
														},
														{
															"nativeSrc": "16230:19:10",
															"nodeType": "YulAssignment",
															"src": "16230:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16241:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16241:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16246:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16246:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16237:3:10"
																},
																"nativeSrc": "16237:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16237:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16230:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16230:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15889:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16023:3:10",
														"nodeType": "YulTypedName",
														"src": "16023:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16031:3:10",
														"nodeType": "YulTypedName",
														"src": "16031:3:10",
														"type": ""
													}
												],
												"src": "15889:366:10"
											},
											{
												"body": {
													"nativeSrc": "16432:248:10",
													"nodeType": "YulBlock",
													"src": "16432:248:10",
													"statements": [
														{
															"nativeSrc": "16442:26:10",
															"nodeType": "YulAssignment",
															"src": "16442:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16454:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16454:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16465:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16465:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16450:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16450:3:10"
																},
																"nativeSrc": "16450:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16450:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16442:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16442:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16489:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16489:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16500:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16500:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16485:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16485:3:10"
																		},
																		"nativeSrc": "16485:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16485:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16508:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16508:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16514:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16514:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16504:3:10"
																		},
																		"nativeSrc": "16504:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16504:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16478:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16478:6:10"
																},
																"nativeSrc": "16478:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16478:47:10"
															},
															"nativeSrc": "16478:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16478:47:10"
														},
														{
															"nativeSrc": "16534:139:10",
															"nodeType": "YulAssignment",
															"src": "16534:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16668:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16668:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16542:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16542:124:10"
																},
																"nativeSrc": "16542:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16542:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16534:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16534:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16261:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16412:9:10",
														"nodeType": "YulTypedName",
														"src": "16412:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16427:4:10",
														"nodeType": "YulTypedName",
														"src": "16427:4:10",
														"type": ""
													}
												],
												"src": "16261:419:10"
											},
											{
												"body": {
													"nativeSrc": "16730:147:10",
													"nodeType": "YulBlock",
													"src": "16730:147:10",
													"statements": [
														{
															"nativeSrc": "16740:25:10",
															"nodeType": "YulAssignment",
															"src": "16740:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16763:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16763:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16745:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16745:17:10"
																},
																"nativeSrc": "16745:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16745:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16740:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16740:1:10"
																}
															]
														},
														{
															"nativeSrc": "16774:25:10",
															"nodeType": "YulAssignment",
															"src": "16774:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16797:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16797:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16779:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16779:17:10"
																},
																"nativeSrc": "16779:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16779:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16774:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16774:1:10"
																}
															]
														},
														{
															"nativeSrc": "16808:16:10",
															"nodeType": "YulAssignment",
															"src": "16808:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16819:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16819:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16822:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16822:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16815:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16815:3:10"
																},
																"nativeSrc": "16815:9:10",
																"nodeType": "YulFunctionCall",
																"src": "16815:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16808:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16848:22:10",
																"nodeType": "YulBlock",
																"src": "16848:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16850:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16850:16:10"
																			},
																			"nativeSrc": "16850:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16850:18:10"
																		},
																		"nativeSrc": "16850:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16850:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16840:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16840:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16843:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16843:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16837:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "16837:2:10"
																},
																"nativeSrc": "16837:10:10",
																"nodeType": "YulFunctionCall",
																"src": "16837:10:10"
															},
															"nativeSrc": "16834:36:10",
															"nodeType": "YulIf",
															"src": "16834:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16686:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16717:1:10",
														"nodeType": "YulTypedName",
														"src": "16717:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16720:1:10",
														"nodeType": "YulTypedName",
														"src": "16720:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16726:3:10",
														"nodeType": "YulTypedName",
														"src": "16726:3:10",
														"type": ""
													}
												],
												"src": "16686:191:10"
											},
											{
												"body": {
													"nativeSrc": "17009:206:10",
													"nodeType": "YulBlock",
													"src": "17009:206:10",
													"statements": [
														{
															"nativeSrc": "17019:26:10",
															"nodeType": "YulAssignment",
															"src": "17019:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17031:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17031:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17042:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17042:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17027:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17027:3:10"
																},
																"nativeSrc": "17027:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17027:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17019:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17019:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17099:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17099:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17112:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17112:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17123:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17123:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17108:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17108:3:10"
																		},
																		"nativeSrc": "17108:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17108:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17055:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17055:43:10"
																},
																"nativeSrc": "17055:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17055:71:10"
															},
															"nativeSrc": "17055:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17055:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17180:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17180:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17193:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17193:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17204:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17204:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17189:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17189:3:10"
																		},
																		"nativeSrc": "17189:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17189:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17136:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17136:43:10"
																},
																"nativeSrc": "17136:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17136:72:10"
															},
															"nativeSrc": "17136:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17136:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16883:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16973:9:10",
														"nodeType": "YulTypedName",
														"src": "16973:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16985:6:10",
														"nodeType": "YulTypedName",
														"src": "16985:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16993:6:10",
														"nodeType": "YulTypedName",
														"src": "16993:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17004:4:10",
														"nodeType": "YulTypedName",
														"src": "17004:4:10",
														"type": ""
													}
												],
												"src": "16883:332:10"
											},
											{
												"body": {
													"nativeSrc": "17327:60:10",
													"nodeType": "YulBlock",
													"src": "17327:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17349:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17349:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17357:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17357:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17345:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17345:3:10"
																		},
																		"nativeSrc": "17345:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17345:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "17361:18:10",
																		"nodeType": "YulLiteral",
																		"src": "17361:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17338:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17338:6:10"
																},
																"nativeSrc": "17338:42:10",
																"nodeType": "YulFunctionCall",
																"src": "17338:42:10"
															},
															"nativeSrc": "17338:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "17338:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "17221:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17319:6:10",
														"nodeType": "YulTypedName",
														"src": "17319:6:10",
														"type": ""
													}
												],
												"src": "17221:166:10"
											},
											{
												"body": {
													"nativeSrc": "17539:220:10",
													"nodeType": "YulBlock",
													"src": "17539:220:10",
													"statements": [
														{
															"nativeSrc": "17549:74:10",
															"nodeType": "YulAssignment",
															"src": "17549:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17615:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17615:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17620:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17620:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17556:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17556:58:10"
																},
																"nativeSrc": "17556:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17556:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17549:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17549:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17721:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17721:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "17632:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17632:88:10"
																},
																"nativeSrc": "17632:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17632:93:10"
															},
															"nativeSrc": "17632:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17632:93:10"
														},
														{
															"nativeSrc": "17734:19:10",
															"nodeType": "YulAssignment",
															"src": "17734:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17745:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17745:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17750:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17750:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17741:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17741:3:10"
																},
																"nativeSrc": "17741:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17741:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17734:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17734:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17393:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17527:3:10",
														"nodeType": "YulTypedName",
														"src": "17527:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17535:3:10",
														"nodeType": "YulTypedName",
														"src": "17535:3:10",
														"type": ""
													}
												],
												"src": "17393:366:10"
											},
											{
												"body": {
													"nativeSrc": "17936:248:10",
													"nodeType": "YulBlock",
													"src": "17936:248:10",
													"statements": [
														{
															"nativeSrc": "17946:26:10",
															"nodeType": "YulAssignment",
															"src": "17946:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17958:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17958:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17969:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17969:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17954:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17954:3:10"
																},
																"nativeSrc": "17954:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17954:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17946:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17946:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17993:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17993:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18004:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18004:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17989:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17989:3:10"
																		},
																		"nativeSrc": "17989:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17989:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18012:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18012:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18018:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18018:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18008:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18008:3:10"
																		},
																		"nativeSrc": "18008:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18008:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17982:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17982:6:10"
																},
																"nativeSrc": "17982:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17982:47:10"
															},
															"nativeSrc": "17982:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17982:47:10"
														},
														{
															"nativeSrc": "18038:139:10",
															"nodeType": "YulAssignment",
															"src": "18038:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18172:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18172:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18046:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18046:124:10"
																},
																"nativeSrc": "18046:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18046:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18038:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18038:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17765:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17916:9:10",
														"nodeType": "YulTypedName",
														"src": "17916:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17931:4:10",
														"nodeType": "YulTypedName",
														"src": "17931:4:10",
														"type": ""
													}
												],
												"src": "17765:419:10"
											},
											{
												"body": {
													"nativeSrc": "18344:288:10",
													"nodeType": "YulBlock",
													"src": "18344:288:10",
													"statements": [
														{
															"nativeSrc": "18354:26:10",
															"nodeType": "YulAssignment",
															"src": "18354:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18366:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18366:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18377:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18377:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18362:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18362:3:10"
																},
																"nativeSrc": "18362:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18362:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18354:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18354:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18434:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18434:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18447:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18447:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18458:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18458:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18443:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18443:3:10"
																		},
																		"nativeSrc": "18443:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18443:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18390:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18390:43:10"
																},
																"nativeSrc": "18390:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18390:71:10"
															},
															"nativeSrc": "18390:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18390:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18515:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18515:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18528:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18528:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18539:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18539:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18524:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18524:3:10"
																		},
																		"nativeSrc": "18524:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18524:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18471:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18471:43:10"
																},
																"nativeSrc": "18471:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18471:72:10"
															},
															"nativeSrc": "18471:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18471:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18597:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18597:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18610:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18610:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18621:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18621:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18606:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18606:3:10"
																		},
																		"nativeSrc": "18606:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18606:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18553:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18553:43:10"
																},
																"nativeSrc": "18553:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18553:72:10"
															},
															"nativeSrc": "18553:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18553:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18190:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18300:9:10",
														"nodeType": "YulTypedName",
														"src": "18300:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18312:6:10",
														"nodeType": "YulTypedName",
														"src": "18312:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18320:6:10",
														"nodeType": "YulTypedName",
														"src": "18320:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18328:6:10",
														"nodeType": "YulTypedName",
														"src": "18328:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18339:4:10",
														"nodeType": "YulTypedName",
														"src": "18339:4:10",
														"type": ""
													}
												],
												"src": "18190:442:10"
											},
											{
												"body": {
													"nativeSrc": "18666:152:10",
													"nodeType": "YulBlock",
													"src": "18666:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18686:77:10",
																		"nodeType": "YulLiteral",
																		"src": "18686:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18676:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18676:6:10"
																},
																"nativeSrc": "18676:88:10",
																"nodeType": "YulFunctionCall",
																"src": "18676:88:10"
															},
															"nativeSrc": "18676:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "18676:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18780:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18780:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18783:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18783:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18773:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18773:6:10"
																},
																"nativeSrc": "18773:15:10",
																"nodeType": "YulFunctionCall",
																"src": "18773:15:10"
															},
															"nativeSrc": "18773:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "18773:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18804:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18804:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18807:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18807:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18797:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18797:6:10"
																},
																"nativeSrc": "18797:15:10",
																"nodeType": "YulFunctionCall",
																"src": "18797:15:10"
															},
															"nativeSrc": "18797:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "18797:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "18638:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "18638:180:10"
											},
											{
												"body": {
													"nativeSrc": "18866:143:10",
													"nodeType": "YulBlock",
													"src": "18866:143:10",
													"statements": [
														{
															"nativeSrc": "18876:25:10",
															"nodeType": "YulAssignment",
															"src": "18876:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18899:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18899:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18881:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18881:17:10"
																},
																"nativeSrc": "18881:20:10",
																"nodeType": "YulFunctionCall",
																"src": "18881:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18876:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18876:1:10"
																}
															]
														},
														{
															"nativeSrc": "18910:25:10",
															"nodeType": "YulAssignment",
															"src": "18910:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18933:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18933:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18915:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18915:17:10"
																},
																"nativeSrc": "18915:20:10",
																"nodeType": "YulFunctionCall",
																"src": "18915:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18910:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18910:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18957:22:10",
																"nodeType": "YulBlock",
																"src": "18957:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18959:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "18959:16:10"
																			},
																			"nativeSrc": "18959:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18959:18:10"
																		},
																		"nativeSrc": "18959:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "18959:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18954:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18954:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18947:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18947:6:10"
																},
																"nativeSrc": "18947:9:10",
																"nodeType": "YulFunctionCall",
																"src": "18947:9:10"
															},
															"nativeSrc": "18944:35:10",
															"nodeType": "YulIf",
															"src": "18944:35:10"
														},
														{
															"nativeSrc": "18989:14:10",
															"nodeType": "YulAssignment",
															"src": "18989:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18998:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18998:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19001:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19001:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18994:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18994:3:10"
																},
																"nativeSrc": "18994:9:10",
																"nodeType": "YulFunctionCall",
																"src": "18994:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18989:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18989:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18824:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18855:1:10",
														"nodeType": "YulTypedName",
														"src": "18855:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18858:1:10",
														"nodeType": "YulTypedName",
														"src": "18858:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18864:1:10",
														"nodeType": "YulTypedName",
														"src": "18864:1:10",
														"type": ""
													}
												],
												"src": "18824:185:10"
											},
											{
												"body": {
													"nativeSrc": "19055:76:10",
													"nodeType": "YulBlock",
													"src": "19055:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "19109:16:10",
																"nodeType": "YulBlock",
																"src": "19109:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19118:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19118:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19121:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19121:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19111:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19111:6:10"
																			},
																			"nativeSrc": "19111:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19111:12:10"
																		},
																		"nativeSrc": "19111:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19111:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19078:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "19078:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19100:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "19100:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "19085:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "19085:14:10"
																				},
																				"nativeSrc": "19085:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19085:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19075:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "19075:2:10"
																		},
																		"nativeSrc": "19075:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19075:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19068:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19068:6:10"
																},
																"nativeSrc": "19068:40:10",
																"nodeType": "YulFunctionCall",
																"src": "19068:40:10"
															},
															"nativeSrc": "19065:60:10",
															"nodeType": "YulIf",
															"src": "19065:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "19015:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19048:5:10",
														"nodeType": "YulTypedName",
														"src": "19048:5:10",
														"type": ""
													}
												],
												"src": "19015:116:10"
											},
											{
												"body": {
													"nativeSrc": "19197:77:10",
													"nodeType": "YulBlock",
													"src": "19197:77:10",
													"statements": [
														{
															"nativeSrc": "19207:22:10",
															"nodeType": "YulAssignment",
															"src": "19207:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19222:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19222:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19216:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19216:5:10"
																},
																"nativeSrc": "19216:13:10",
																"nodeType": "YulFunctionCall",
																"src": "19216:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19207:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19207:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19262:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19262:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "19238:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "19238:23:10"
																},
																"nativeSrc": "19238:30:10",
																"nodeType": "YulFunctionCall",
																"src": "19238:30:10"
															},
															"nativeSrc": "19238:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "19238:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "19137:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19175:6:10",
														"nodeType": "YulTypedName",
														"src": "19175:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19183:3:10",
														"nodeType": "YulTypedName",
														"src": "19183:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19191:5:10",
														"nodeType": "YulTypedName",
														"src": "19191:5:10",
														"type": ""
													}
												],
												"src": "19137:137:10"
											},
											{
												"body": {
													"nativeSrc": "19354:271:10",
													"nodeType": "YulBlock",
													"src": "19354:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "19400:83:10",
																"nodeType": "YulBlock",
																"src": "19400:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19402:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "19402:77:10"
																			},
																			"nativeSrc": "19402:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19402:79:10"
																		},
																		"nativeSrc": "19402:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19402:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19375:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19375:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19384:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19384:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19371:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19371:3:10"
																		},
																		"nativeSrc": "19371:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19371:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19396:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19396:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19367:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19367:3:10"
																},
																"nativeSrc": "19367:32:10",
																"nodeType": "YulFunctionCall",
																"src": "19367:32:10"
															},
															"nativeSrc": "19364:119:10",
															"nodeType": "YulIf",
															"src": "19364:119:10"
														},
														{
															"nativeSrc": "19493:125:10",
															"nodeType": "YulBlock",
															"src": "19493:125:10",
															"statements": [
																{
																	"nativeSrc": "19508:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19508:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19522:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19522:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19512:6:10",
																			"nodeType": "YulTypedName",
																			"src": "19512:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19537:71:10",
																	"nodeType": "YulAssignment",
																	"src": "19537:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19580:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "19580:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19591:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "19591:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19576:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "19576:3:10"
																				},
																				"nativeSrc": "19576:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19576:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19600:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19600:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "19547:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "19547:28:10"
																		},
																		"nativeSrc": "19547:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19547:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19537:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "19537:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "19280:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19324:9:10",
														"nodeType": "YulTypedName",
														"src": "19324:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19335:7:10",
														"nodeType": "YulTypedName",
														"src": "19335:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19347:6:10",
														"nodeType": "YulTypedName",
														"src": "19347:6:10",
														"type": ""
													}
												],
												"src": "19280:345:10"
											},
											{
												"body": {
													"nativeSrc": "19737:64:10",
													"nodeType": "YulBlock",
													"src": "19737:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19759:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19759:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19767:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19767:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19755:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19755:3:10"
																		},
																		"nativeSrc": "19755:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19755:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "19771:22:10",
																		"nodeType": "YulLiteral",
																		"src": "19771:22:10",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19748:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19748:6:10"
																},
																"nativeSrc": "19748:46:10",
																"nodeType": "YulFunctionCall",
																"src": "19748:46:10"
															},
															"nativeSrc": "19748:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "19748:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "19631:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19729:6:10",
														"nodeType": "YulTypedName",
														"src": "19729:6:10",
														"type": ""
													}
												],
												"src": "19631:170:10"
											},
											{
												"body": {
													"nativeSrc": "19953:220:10",
													"nodeType": "YulBlock",
													"src": "19953:220:10",
													"statements": [
														{
															"nativeSrc": "19963:74:10",
															"nodeType": "YulAssignment",
															"src": "19963:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20029:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20029:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20034:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20034:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19970:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19970:58:10"
																},
																"nativeSrc": "19970:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19970:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19963:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20135:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20135:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "20046:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20046:88:10"
																},
																"nativeSrc": "20046:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20046:93:10"
															},
															"nativeSrc": "20046:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20046:93:10"
														},
														{
															"nativeSrc": "20148:19:10",
															"nodeType": "YulAssignment",
															"src": "20148:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20159:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20159:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20164:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20164:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20155:3:10"
																},
																"nativeSrc": "20155:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20155:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20148:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20148:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19807:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19941:3:10",
														"nodeType": "YulTypedName",
														"src": "19941:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19949:3:10",
														"nodeType": "YulTypedName",
														"src": "19949:3:10",
														"type": ""
													}
												],
												"src": "19807:366:10"
											},
											{
												"body": {
													"nativeSrc": "20350:248:10",
													"nodeType": "YulBlock",
													"src": "20350:248:10",
													"statements": [
														{
															"nativeSrc": "20360:26:10",
															"nodeType": "YulAssignment",
															"src": "20360:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20372:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20372:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20383:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20383:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20368:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20368:3:10"
																},
																"nativeSrc": "20368:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20368:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20360:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20360:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20407:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20407:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20418:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20418:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20403:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20403:3:10"
																		},
																		"nativeSrc": "20403:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20403:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20426:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20426:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20432:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20432:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20422:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20422:3:10"
																		},
																		"nativeSrc": "20422:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20422:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20396:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20396:6:10"
																},
																"nativeSrc": "20396:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20396:47:10"
															},
															"nativeSrc": "20396:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20396:47:10"
														},
														{
															"nativeSrc": "20452:139:10",
															"nodeType": "YulAssignment",
															"src": "20452:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20586:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20460:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20460:124:10"
																},
																"nativeSrc": "20460:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20460:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20452:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20452:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20179:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20330:9:10",
														"nodeType": "YulTypedName",
														"src": "20330:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20345:4:10",
														"nodeType": "YulTypedName",
														"src": "20345:4:10",
														"type": ""
													}
												],
												"src": "20179:419:10"
											},
											{
												"body": {
													"nativeSrc": "20662:40:10",
													"nodeType": "YulBlock",
													"src": "20662:40:10",
													"statements": [
														{
															"nativeSrc": "20673:22:10",
															"nodeType": "YulAssignment",
															"src": "20673:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20689:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20683:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20683:5:10"
																},
																"nativeSrc": "20683:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20683:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20673:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20673:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20604:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20645:5:10",
														"nodeType": "YulTypedName",
														"src": "20645:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20655:6:10",
														"nodeType": "YulTypedName",
														"src": "20655:6:10",
														"type": ""
													}
												],
												"src": "20604:98:10"
											},
											{
												"body": {
													"nativeSrc": "20821:34:10",
													"nodeType": "YulBlock",
													"src": "20821:34:10",
													"statements": [
														{
															"nativeSrc": "20831:18:10",
															"nodeType": "YulAssignment",
															"src": "20831:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "20846:3:10",
																"nodeType": "YulIdentifier",
																"src": "20846:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20831:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "20831:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20708:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20793:3:10",
														"nodeType": "YulTypedName",
														"src": "20793:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20798:6:10",
														"nodeType": "YulTypedName",
														"src": "20798:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20809:11:10",
														"nodeType": "YulTypedName",
														"src": "20809:11:10",
														"type": ""
													}
												],
												"src": "20708:147:10"
											},
											{
												"body": {
													"nativeSrc": "20923:184:10",
													"nodeType": "YulBlock",
													"src": "20923:184:10",
													"statements": [
														{
															"nativeSrc": "20933:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "20933:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "20942:1:10",
																"nodeType": "YulLiteral",
																"src": "20942:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "20937:1:10",
																	"nodeType": "YulTypedName",
																	"src": "20937:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21002:63:10",
																"nodeType": "YulBlock",
																"src": "21002:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "21027:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "21027:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "21032:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "21032:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21023:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "21023:3:10"
																					},
																					"nativeSrc": "21023:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "21023:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "21046:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "21046:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "21051:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "21051:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "21042:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "21042:3:10"
																							},
																							"nativeSrc": "21042:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "21042:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "21036:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "21036:5:10"
																					},
																					"nativeSrc": "21036:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "21036:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "21016:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21016:6:10"
																			},
																			"nativeSrc": "21016:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21016:39:10"
																		},
																		"nativeSrc": "21016:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21016:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "20963:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "20963:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20966:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20966:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20960:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20960:2:10"
																},
																"nativeSrc": "20960:13:10",
																"nodeType": "YulFunctionCall",
																"src": "20960:13:10"
															},
															"nativeSrc": "20952:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20974:19:10",
																"nodeType": "YulBlock",
																"src": "20974:19:10",
																"statements": [
																	{
																		"nativeSrc": "20976:15:10",
																		"nodeType": "YulAssignment",
																		"src": "20976:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "20985:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "20985:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20988:2:10",
																					"nodeType": "YulLiteral",
																					"src": "20988:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20981:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "20981:3:10"
																			},
																			"nativeSrc": "20981:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20981:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "20976:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "20976:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20956:3:10",
																"nodeType": "YulBlock",
																"src": "20956:3:10",
																"statements": []
															},
															"src": "20952:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "21085:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21085:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "21090:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21090:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21081:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21081:3:10"
																		},
																		"nativeSrc": "21081:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21081:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21099:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21099:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21074:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21074:6:10"
																},
																"nativeSrc": "21074:27:10",
																"nodeType": "YulFunctionCall",
																"src": "21074:27:10"
															},
															"nativeSrc": "21074:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "21074:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "20861:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "20905:3:10",
														"nodeType": "YulTypedName",
														"src": "20905:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "20910:3:10",
														"nodeType": "YulTypedName",
														"src": "20910:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20915:6:10",
														"nodeType": "YulTypedName",
														"src": "20915:6:10",
														"type": ""
													}
												],
												"src": "20861:246:10"
											},
											{
												"body": {
													"nativeSrc": "21221:278:10",
													"nodeType": "YulBlock",
													"src": "21221:278:10",
													"statements": [
														{
															"nativeSrc": "21231:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "21231:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21277:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21277:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21245:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "21245:31:10"
																},
																"nativeSrc": "21245:38:10",
																"nodeType": "YulFunctionCall",
																"src": "21245:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21235:6:10",
																	"nodeType": "YulTypedName",
																	"src": "21235:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21292:95:10",
															"nodeType": "YulAssignment",
															"src": "21292:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21375:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21375:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21380:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21380:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21299:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "21299:75:10"
																},
																"nativeSrc": "21299:88:10",
																"nodeType": "YulFunctionCall",
																"src": "21299:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21292:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21435:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "21435:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21442:4:10",
																				"nodeType": "YulLiteral",
																				"src": "21442:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21431:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21431:3:10"
																		},
																		"nativeSrc": "21431:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21431:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21449:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21449:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21454:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21454:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21396:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "21396:34:10"
																},
																"nativeSrc": "21396:65:10",
																"nodeType": "YulFunctionCall",
																"src": "21396:65:10"
															},
															"nativeSrc": "21396:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "21396:65:10"
														},
														{
															"nativeSrc": "21470:23:10",
															"nodeType": "YulAssignment",
															"src": "21470:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21481:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21481:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21486:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21486:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21477:3:10"
																},
																"nativeSrc": "21477:16:10",
																"nodeType": "YulFunctionCall",
																"src": "21477:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21470:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21470:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21113:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21202:5:10",
														"nodeType": "YulTypedName",
														"src": "21202:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21209:3:10",
														"nodeType": "YulTypedName",
														"src": "21209:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21217:3:10",
														"nodeType": "YulTypedName",
														"src": "21217:3:10",
														"type": ""
													}
												],
												"src": "21113:386:10"
											},
											{
												"body": {
													"nativeSrc": "21639:137:10",
													"nodeType": "YulBlock",
													"src": "21639:137:10",
													"statements": [
														{
															"nativeSrc": "21650:100:10",
															"nodeType": "YulAssignment",
															"src": "21650:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21737:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21737:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21746:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21746:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21657:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "21657:79:10"
																},
																"nativeSrc": "21657:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21657:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21650:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21650:3:10"
																}
															]
														},
														{
															"nativeSrc": "21760:10:10",
															"nodeType": "YulAssignment",
															"src": "21760:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "21767:3:10",
																"nodeType": "YulIdentifier",
																"src": "21767:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21760:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21760:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21505:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21618:3:10",
														"nodeType": "YulTypedName",
														"src": "21618:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21624:6:10",
														"nodeType": "YulTypedName",
														"src": "21624:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21635:3:10",
														"nodeType": "YulTypedName",
														"src": "21635:3:10",
														"type": ""
													}
												],
												"src": "21505:271:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$504_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$504_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$504_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$504__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$504_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admins are allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185(memPtr) {\n\n        mstore(add(memPtr, 0), \"no unstake data found\")\n\n    }\n\n    function abi_encode_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485(memPtr) {\n\n        mstore(add(memPtr, 0), \"period is not expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract does not have enough ba\")\n\n        mstore(add(memPtr, 32), \"lance to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d(memPtr) {\n\n        mstore(add(memPtr, 0), \"add more amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23(memPtr) {\n\n        mstore(add(memPtr, 0), \"add less amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid month\")\n\n    }\n\n    function abi_encode_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e(memPtr) {\n\n        mstore(add(memPtr, 0), \"already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80638456cb59116100ab578063e30081a01161006f578063e30081a0146102b8578063f1887684146102d4578063f2fde38b146102f2578063fc0c546a1461030e578063ff897dbd1461032c5761011f565b80638456cb59146101ff5780638da5cb5b1461020957806397378b1a146102275780639fa828ac14610257578063a8e62b97146102885761011f565b80635c975abb116100f25780635c975abb146101815780635d80ca321461019f5780636cee0131146101bd5780637b0472f0146101d95780638129fc1c146101f55761011f565b8063106b5da1146101235780632e17de781461013f5780632e1a7d4d1461015b5780633f4ba83a14610177575b5f80fd5b61013d600480360381019061013891906115d7565b610348565b005b610159600480360381019061015491906115d7565b6103e1565b005b610175600480360381019061017091906115d7565b6105b3565b005b61017f610771565b005b61018961080a565b604051610196919061161c565b60405180910390f35b6101a761081e565b6040516101b49190611644565b60405180910390f35b6101d760048036038101906101d2919061165d565b610824565b005b6101f360048036038101906101ee919061165d565b6108cd565b005b6101fd610add565b005b610207610c94565b005b610211610d2d565b60405161021e91906116da565b60405180910390f35b610241600480360381019061023c91906115d7565b610d52565b60405161024e9190611644565b60405180910390f35b610271600480360381019061026c919061171d565b610d67565b60405161027f92919061175b565b60405180910390f35b6102a2600480360381019061029d9190611782565b610d92565b6040516102af9190611644565b60405180910390f35b6102d260048036038101906102cd91906117d2565b610dda565b005b6102dc610eac565b6040516102e99190611644565b60405180910390f35b61030c600480360381019061030791906117d2565b610eb2565b005b610316610f84565b6040516103239190611858565b60405180910390f35b610346600480360381019061034191906115d7565b610fa9565b005b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906118cb565b60405180910390fd5b8060038190555050565b6103e9611042565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2090505f815f015490505f8111610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890611933565b60405180910390fd5b816001015442116104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be9061199b565b60405180910390fd5b5f60065f8581526020019081526020015f205490505f6104e8838387610d92565b905061054833610501838661109190919063ffffffff16565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a69092919063ffffffff16565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8681526020019081526020015f205f8082015f9055600182015f90555050505050506105b0611125565b50565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610642576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610639906118cb565b60405180910390fd5b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161069d91906116da565b602060405180830381865afa1580156106b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dc91906119cd565b905081811015610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890611a68565b60405180910390fd5b61076d338360075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a69092919063ffffffff16565b5050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f7906118cb565b60405180910390fd5b61080861112e565b565b5f805f9054906101000a900460ff16905090565b60035481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa906118cb565b60405180910390fd5b8060065f8481526020019081526020015f20819055505050565b6108d561118e565b6108dd611042565b600254821015610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091990611ad0565b60405180910390fd5b600354821115610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90611b38565b60405180910390fd5b5f60065f8381526020019081526020015f205490505f81116109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590611ba0565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f2090505f815f015414610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4990611c08565b60405180910390fd5b610aa033308660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111d8909392919063ffffffff16565b83815f0181905550610ac7603c84610ab89190611c53565b4261109190919063ffffffff16565b81600101819055505050610ad9611125565b5050565b5f610ae661125a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b2e5750825b90505f60018367ffffffffffffffff16148015610b6157505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b6f575080155b15610ba6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bf3576001855f0160086101000a81548160ff0219169083151502179055505b3360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c8d575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c849190611ce0565b60405180910390a15b5050505050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1a906118cb565b60405180910390fd5b610d2b611281565b565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006602052805f5260405f205f915090505481565b6005602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b5f80610dcd612ee0610dbf85610db1888a6112e290919063ffffffff16565b6112e290919063ffffffff16565b6112f790919063ffffffff16565b9050809150509392505050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e60906118cb565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f38906118cb565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f906118cb565b60405180910390fd5b8060028190555050565b600260015403611087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107e90611d43565b60405180910390fd5b6002600181905550565b5f818361109e9190611d61565b905092915050565b611120838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016110d9929190611d94565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061130c565b505050565b60018081905550565b6111366113a1565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111776113ea565b60405161118491906116da565b60405180910390a1565b61119661080a565b156111d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cd90611e05565b60405180910390fd5b565b611254848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161120d93929190611e23565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061130c565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61128961118e565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112cb6113ea565b6040516112d891906116da565b60405180910390a1565b5f81836112ef9190611c53565b905092915050565b5f81836113049190611e85565b905092915050565b5f611336828473ffffffffffffffffffffffffffffffffffffffff166113f190919063ffffffff16565b90505f81511415801561135a5750808060200190518101906113589190611edf565b155b1561139c57826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161139391906116da565b60405180910390fd5b505050565b6113a961080a565b6113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90611f54565b60405180910390fd5b565b5f33905090565b60606113fe83835f611406565b905092915050565b60608147101561144d57306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161144491906116da565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516114759190611fde565b5f6040518083038185875af1925050503d805f81146114af576040519150601f19603f3d011682016040523d82523d5f602084013e6114b4565b606091505b50915091506114c48683836114cf565b925050509392505050565b6060826114e4576114df8261155c565b611554565b5f825114801561150a57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561154c57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161154391906116da565b60405180910390fd5b819050611555565b5b9392505050565b5f8151111561156e5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b6115b6816115a4565b81146115c0575f80fd5b50565b5f813590506115d1816115ad565b92915050565b5f602082840312156115ec576115eb6115a0565b5b5f6115f9848285016115c3565b91505092915050565b5f8115159050919050565b61161681611602565b82525050565b5f60208201905061162f5f83018461160d565b92915050565b61163e816115a4565b82525050565b5f6020820190506116575f830184611635565b92915050565b5f8060408385031215611673576116726115a0565b5b5f611680858286016115c3565b9250506020611691858286016115c3565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116c48261169b565b9050919050565b6116d4816116ba565b82525050565b5f6020820190506116ed5f8301846116cb565b92915050565b6116fc816116ba565b8114611706575f80fd5b50565b5f81359050611717816116f3565b92915050565b5f8060408385031215611733576117326115a0565b5b5f61174085828601611709565b9250506020611751858286016115c3565b9150509250929050565b5f60408201905061176e5f830185611635565b61177b6020830184611635565b9392505050565b5f805f60608486031215611799576117986115a0565b5b5f6117a6868287016115c3565b93505060206117b7868287016115c3565b92505060406117c8868287016115c3565b9150509250925092565b5f602082840312156117e7576117e66115a0565b5b5f6117f484828501611709565b91505092915050565b5f819050919050565b5f61182061181b6118168461169b565b6117fd565b61169b565b9050919050565b5f61183182611806565b9050919050565b5f61184282611827565b9050919050565b61185281611838565b82525050565b5f60208201905061186b5f830184611849565b92915050565b5f82825260208201905092915050565b7f6f6e6c792061646d696e732061726520616c6c6f7765640000000000000000005f82015250565b5f6118b5601783611871565b91506118c082611881565b602082019050919050565b5f6020820190508181035f8301526118e2816118a9565b9050919050565b7f6e6f20756e7374616b65206461746120666f756e6400000000000000000000005f82015250565b5f61191d601583611871565b9150611928826118e9565b602082019050919050565b5f6020820190508181035f83015261194a81611911565b9050919050565b7f706572696f64206973206e6f74206578706972656400000000000000000000005f82015250565b5f611985601583611871565b915061199082611951565b602082019050919050565b5f6020820190508181035f8301526119b281611979565b9050919050565b5f815190506119c7816115ad565b92915050565b5f602082840312156119e2576119e16115a0565b5b5f6119ef848285016119b9565b91505092915050565b7f436f6e747261637420646f6573206e6f74206861766520656e6f7567682062615f8201527f6c616e636520746f207769746864726177000000000000000000000000000000602082015250565b5f611a52603183611871565b9150611a5d826119f8565b604082019050919050565b5f6020820190508181035f830152611a7f81611a46565b9050919050565b7f616464206d6f726520616d6f756e7400000000000000000000000000000000005f82015250565b5f611aba600f83611871565b9150611ac582611a86565b602082019050919050565b5f6020820190508181035f830152611ae781611aae565b9050919050565b7f616464206c65737320616d6f756e7400000000000000000000000000000000005f82015250565b5f611b22600f83611871565b9150611b2d82611aee565b602082019050919050565b5f6020820190508181035f830152611b4f81611b16565b9050919050565b7f696e76616c6964206d6f6e7468000000000000000000000000000000000000005f82015250565b5f611b8a600d83611871565b9150611b9582611b56565b602082019050919050565b5f6020820190508181035f830152611bb781611b7e565b9050919050565b7f616c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f611bf2600e83611871565b9150611bfd82611bbe565b602082019050919050565b5f6020820190508181035f830152611c1f81611be6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c5d826115a4565b9150611c68836115a4565b9250828202611c76816115a4565b91508282048414831517611c8d57611c8c611c26565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f611cca611cc5611cc084611c94565b6117fd565b611c9d565b9050919050565b611cda81611cb0565b82525050565b5f602082019050611cf35f830184611cd1565b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611d2d601f83611871565b9150611d3882611cf9565b602082019050919050565b5f6020820190508181035f830152611d5a81611d21565b9050919050565b5f611d6b826115a4565b9150611d76836115a4565b9250828201905080821115611d8e57611d8d611c26565b5b92915050565b5f604082019050611da75f8301856116cb565b611db46020830184611635565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611def601083611871565b9150611dfa82611dbb565b602082019050919050565b5f6020820190508181035f830152611e1c81611de3565b9050919050565b5f606082019050611e365f8301866116cb565b611e4360208301856116cb565b611e506040830184611635565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611e8f826115a4565b9150611e9a836115a4565b925082611eaa57611ea9611e58565b5b828204905092915050565b611ebe81611602565b8114611ec8575f80fd5b50565b5f81519050611ed981611eb5565b92915050565b5f60208284031215611ef457611ef36115a0565b5b5f611f0184828501611ecb565b91505092915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611f3e601483611871565b9150611f4982611f0a565b602082019050919050565b5f6020820190508181035f830152611f6b81611f32565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015611fa3578082015181840152602081019050611f88565b5f8484015250505050565b5f611fb882611f72565b611fc28185611f7c565b9350611fd2818560208601611f86565b80840191505092915050565b5f611fe98284611fae565b91508190509291505056fea2646970667358221220cdc7912c64497fe3cbd867e772631832d32e68a5e607084f7ef5e6c0b4a8179e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE30081A0 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE30081A0 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xFF897DBD EQ PUSH2 0x32C JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x97378B1A EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x9FA828AC EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xA8E62B97 EQ PUSH2 0x288 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x5D80CA32 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x6CEE0131 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1F5 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x106B5DA1 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x771 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x165D JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH2 0xADD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP3 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xDDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xFA9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x1042 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BE SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x4E8 DUP4 DUP4 DUP8 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 CALLER PUSH2 0x501 DUP4 DUP7 PUSH2 0x1091 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x5B0 PUSH2 0x1125 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D CALLER DUP4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F7 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x808 PUSH2 0x112E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x118E JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP3 GT ISZERO PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95E SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B5 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD EQ PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 CALLER ADDRESS DUP7 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11D8 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xAC7 PUSH1 0x3C DUP5 PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST TIMESTAMP PUSH2 0x1091 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xAD9 PUSH2 0x1125 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAE6 PUSH2 0x125A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB61 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC8D JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC84 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1A SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2B PUSH2 0x1281 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDCD PUSH2 0x2EE0 PUSH2 0xDBF DUP6 PUSH2 0xDB1 DUP9 DUP11 PUSH2 0x12E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF38 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107E SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1120 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x130C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1136 PUSH2 0x13A1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1177 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1196 PUSH2 0x80A JUMP JUMPDEST ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CD SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1254 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x120D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x130C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1289 PUSH2 0x118E JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x12CB PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x12EF SWAP2 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1336 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x135A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1358 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x139C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13A9 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DF SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13FE DUP4 DUP4 PUSH0 PUSH2 0x1406 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x144D JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1444 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1475 SWAP2 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14C4 DUP7 DUP4 DUP4 PUSH2 0x14CF JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x14E4 JUMPI PUSH2 0x14DF DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x1554 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x150A JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x154C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1543 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1555 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x156E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B6 DUP2 PUSH2 0x15A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x15C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D1 DUP2 PUSH2 0x15AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH2 0x15EB PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F9 DUP5 DUP3 DUP6 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1616 DUP2 PUSH2 0x1602 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162F PUSH0 DUP4 ADD DUP5 PUSH2 0x160D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163E DUP2 PUSH2 0x15A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1657 PUSH0 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1680 DUP6 DUP3 DUP7 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1691 DUP6 DUP3 DUP7 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C4 DUP3 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D4 DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16ED PUSH0 DUP4 ADD DUP5 PUSH2 0x16CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16FC DUP2 PUSH2 0x16BA JUMP JUMPDEST DUP2 EQ PUSH2 0x1706 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1717 DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1740 DUP6 DUP3 DUP7 ADD PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1751 DUP6 DUP3 DUP7 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x176E PUSH0 DUP4 ADD DUP6 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x177B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A6 DUP7 DUP3 DUP8 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17B7 DUP7 DUP3 DUP8 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17C8 DUP7 DUP3 DUP8 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17E6 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F4 DUP5 DUP3 DUP6 ADD PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1820 PUSH2 0x181B PUSH2 0x1816 DUP5 PUSH2 0x169B JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1831 DUP3 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1842 DUP3 PUSH2 0x1827 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x186B PUSH0 DUP4 ADD DUP5 PUSH2 0x1849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E732061726520616C6C6F776564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18B5 PUSH1 0x17 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C0 DUP3 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18E2 DUP2 PUSH2 0x18A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F20756E7374616B65206461746120666F756E640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x191D PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1928 DUP3 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x194A DUP2 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x706572696F64206973206E6F7420657870697265640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1985 PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1990 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B2 DUP2 PUSH2 0x1979 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19C7 DUP2 PUSH2 0x15AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19EF DUP5 DUP3 DUP6 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E636520746F207769746864726177000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A52 PUSH1 0x31 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5D DUP3 PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A7F DUP2 PUSH2 0x1A46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616464206D6F726520616D6F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABA PUSH1 0xF DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC5 DUP3 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE7 DUP2 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616464206C65737320616D6F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B22 PUSH1 0xF DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2D DUP3 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B4F DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C6964206D6F6E746800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8A PUSH1 0xD DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B95 DUP3 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB7 DUP2 PUSH2 0x1B7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF2 PUSH1 0xE DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFD DUP3 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C1F DUP2 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5D DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C68 DUP4 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C76 DUP2 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C8D JUMPI PUSH2 0x1C8C PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCA PUSH2 0x1CC5 PUSH2 0x1CC0 DUP5 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDA DUP2 PUSH2 0x1CB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH1 0x1F DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5A DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6B DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP4 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DA7 PUSH0 DUP4 ADD DUP6 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1DB4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DEF PUSH1 0x10 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFA DUP3 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1C DUP2 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E36 PUSH0 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1E43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1E50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1635 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E8F DUP3 PUSH2 0x15A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9A DUP4 PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EAA JUMPI PUSH2 0x1EA9 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1602 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x15A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F01 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3E PUSH1 0x14 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F6B DUP2 PUSH2 0x1F32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F88 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB8 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH2 0x1FC2 DUP2 DUP6 PUSH2 0x1F7C JUMP JUMPDEST SWAP4 POP PUSH2 0x1FD2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F86 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE9 DUP3 DUP5 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC7 SWAP2 0x2C PUSH5 0x497FE3CBD8 PUSH8 0xE772631832D32E68 0xA5 0xE6 SMOD ADDMOD 0x4F PUSH31 0xF5E6C0B4A8179E64736F6C6343000818003300000000000000000000000000 ",
							"sourceMap": "410:2861:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2537:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1711:494;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2642:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3116:55;;;:::i;:::-;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;570:29:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2909:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1106:600;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;685:68;;;:::i;:::-;;3060:51;;;:::i;:::-;;603:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;926:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;853:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2210:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1011:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;537:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3176:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;986:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2432:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2537;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2622:10:::1;2605:14;:27;;;;2537:100:::0;:::o;1711:494::-;2261:21:2;:19;:21::i;:::-;1770:17:9::1;1790;:29;1808:10;1790:29;;;;;;;;;;;;;;;:37;1820:6;1790:37;;;;;;;;;;;1770:57;;1831:14;1848:4;:11;;;1831:28;;1880:1;1871:6;:10;1863:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1937:4;:13;;;1919:15;:31;1911:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1980:20;2003:19;:27;2023:6;2003:27;;;;;;;;;;;;1980:50;;2034:14;2051:45;2067:6;2075:12;2089:6;2051:15;:45::i;:::-;2034:62;;2102:50;2121:10;2133:18;2144:6;2133;:10;;:18;;;;:::i;:::-;2102:5;;;;;;;;;;;:18;;;;:50;;;;;:::i;:::-;2163:17;:29;2181:10;2163:29;;;;;;;;;;;;;;;:37;2193:6;2163:37;;;;;;;;;;;;2156:44:::0;::::1;;;;;;;;;;;;;1766:439;;;;2303:20:2::0;:18;:20::i;:::-;1711:494:9;:::o;2642:262::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2700:23:::1;2726:5;;;;;;;;;;;:15;;;2750:4;2726:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2700:56;;2790:7;2771:15;:26;;2760:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2860:39;2879:10;2891:7;2860:5;;;;;;;;;;;:18;;;;:39;;;;;:::i;:::-;2696:208;2642:262:::0;:::o;3116:55::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3156:10:::1;:8;:10::i;:::-;3116:55::o:0;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;570:29:9:-;;;;:::o;2909:146::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3037:13:::1;3007:19;:27;3027:6;3007:27;;;;;;;;;;;:43;;;;2909:146:::0;;:::o;1106:600::-;1239:19:1;:17;:19::i;:::-;2261:21:2::1;:19;:21::i;:::-;1221:14:9::2;;1210:7;:25;;1202:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1278:14;;1267:7;:25;;1259:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1316:20;1339:19;:27;1359:6;1339:27;;;;;;;;;;;;1316:50;;1393:1;1378:12;:16;1370:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1418:17;1438;:29;1456:10;1438:29;;;;;;;;;;;;;;;:37;1468:6;1438:37;;;;;;;;;;;1418:57;;1502:1;1487:4;:11;;;:16;1479:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1528:58;1551:10;1571:4;1578:7;1528:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;1604:7;1590:4;:11;;:21;;;;1631:32;1660:2;1651:6;:11;;;;:::i;:::-;1631:15;:19;;:32;;;;:::i;:::-;1615:4;:13;;:48;;;;1198:508;;2303:20:2::1;:18;:20::i;:::-;1106:600:9::0;;:::o;685:68::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;738:10:9::1;730:5;;:18;;;;;;;;;;;;;;;;;;5070:14:0::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;685:68:9:o;3060:51::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3098:8:::1;:6;:8::i;:::-;3060:51::o:0;603:20::-;;;;;;;;;;;;;:::o;926:54::-;;;;;;;;;;;;;;;;;:::o;853:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2210:217::-;2322:7;2335:14;2352:53;2395:9;2352:38;2383:6;2352:26;2364:13;2352:7;:11;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;:42;;:53;;;;:::i;:::-;2335:70;;2416:6;2409:13;;;2210:217;;;;;:::o;1011:90::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1087:8:::1;1072:5;;:24;;;;;;;;;;;;;;;;;;1011:90:::0;:::o;537:29::-;;;;:::o;3176:88::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3251:8:::1;3243:5;;:16;;;;;;;;;;;;;;;;;;3176:88:::0;:::o;986:19::-;;;;;;;;;;;;;:::o;2432:100::-;805:5;;;;;;;;;;;791:19;;:10;:19;;;783:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2517:10:::1;2500:14;:27;;;;2432:100:::0;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2755:96:8:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1303:160:5:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;1702:188:5:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;8737:170:0:-;8795:30;8870:21;8860:31;;8737:170;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;3465:96:8:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;4059:629:5:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;2705:151:6:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:10;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:118::-;1539:24;1557:5;1539:24;:::i;:::-;1534:3;1527:37;1452:118;;:::o;1576:222::-;1669:4;1707:2;1696:9;1692:18;1684:26;;1720:71;1788:1;1777:9;1773:17;1764:6;1720:71;:::i;:::-;1576:222;;;;:::o;1804:474::-;1872:6;1880;1929:2;1917:9;1908:7;1904:23;1900:32;1897:119;;;1935:79;;:::i;:::-;1897:119;2055:1;2080:53;2125:7;2116:6;2105:9;2101:22;2080:53;:::i;:::-;2070:63;;2026:117;2182:2;2208:53;2253:7;2244:6;2233:9;2229:22;2208:53;:::i;:::-;2198:63;;2153:118;1804:474;;;;;:::o;2284:126::-;2321:7;2361:42;2354:5;2350:54;2339:65;;2284:126;;;:::o;2416:96::-;2453:7;2482:24;2500:5;2482:24;:::i;:::-;2471:35;;2416:96;;;:::o;2518:118::-;2605:24;2623:5;2605:24;:::i;:::-;2600:3;2593:37;2518:118;;:::o;2642:222::-;2735:4;2773:2;2762:9;2758:18;2750:26;;2786:71;2854:1;2843:9;2839:17;2830:6;2786:71;:::i;:::-;2642:222;;;;:::o;2870:122::-;2943:24;2961:5;2943:24;:::i;:::-;2936:5;2933:35;2923:63;;2982:1;2979;2972:12;2923:63;2870:122;:::o;2998:139::-;3044:5;3082:6;3069:20;3060:29;;3098:33;3125:5;3098:33;:::i;:::-;2998:139;;;;:::o;3143:474::-;3211:6;3219;3268:2;3256:9;3247:7;3243:23;3239:32;3236:119;;;3274:79;;:::i;:::-;3236:119;3394:1;3419:53;3464:7;3455:6;3444:9;3440:22;3419:53;:::i;:::-;3409:63;;3365:117;3521:2;3547:53;3592:7;3583:6;3572:9;3568:22;3547:53;:::i;:::-;3537:63;;3492:118;3143:474;;;;;:::o;3623:332::-;3744:4;3782:2;3771:9;3767:18;3759:26;;3795:71;3863:1;3852:9;3848:17;3839:6;3795:71;:::i;:::-;3876:72;3944:2;3933:9;3929:18;3920:6;3876:72;:::i;:::-;3623:332;;;;;:::o;3961:619::-;4038:6;4046;4054;4103:2;4091:9;4082:7;4078:23;4074:32;4071:119;;;4109:79;;:::i;:::-;4071:119;4229:1;4254:53;4299:7;4290:6;4279:9;4275:22;4254:53;:::i;:::-;4244:63;;4200:117;4356:2;4382:53;4427:7;4418:6;4407:9;4403:22;4382:53;:::i;:::-;4372:63;;4327:118;4484:2;4510:53;4555:7;4546:6;4535:9;4531:22;4510:53;:::i;:::-;4500:63;;4455:118;3961:619;;;;;:::o;4586:329::-;4645:6;4694:2;4682:9;4673:7;4669:23;4665:32;4662:119;;;4700:79;;:::i;:::-;4662:119;4820:1;4845:53;4890:7;4881:6;4870:9;4866:22;4845:53;:::i;:::-;4835:63;;4791:117;4586:329;;;;:::o;4921:60::-;4949:3;4970:5;4963:12;;4921:60;;;:::o;4987:142::-;5037:9;5070:53;5088:34;5097:24;5115:5;5097:24;:::i;:::-;5088:34;:::i;:::-;5070:53;:::i;:::-;5057:66;;4987:142;;;:::o;5135:126::-;5185:9;5218:37;5249:5;5218:37;:::i;:::-;5205:50;;5135:126;;;:::o;5267:140::-;5331:9;5364:37;5395:5;5364:37;:::i;:::-;5351:50;;5267:140;;;:::o;5413:159::-;5514:51;5559:5;5514:51;:::i;:::-;5509:3;5502:64;5413:159;;:::o;5578:250::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:85;5818:1;5807:9;5803:17;5794:6;5736:85;:::i;:::-;5578:250;;;;:::o;5834:169::-;5918:11;5952:6;5947:3;5940:19;5992:4;5987:3;5983:14;5968:29;;5834:169;;;;:::o;6009:173::-;6149:25;6145:1;6137:6;6133:14;6126:49;6009:173;:::o;6188:366::-;6330:3;6351:67;6415:2;6410:3;6351:67;:::i;:::-;6344:74;;6427:93;6516:3;6427:93;:::i;:::-;6545:2;6540:3;6536:12;6529:19;;6188:366;;;:::o;6560:419::-;6726:4;6764:2;6753:9;6749:18;6741:26;;6813:9;6807:4;6803:20;6799:1;6788:9;6784:17;6777:47;6841:131;6967:4;6841:131;:::i;:::-;6833:139;;6560:419;;;:::o;6985:171::-;7125:23;7121:1;7113:6;7109:14;7102:47;6985:171;:::o;7162:366::-;7304:3;7325:67;7389:2;7384:3;7325:67;:::i;:::-;7318:74;;7401:93;7490:3;7401:93;:::i;:::-;7519:2;7514:3;7510:12;7503:19;;7162:366;;;:::o;7534:419::-;7700:4;7738:2;7727:9;7723:18;7715:26;;7787:9;7781:4;7777:20;7773:1;7762:9;7758:17;7751:47;7815:131;7941:4;7815:131;:::i;:::-;7807:139;;7534:419;;;:::o;7959:171::-;8099:23;8095:1;8087:6;8083:14;8076:47;7959:171;:::o;8136:366::-;8278:3;8299:67;8363:2;8358:3;8299:67;:::i;:::-;8292:74;;8375:93;8464:3;8375:93;:::i;:::-;8493:2;8488:3;8484:12;8477:19;;8136:366;;;:::o;8508:419::-;8674:4;8712:2;8701:9;8697:18;8689:26;;8761:9;8755:4;8751:20;8747:1;8736:9;8732:17;8725:47;8789:131;8915:4;8789:131;:::i;:::-;8781:139;;8508:419;;;:::o;8933:143::-;8990:5;9021:6;9015:13;9006:22;;9037:33;9064:5;9037:33;:::i;:::-;8933:143;;;;:::o;9082:351::-;9152:6;9201:2;9189:9;9180:7;9176:23;9172:32;9169:119;;;9207:79;;:::i;:::-;9169:119;9327:1;9352:64;9408:7;9399:6;9388:9;9384:22;9352:64;:::i;:::-;9342:74;;9298:128;9082:351;;;;:::o;9439:236::-;9579:34;9575:1;9567:6;9563:14;9556:58;9648:19;9643:2;9635:6;9631:15;9624:44;9439:236;:::o;9681:366::-;9823:3;9844:67;9908:2;9903:3;9844:67;:::i;:::-;9837:74;;9920:93;10009:3;9920:93;:::i;:::-;10038:2;10033:3;10029:12;10022:19;;9681:366;;;:::o;10053:419::-;10219:4;10257:2;10246:9;10242:18;10234:26;;10306:9;10300:4;10296:20;10292:1;10281:9;10277:17;10270:47;10334:131;10460:4;10334:131;:::i;:::-;10326:139;;10053:419;;;:::o;10478:165::-;10618:17;10614:1;10606:6;10602:14;10595:41;10478:165;:::o;10649:366::-;10791:3;10812:67;10876:2;10871:3;10812:67;:::i;:::-;10805:74;;10888:93;10977:3;10888:93;:::i;:::-;11006:2;11001:3;10997:12;10990:19;;10649:366;;;:::o;11021:419::-;11187:4;11225:2;11214:9;11210:18;11202:26;;11274:9;11268:4;11264:20;11260:1;11249:9;11245:17;11238:47;11302:131;11428:4;11302:131;:::i;:::-;11294:139;;11021:419;;;:::o;11446:165::-;11586:17;11582:1;11574:6;11570:14;11563:41;11446:165;:::o;11617:366::-;11759:3;11780:67;11844:2;11839:3;11780:67;:::i;:::-;11773:74;;11856:93;11945:3;11856:93;:::i;:::-;11974:2;11969:3;11965:12;11958:19;;11617:366;;;:::o;11989:419::-;12155:4;12193:2;12182:9;12178:18;12170:26;;12242:9;12236:4;12232:20;12228:1;12217:9;12213:17;12206:47;12270:131;12396:4;12270:131;:::i;:::-;12262:139;;11989:419;;;:::o;12414:163::-;12554:15;12550:1;12542:6;12538:14;12531:39;12414:163;:::o;12583:366::-;12725:3;12746:67;12810:2;12805:3;12746:67;:::i;:::-;12739:74;;12822:93;12911:3;12822:93;:::i;:::-;12940:2;12935:3;12931:12;12924:19;;12583:366;;;:::o;12955:419::-;13121:4;13159:2;13148:9;13144:18;13136:26;;13208:9;13202:4;13198:20;13194:1;13183:9;13179:17;13172:47;13236:131;13362:4;13236:131;:::i;:::-;13228:139;;12955:419;;;:::o;13380:164::-;13520:16;13516:1;13508:6;13504:14;13497:40;13380:164;:::o;13550:366::-;13692:3;13713:67;13777:2;13772:3;13713:67;:::i;:::-;13706:74;;13789:93;13878:3;13789:93;:::i;:::-;13907:2;13902:3;13898:12;13891:19;;13550:366;;;:::o;13922:419::-;14088:4;14126:2;14115:9;14111:18;14103:26;;14175:9;14169:4;14165:20;14161:1;14150:9;14146:17;14139:47;14203:131;14329:4;14203:131;:::i;:::-;14195:139;;13922:419;;;:::o;14347:180::-;14395:77;14392:1;14385:88;14492:4;14489:1;14482:15;14516:4;14513:1;14506:15;14533:410;14573:7;14596:20;14614:1;14596:20;:::i;:::-;14591:25;;14630:20;14648:1;14630:20;:::i;:::-;14625:25;;14685:1;14682;14678:9;14707:30;14725:11;14707:30;:::i;:::-;14696:41;;14886:1;14877:7;14873:15;14870:1;14867:22;14847:1;14840:9;14820:83;14797:139;;14916:18;;:::i;:::-;14797:139;14581:362;14533:410;;;;:::o;14949:85::-;14994:7;15023:5;15012:16;;14949:85;;;:::o;15040:101::-;15076:7;15116:18;15109:5;15105:30;15094:41;;15040:101;;;:::o;15147:156::-;15204:9;15237:60;15254:42;15263:32;15289:5;15263:32;:::i;:::-;15254:42;:::i;:::-;15237:60;:::i;:::-;15224:73;;15147:156;;;:::o;15309:145::-;15403:44;15441:5;15403:44;:::i;:::-;15398:3;15391:57;15309:145;;:::o;15460:236::-;15560:4;15598:2;15587:9;15583:18;15575:26;;15611:78;15686:1;15675:9;15671:17;15662:6;15611:78;:::i;:::-;15460:236;;;;:::o;15702:181::-;15842:33;15838:1;15830:6;15826:14;15819:57;15702:181;:::o;15889:366::-;16031:3;16052:67;16116:2;16111:3;16052:67;:::i;:::-;16045:74;;16128:93;16217:3;16128:93;:::i;:::-;16246:2;16241:3;16237:12;16230:19;;15889:366;;;:::o;16261:419::-;16427:4;16465:2;16454:9;16450:18;16442:26;;16514:9;16508:4;16504:20;16500:1;16489:9;16485:17;16478:47;16542:131;16668:4;16542:131;:::i;:::-;16534:139;;16261:419;;;:::o;16686:191::-;16726:3;16745:20;16763:1;16745:20;:::i;:::-;16740:25;;16779:20;16797:1;16779:20;:::i;:::-;16774:25;;16822:1;16819;16815:9;16808:16;;16843:3;16840:1;16837:10;16834:36;;;16850:18;;:::i;:::-;16834:36;16686:191;;;;:::o;16883:332::-;17004:4;17042:2;17031:9;17027:18;17019:26;;17055:71;17123:1;17112:9;17108:17;17099:6;17055:71;:::i;:::-;17136:72;17204:2;17193:9;17189:18;17180:6;17136:72;:::i;:::-;16883:332;;;;;:::o;17221:166::-;17361:18;17357:1;17349:6;17345:14;17338:42;17221:166;:::o;17393:366::-;17535:3;17556:67;17620:2;17615:3;17556:67;:::i;:::-;17549:74;;17632:93;17721:3;17632:93;:::i;:::-;17750:2;17745:3;17741:12;17734:19;;17393:366;;;:::o;17765:419::-;17931:4;17969:2;17958:9;17954:18;17946:26;;18018:9;18012:4;18008:20;18004:1;17993:9;17989:17;17982:47;18046:131;18172:4;18046:131;:::i;:::-;18038:139;;17765:419;;;:::o;18190:442::-;18339:4;18377:2;18366:9;18362:18;18354:26;;18390:71;18458:1;18447:9;18443:17;18434:6;18390:71;:::i;:::-;18471:72;18539:2;18528:9;18524:18;18515:6;18471:72;:::i;:::-;18553;18621:2;18610:9;18606:18;18597:6;18553:72;:::i;:::-;18190:442;;;;;;:::o;18638:180::-;18686:77;18683:1;18676:88;18783:4;18780:1;18773:15;18807:4;18804:1;18797:15;18824:185;18864:1;18881:20;18899:1;18881:20;:::i;:::-;18876:25;;18915:20;18933:1;18915:20;:::i;:::-;18910:25;;18954:1;18944:35;;18959:18;;:::i;:::-;18944:35;19001:1;18998;18994:9;18989:14;;18824:185;;;;:::o;19015:116::-;19085:21;19100:5;19085:21;:::i;:::-;19078:5;19075:32;19065:60;;19121:1;19118;19111:12;19065:60;19015:116;:::o;19137:137::-;19191:5;19222:6;19216:13;19207:22;;19238:30;19262:5;19238:30;:::i;:::-;19137:137;;;;:::o;19280:345::-;19347:6;19396:2;19384:9;19375:7;19371:23;19367:32;19364:119;;;19402:79;;:::i;:::-;19364:119;19522:1;19547:61;19600:7;19591:6;19580:9;19576:22;19547:61;:::i;:::-;19537:71;;19493:125;19280:345;;;;:::o;19631:170::-;19771:22;19767:1;19759:6;19755:14;19748:46;19631:170;:::o;19807:366::-;19949:3;19970:67;20034:2;20029:3;19970:67;:::i;:::-;19963:74;;20046:93;20135:3;20046:93;:::i;:::-;20164:2;20159:3;20155:12;20148:19;;19807:366;;;:::o;20179:419::-;20345:4;20383:2;20372:9;20368:18;20360:26;;20432:9;20426:4;20422:20;20418:1;20407:9;20403:17;20396:47;20460:131;20586:4;20460:131;:::i;:::-;20452:139;;20179:419;;;:::o;20604:98::-;20655:6;20689:5;20683:12;20673:22;;20604:98;;;:::o;20708:147::-;20809:11;20846:3;20831:18;;20708:147;;;;:::o;20861:246::-;20942:1;20952:113;20966:6;20963:1;20960:13;20952:113;;;21051:1;21046:3;21042:11;21036:18;21032:1;21027:3;21023:11;21016:39;20988:2;20985:1;20981:10;20976:15;;20952:113;;;21099:1;21090:6;21085:3;21081:16;21074:27;20923:184;20861:246;;;:::o;21113:386::-;21217:3;21245:38;21277:5;21245:38;:::i;:::-;21299:88;21380:6;21375:3;21299:88;:::i;:::-;21292:95;;21396:65;21454:6;21449:3;21442:4;21435:5;21431:16;21396:65;:::i;:::-;21486:6;21481:3;21477:16;21470:23;;21221:278;21113:386;;;;:::o;21505:271::-;21635:3;21657:93;21746:3;21737:6;21657:93;:::i;:::-;21650:100;;21767:3;21760:10;;21505:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1646800",
								"executionCost": "48106",
								"totalCost": "1694906"
							},
							"external": {
								"calculateReward(uint256,uint256,uint256)": "infinite",
								"initialize()": "105956",
								"maxStakeAmount()": "2470",
								"minStakeAmount()": "2469",
								"monthToInterestRate(uint256)": "infinite",
								"owner()": "2553",
								"pause()": "30107",
								"paused()": "2496",
								"setAddress(address)": "26906",
								"setMonthInterestRate(uint256,uint256)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "26950",
								"unpause()": "30170",
								"unstake(uint256)": "infinite",
								"updateMaxAmount(uint256)": "24708",
								"updateMinAmount(uint256)": "24794",
								"userMonthToAmount(address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 3271,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdc7912c64497fe3cbd867e772631832d32e68a5e607084f7ef5e6c0b4a8179e64736f6c63430008180033",
									".code": [
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "E30081A0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "E30081A0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "F1887684"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FF897DBD"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "97378B1A"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "9FA828AC"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "A8E62B97"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "5D80CA32"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "6CEE0131"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "7B0472F0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "8129FC1C"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "106B5DA1"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "2E17DE78"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 410,
											"end": 3271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2537,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2537,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1711,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1711,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2642,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2642,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3116,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 570,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 570,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2909,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2909,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1106,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1106,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 685,
											"end": 753,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 685,
											"end": 753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 685,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 685,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 685,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 685,
											"end": 753,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 685,
											"end": 753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 685,
											"end": 753,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3060,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 603,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 603,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 926,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 926,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 926,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 853,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 853,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 853,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2210,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2210,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2210,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1011,
											"end": 1101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1011,
											"end": 1101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 537,
											"end": 566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 537,
											"end": 566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3176,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3176,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 986,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 986,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2432,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2605,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1818,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1819,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1848,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1848,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1881,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1863,
											"end": 1907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1863,
											"end": 1907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1937,
											"end": 1950,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1950,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1934,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1950,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1911,
											"end": 1976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1911,
											"end": 1976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2029,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2030,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2030,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2067,
											"end": 2073,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2087,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2095,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2051,
											"end": 2096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2051,
											"end": 2096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2121,
											"end": 2131,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2144,
											"end": 2150,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2139,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2133,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2133,
											"end": 2151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2102,
											"end": 2120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2102,
											"end": 2152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2191,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2192,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 2205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 2205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 2750,
											"end": 2754,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2726,
											"end": 2756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2756,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2726,
											"end": 2756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2797,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2797,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2760,
											"end": 2856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2760,
											"end": 2856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2879,
											"end": 2889,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2860,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2860,
											"end": 2899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3116,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3156,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3156,
											"end": 3166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 570,
											"end": 599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3033,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3034,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 3055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1221,
											"end": 1235,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1217,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1235,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1235,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1202,
											"end": 1255,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1202,
											"end": 1255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1278,
											"end": 1292,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1278,
											"end": 1292,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1274,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1292,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1292,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1259,
											"end": 1312,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1259,
											"end": 1312,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1336,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1365,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1366,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1366,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1366,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1390,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1394,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1370,
											"end": 1412,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1370,
											"end": 1412,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1466,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1467,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1474,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1475,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1475,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1475,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1503,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1491,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1498,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1498,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1503,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1479,
											"end": 1522,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1479,
											"end": 1522,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1551,
											"end": 1561,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1575,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1585,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1550,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1550,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1550,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1528,
											"end": 1550,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1528,
											"end": 1586,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1604,
											"end": 1611,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1594,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1601,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1611,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1611,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1611,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1611,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3C"
										},
										{
											"begin": 1651,
											"end": 1657,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1651,
											"end": 1662,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1651,
											"end": 1662,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1651,
											"end": 1662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1646,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1631,
											"end": 1650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1663,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1631,
											"end": 1663,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1619,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1198,
											"end": 1706,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1198,
											"end": 1706,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 685,
											"end": 753,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 685,
											"end": 753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 738,
											"end": 748,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 730,
											"end": 735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 730,
											"end": 748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3060,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3098,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3098,
											"end": 3106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3098,
											"end": 3106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 623,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 603,
											"end": 623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 853,
											"end": 922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 853,
											"end": 922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "2EE0"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2364,
											"end": 2377,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2352,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2352,
											"end": 2382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2352,
											"end": 2394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1072,
											"end": 1077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 566,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 537,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3243,
											"end": 3248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 801,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 791,
											"end": 810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 783,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 783,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 783,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2527,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2500,
											"end": 2527,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2527,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2527,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1570,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1452,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 1539,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1563,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1539,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1534,
											"end": 1537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1798,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1576,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1720,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1720,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1576,
											"end": 1798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1915,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1932,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 2016,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1897,
											"end": 2016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1935,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1935,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1935,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1935,
											"end": 2014,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1935,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1897,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2125,
											"end": 2132,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2080,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2133,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2080,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2133,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2208,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2208,
											"end": 2261,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2208,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2198,
											"end": 2261,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2198,
											"end": 2261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 2278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2410,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2284,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2404,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2512,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2416,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2482,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2506,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 2482,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2636,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2518,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 2623,
											"end": 2628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2605,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2593,
											"end": 2630,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2864,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2642,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2786,
											"end": 2857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2857,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2786,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2864,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2864,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2992,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2870,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2961,
											"end": 2966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2943,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2968,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3098,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3270,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3247,
											"end": 3254,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3274,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3419,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3472,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 3547,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3795,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3866,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3795,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3944,
											"end": 3946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3933,
											"end": 3942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3876,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3948,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3876,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4089,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4101,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4106,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4190,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 4071,
											"end": 4190,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4109,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 4109,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4190,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 4071,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 4299,
											"end": 4306,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4290,
											"end": 4296,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4288,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4254,
											"end": 4307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4307,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 4254,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4382,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4435,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 4382,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 4555,
											"end": 4562,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4535,
											"end": 4544,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4510,
											"end": 4563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4563,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 4510,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4915,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4586,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4682,
											"end": 4691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4680,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4669,
											"end": 4692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4665,
											"end": 4697,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4700,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4700,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4845,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4915,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4981,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4921,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4975,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4981,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5129,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4987,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 5097,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 5115,
											"end": 5120,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5097,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5121,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 5097,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5088,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 5088,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5070,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5261,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5135,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5218,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5255,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 5218,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5261,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5407,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5267,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 5395,
											"end": 5400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5364,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5401,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 5364,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5572,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5413,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5559,
											"end": 5564,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5514,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5565,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5514,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5828,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5578,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 5726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5803,
											"end": 5820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5800,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5736,
											"end": 5821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5821,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5736,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5828,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6003,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5834,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 5996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 5997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 6003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6182,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6009,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6149,
											"end": 6174,
											"name": "PUSH",
											"source": 10,
											"value": "6F6E6C792061646D696E732061726520616C6C6F776564000000000000000000"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6554,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6188,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 6415,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 6410,
											"end": 6413,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6351,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6418,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 6351,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6427,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 6516,
											"end": 6519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6427,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6427,
											"end": 6520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6427,
											"end": 6520,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 6427,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6545,
											"end": 6547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6554,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6979,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 6560,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6813,
											"end": 6822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6823,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6784,
											"end": 6801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 6967,
											"end": 6971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6841,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 6841,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6979,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6979,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6985,
											"end": 7156,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6985,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7148,
											"name": "PUSH",
											"source": 10,
											"value": "6E6F20756E7374616B65206461746120666F756E640000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7113,
											"end": 7119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7109,
											"end": 7123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6985,
											"end": 7156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6985,
											"end": 7156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7304,
											"end": 7307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7325,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7490,
											"end": 7493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 7401,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7514,
											"end": 7517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7700,
											"end": 7704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7797,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7941,
											"end": 7945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7815,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8130,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7959,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8099,
											"end": 8122,
											"name": "PUSH",
											"source": 10,
											"value": "706572696F64206973206E6F7420657870697265640000000000000000000000"
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8083,
											"end": 8097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8136,
											"end": 8502,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8136,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8363,
											"end": 8365,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8299,
											"end": 8366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8366,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8299,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8292,
											"end": 8366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8292,
											"end": 8366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8375,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8468,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8375,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8493,
											"end": 8495,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8136,
											"end": 8502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8136,
											"end": 8502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8136,
											"end": 8502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8136,
											"end": 8502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8927,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8508,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8701,
											"end": 8710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8689,
											"end": 8715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8689,
											"end": 8715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8755,
											"end": 8759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8771,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8732,
											"end": 8749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8772,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8915,
											"end": 8919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8789,
											"end": 8920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8920,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8789,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 9076,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 8933,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 8995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9021,
											"end": 9027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9028,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9064,
											"end": 9069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9037,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9070,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9037,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 9076,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 9076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 9076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 9076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 9076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9433,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 9082,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9152,
											"end": 9158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9203,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9189,
											"end": 9198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9180,
											"end": 9187,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9176,
											"end": 9199,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9204,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9288,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9169,
											"end": 9288,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9207,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9207,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9207,
											"end": 9286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9207,
											"end": 9286,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9207,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9288,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9169,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9352,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9408,
											"end": 9415,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9397,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9352,
											"end": 9416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9416,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9352,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9675,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9439,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9613,
											"name": "PUSH",
											"source": 10,
											"value": "436F6E747261637420646F6573206E6F74206861766520656E6F756768206261"
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9614,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9667,
											"name": "PUSH",
											"source": 10,
											"value": "6C616E636520746F207769746864726177000000000000000000000000000000"
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9631,
											"end": 9646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 9668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 9903,
											"end": 9906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9844,
											"end": 9911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9837,
											"end": 9911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9837,
											"end": 9911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9920,
											"end": 10013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10040,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10033,
											"end": 10036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 10047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10316,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10270,
											"end": 10317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10460,
											"end": 10464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 10334,
											"end": 10465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10326,
											"end": 10465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10326,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10643,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10478,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10618,
											"end": 10635,
											"name": "PUSH",
											"source": 10,
											"value": "616464206D6F726520616D6F756E740000000000000000000000000000000000"
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 11015,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10649,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10812,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10876,
											"end": 10878,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 10871,
											"end": 10874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 10812,
											"end": 10879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10879,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10812,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10805,
											"end": 10879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10805,
											"end": 10879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10888,
											"end": 10981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10981,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10888,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11006,
											"end": 11008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11001,
											"end": 11004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10997,
											"end": 11009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 11015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 11015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 11015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 11015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11440,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 11021,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11187,
											"end": 11191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11214,
											"end": 11223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11274,
											"end": 11283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11264,
											"end": 11284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11260,
											"end": 11261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11249,
											"end": 11258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11245,
											"end": 11262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11238,
											"end": 11285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 11428,
											"end": 11432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 11302,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11433,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 11302,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11294,
											"end": 11433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11294,
											"end": 11433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11611,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 11446,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11603,
											"name": "PUSH",
											"source": 10,
											"value": "616464206C65737320616D6F756E740000000000000000000000000000000000"
										},
										{
											"begin": 11582,
											"end": 11583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11604,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11617,
											"end": 11983,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 11617,
											"end": 11983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11759,
											"end": 11762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11844,
											"end": 11846,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 11839,
											"end": 11842,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 11780,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11847,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11780,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11945,
											"end": 11948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 11856,
											"end": 11949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11949,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11856,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11969,
											"end": 11972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 11977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 11977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11617,
											"end": 11983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11617,
											"end": 11983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11617,
											"end": 11983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11617,
											"end": 11983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11989,
											"end": 12408,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 11989,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12236,
											"end": 12240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12232,
											"end": 12252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12228,
											"end": 12229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12217,
											"end": 12226,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12206,
											"end": 12253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 12396,
											"end": 12400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 12270,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12401,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 12270,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11989,
											"end": 12408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11989,
											"end": 12408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11989,
											"end": 12408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11989,
											"end": 12408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12577,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 12414,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12554,
											"end": 12569,
											"name": "PUSH",
											"source": 10,
											"value": "696E76616C6964206D6F6E746800000000000000000000000000000000000000"
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12542,
											"end": 12548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12725,
											"end": 12728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 12810,
											"end": 12812,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 12805,
											"end": 12808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12746,
											"end": 12813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12911,
											"end": 12914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 12822,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 12942,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12931,
											"end": 12943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13125,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13148,
											"end": 13157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13136,
											"end": 13162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13136,
											"end": 13162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13183,
											"end": 13192,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 13362,
											"end": 13366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 13236,
											"end": 13367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13228,
											"end": 13367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13228,
											"end": 13367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 13374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13380,
											"end": 13544,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13380,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13520,
											"end": 13536,
											"name": "PUSH",
											"source": 10,
											"value": "616C7265616479207374616B6564000000000000000000000000000000000000"
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13508,
											"end": 13514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13380,
											"end": 13544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13380,
											"end": 13544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13916,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13550,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13692,
											"end": 13695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13777,
											"end": 13779,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 13772,
											"end": 13775,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 13713,
											"end": 13780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13780,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13713,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13706,
											"end": 13780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13706,
											"end": 13780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 13878,
											"end": 13881,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13789,
											"end": 13882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 13789,
											"end": 13882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13907,
											"end": 13909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13902,
											"end": 13905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 13910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 14341,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 13922,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14088,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14126,
											"end": 14128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14115,
											"end": 14124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14103,
											"end": 14129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14103,
											"end": 14129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14175,
											"end": 14184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14165,
											"end": 14185,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14150,
											"end": 14159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14146,
											"end": 14163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14139,
											"end": 14186,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14203,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 14329,
											"end": 14333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14203,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 14203,
											"end": 14334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14203,
											"end": 14334,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 14203,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14195,
											"end": 14334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14195,
											"end": 14334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 14341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 14341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 14341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 14341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14347,
											"end": 14527,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 14347,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14395,
											"end": 14472,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14392,
											"end": 14393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14492,
											"end": 14496,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14489,
											"end": 14490,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14520,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14513,
											"end": 14514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14506,
											"end": 14521,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14943,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 14533,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14573,
											"end": 14580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14596,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14614,
											"end": 14615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 14596,
											"end": 14616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14616,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14596,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14591,
											"end": 14616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14591,
											"end": 14616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14630,
											"end": 14650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14648,
											"end": 14649,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14630,
											"end": 14650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 14630,
											"end": 14650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14630,
											"end": 14650,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14630,
											"end": 14650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14650,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14685,
											"end": 14686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14682,
											"end": 14683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 14687,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14725,
											"end": 14736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 14707,
											"end": 14737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14737,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14707,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14696,
											"end": 14737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14696,
											"end": 14737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14877,
											"end": 14884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14888,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14870,
											"end": 14871,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14867,
											"end": 14889,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14848,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14840,
											"end": 14849,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14903,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14797,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14797,
											"end": 14936,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 14916,
											"end": 14934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14797,
											"end": 14936,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14797,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14581,
											"end": 14943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14943,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14943,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14949,
											"end": 15034,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 14949,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14994,
											"end": 15001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15023,
											"end": 15028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15012,
											"end": 15028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15012,
											"end": 15028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14949,
											"end": 15034,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14949,
											"end": 15034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14949,
											"end": 15034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14949,
											"end": 15034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15141,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 15040,
											"end": 15141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15116,
											"end": 15134,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15109,
											"end": 15114,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15105,
											"end": 15135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15303,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 15147,
											"end": 15303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15237,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 15254,
											"end": 15296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15289,
											"end": 15294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 15263,
											"end": 15295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15254,
											"end": 15296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 15254,
											"end": 15296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15254,
											"end": 15296,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15254,
											"end": 15296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15237,
											"end": 15297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 15237,
											"end": 15297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15237,
											"end": 15297,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 15237,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15454,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 15309,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15403,
											"end": 15447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15441,
											"end": 15446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15403,
											"end": 15447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 15403,
											"end": 15447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15403,
											"end": 15447,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15403,
											"end": 15447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15448,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15696,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 15460,
											"end": 15696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15560,
											"end": 15564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15598,
											"end": 15600,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15587,
											"end": 15596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15583,
											"end": 15601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15611,
											"end": 15689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 15686,
											"end": 15687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15675,
											"end": 15684,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15671,
											"end": 15688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15662,
											"end": 15668,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15611,
											"end": 15689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 15611,
											"end": 15689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15611,
											"end": 15689,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 15611,
											"end": 15689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15696,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15696,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15883,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 15702,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15842,
											"end": 15875,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15838,
											"end": 15839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15830,
											"end": 15836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15826,
											"end": 15840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 16255,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 15889,
											"end": 16255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16031,
											"end": 16034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16052,
											"end": 16119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16116,
											"end": 16118,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16111,
											"end": 16114,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16052,
											"end": 16119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 16052,
											"end": 16119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16052,
											"end": 16119,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16052,
											"end": 16119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16119,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 16217,
											"end": 16220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 16128,
											"end": 16221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16246,
											"end": 16248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16241,
											"end": 16244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16237,
											"end": 16249,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 16255,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 16255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 16255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 16255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16680,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 16261,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16427,
											"end": 16431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16465,
											"end": 16467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16454,
											"end": 16463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16442,
											"end": 16468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16442,
											"end": 16468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16514,
											"end": 16523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16504,
											"end": 16524,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16500,
											"end": 16501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16498,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16485,
											"end": 16502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16478,
											"end": 16525,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16542,
											"end": 16673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16668,
											"end": 16672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16542,
											"end": 16673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 16542,
											"end": 16673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16542,
											"end": 16673,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16542,
											"end": 16673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16534,
											"end": 16673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16534,
											"end": 16673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16680,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16877,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 16686,
											"end": 16877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16726,
											"end": 16729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 16745,
											"end": 16765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 16745,
											"end": 16765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16740,
											"end": 16765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16740,
											"end": 16765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 16797,
											"end": 16798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 16779,
											"end": 16799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 16779,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16774,
											"end": 16799,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16774,
											"end": 16799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16822,
											"end": 16823,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16819,
											"end": 16820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16808,
											"end": 16824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16808,
											"end": 16824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16843,
											"end": 16846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16840,
											"end": 16841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16837,
											"end": 16847,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16834,
											"end": 16870,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16834,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 16834,
											"end": 16870,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 16850,
											"end": 16868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16834,
											"end": 16870,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 16834,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16877,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17042,
											"end": 17044,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17031,
											"end": 17040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17027,
											"end": 17045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17019,
											"end": 17045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17019,
											"end": 17045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 17123,
											"end": 17124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17112,
											"end": 17121,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17108,
											"end": 17125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17099,
											"end": 17105,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 17055,
											"end": 17126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17126,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 17055,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17136,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 17204,
											"end": 17206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17193,
											"end": 17202,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17186,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17136,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 17136,
											"end": 17208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17136,
											"end": 17208,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 17136,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 17215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17221,
											"end": 17387,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 17221,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17379,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 17357,
											"end": 17358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17349,
											"end": 17355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17345,
											"end": 17359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17338,
											"end": 17380,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17221,
											"end": 17387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17221,
											"end": 17387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17393,
											"end": 17759,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 17393,
											"end": 17759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17535,
											"end": 17538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17556,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 17620,
											"end": 17622,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17615,
											"end": 17618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17556,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 17556,
											"end": 17623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17556,
											"end": 17623,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 17556,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17632,
											"end": 17725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 17721,
											"end": 17724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17632,
											"end": 17725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 17632,
											"end": 17725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17632,
											"end": 17725,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 17632,
											"end": 17725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17750,
											"end": 17752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17745,
											"end": 17748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17741,
											"end": 17753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17734,
											"end": 17753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17734,
											"end": 17753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17393,
											"end": 17759,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17393,
											"end": 17759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17393,
											"end": 17759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17393,
											"end": 17759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17765,
											"end": 18184,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 17765,
											"end": 18184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17931,
											"end": 17935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17969,
											"end": 17971,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17958,
											"end": 17967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17954,
											"end": 17972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17946,
											"end": 17972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17946,
											"end": 17972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18018,
											"end": 18027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18008,
											"end": 18028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18004,
											"end": 18005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17993,
											"end": 18002,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17989,
											"end": 18006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17982,
											"end": 18029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18172,
											"end": 18176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 18046,
											"end": 18177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18177,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18046,
											"end": 18177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18038,
											"end": 18177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18038,
											"end": 18177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17765,
											"end": 18184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17765,
											"end": 18184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17765,
											"end": 18184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17765,
											"end": 18184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18339,
											"end": 18343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18377,
											"end": 18379,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18366,
											"end": 18375,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18362,
											"end": 18380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18354,
											"end": 18380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18354,
											"end": 18380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18390,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 18458,
											"end": 18459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18447,
											"end": 18456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18443,
											"end": 18460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18434,
											"end": 18440,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18390,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 18390,
											"end": 18461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18390,
											"end": 18461,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 18390,
											"end": 18461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18471,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 18539,
											"end": 18541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18528,
											"end": 18537,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18515,
											"end": 18521,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18471,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 18471,
											"end": 18543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18471,
											"end": 18543,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 18471,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18553,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 18621,
											"end": 18623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18610,
											"end": 18619,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18606,
											"end": 18624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18597,
											"end": 18603,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18553,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 18553,
											"end": 18625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18553,
											"end": 18625,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 18553,
											"end": 18625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18638,
											"end": 18818,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 18638,
											"end": 18818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18686,
											"end": 18763,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18683,
											"end": 18684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18676,
											"end": 18764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18783,
											"end": 18787,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 18780,
											"end": 18781,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18773,
											"end": 18788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18807,
											"end": 18811,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18804,
											"end": 18805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18797,
											"end": 18812,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19009,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 18824,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18864,
											"end": 18865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18881,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 18899,
											"end": 18900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 18881,
											"end": 18901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 18901,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 18881,
											"end": 18901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18876,
											"end": 18901,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18876,
											"end": 18901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18915,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 18933,
											"end": 18934,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18915,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 18915,
											"end": 18935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18915,
											"end": 18935,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 18915,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 18935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 18935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18954,
											"end": 18955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18944,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 18944,
											"end": 18979,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18959,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 18959,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 18959,
											"end": 18977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18959,
											"end": 18977,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 18959,
											"end": 18977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18944,
											"end": 18979,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 18944,
											"end": 18979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18998,
											"end": 18999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18994,
											"end": 19003,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 18989,
											"end": 19003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18989,
											"end": 19003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19009,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19131,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 19015,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19085,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 19100,
											"end": 19105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19085,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 19085,
											"end": 19106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19085,
											"end": 19106,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 19085,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19078,
											"end": 19083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19075,
											"end": 19107,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19065,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 19065,
											"end": 19125,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19121,
											"end": 19122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19111,
											"end": 19123,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19065,
											"end": 19125,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 19065,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19274,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 19137,
											"end": 19274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19191,
											"end": 19196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19222,
											"end": 19228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19216,
											"end": 19229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19207,
											"end": 19229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19207,
											"end": 19229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19238,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 19262,
											"end": 19267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19238,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 19238,
											"end": 19268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19238,
											"end": 19268,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 19238,
											"end": 19268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19274,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19274,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19280,
											"end": 19625,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 19280,
											"end": 19625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19347,
											"end": 19353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19396,
											"end": 19398,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19384,
											"end": 19393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19375,
											"end": 19382,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19371,
											"end": 19394,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19399,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 19364,
											"end": 19483,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19364,
											"end": 19483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 19364,
											"end": 19483,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19402,
											"end": 19481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 19402,
											"end": 19481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 19402,
											"end": 19481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19402,
											"end": 19481,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 19402,
											"end": 19481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19364,
											"end": 19483,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 19364,
											"end": 19483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19522,
											"end": 19523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19547,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 19600,
											"end": 19607,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19591,
											"end": 19597,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19580,
											"end": 19589,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19576,
											"end": 19598,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19547,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 19547,
											"end": 19608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19547,
											"end": 19608,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 19547,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19537,
											"end": 19608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19537,
											"end": 19608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19493,
											"end": 19618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19280,
											"end": 19625,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19280,
											"end": 19625,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19280,
											"end": 19625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19280,
											"end": 19625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19280,
											"end": 19625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19631,
											"end": 19801,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 19631,
											"end": 19801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19771,
											"end": 19793,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 19767,
											"end": 19768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19759,
											"end": 19765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19755,
											"end": 19769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19748,
											"end": 19794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19631,
											"end": 19801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19631,
											"end": 19801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19949,
											"end": 19952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 20034,
											"end": 20036,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 20029,
											"end": 20032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 19970,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 20135,
											"end": 20138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 20046,
											"end": 20139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20164,
											"end": 20166,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20159,
											"end": 20162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20155,
											"end": 20167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20148,
											"end": 20167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20148,
											"end": 20167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19807,
											"end": 20173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20345,
											"end": 20349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20383,
											"end": 20385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20372,
											"end": 20381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20368,
											"end": 20386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20360,
											"end": 20386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20360,
											"end": 20386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20432,
											"end": 20441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20426,
											"end": 20430,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20422,
											"end": 20442,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20418,
											"end": 20419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20403,
											"end": 20420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20396,
											"end": 20443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 20586,
											"end": 20590,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 20460,
											"end": 20591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20452,
											"end": 20591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20452,
											"end": 20591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20179,
											"end": 20598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20702,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 20604,
											"end": 20702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20655,
											"end": 20661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20683,
											"end": 20695,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20673,
											"end": 20695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20673,
											"end": 20695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20855,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 20708,
											"end": 20855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20809,
											"end": 20820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20846,
											"end": 20849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20831,
											"end": 20849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20831,
											"end": 20849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20861,
											"end": 21107,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 20861,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20942,
											"end": 20943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20966,
											"end": 20972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20963,
											"end": 20964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20960,
											"end": 20973,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21051,
											"end": 21052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21046,
											"end": 21049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21042,
											"end": 21053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21036,
											"end": 21054,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21032,
											"end": 21033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21027,
											"end": 21030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21016,
											"end": 21055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20988,
											"end": 20990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20985,
											"end": 20986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 20991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 20991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 20991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 20952,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21099,
											"end": 21100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21090,
											"end": 21096,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21088,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21081,
											"end": 21097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21074,
											"end": 21101,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20923,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20861,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20861,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20861,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20861,
											"end": 21107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21499,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 21113,
											"end": 21499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21217,
											"end": 21220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21245,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 21277,
											"end": 21282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21245,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 21245,
											"end": 21283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21245,
											"end": 21283,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 21245,
											"end": 21283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21299,
											"end": 21387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 21380,
											"end": 21386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21375,
											"end": 21378,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21299,
											"end": 21387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 21299,
											"end": 21387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21299,
											"end": 21387,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 21299,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21292,
											"end": 21387,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21292,
											"end": 21387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21396,
											"end": 21461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 21454,
											"end": 21460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21449,
											"end": 21452,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21442,
											"end": 21446,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21435,
											"end": 21440,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21431,
											"end": 21447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21396,
											"end": 21461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 21396,
											"end": 21461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21396,
											"end": 21461,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 21396,
											"end": 21461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21486,
											"end": 21492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21481,
											"end": 21484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21477,
											"end": 21493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21470,
											"end": 21493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21470,
											"end": 21493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21221,
											"end": 21499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21499,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21499,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21505,
											"end": 21776,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 21505,
											"end": 21776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21635,
											"end": 21638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21657,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 21746,
											"end": 21749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21657,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 21657,
											"end": 21750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21657,
											"end": 21750,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 21657,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21650,
											"end": 21750,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21650,
											"end": 21750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21767,
											"end": 21770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21760,
											"end": 21770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21760,
											"end": 21770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21505,
											"end": 21776,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21505,
											"end": 21776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21505,
											"end": 21776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21505,
											"end": 21776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21505,
											"end": 21776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"wasser/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReward(uint256,uint256,uint256)": "a8e62b97",
							"initialize()": "8129fc1c",
							"maxStakeAmount()": "5d80ca32",
							"minStakeAmount()": "f1887684",
							"monthToInterestRate(uint256)": "97378b1a",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"setAddress(address)": "e30081a0",
							"setMonthInterestRate(uint256,uint256)": "6cee0131",
							"stake(uint256,uint256)": "7b0472f0",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"unstake(uint256)": "2e17de78",
							"updateMaxAmount(uint256)": "106b5da1",
							"updateMinAmount(uint256)": "ff897dbd",
							"userMonthToAmount(address,uint256)": "9fa828ac",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monthToInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interestRate\",\"type\":\"uint256\"}],\"name\":\"setMonthInterestRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"updateMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"updateMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMonthToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"wasser/staking.sol\":\"Staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"wasser/staking.sol\":{\"keccak256\":\"0x8b73a666f185ddabef061e76e3cfd0c48afdf63165713da880561263cd5da95a\",\"urls\":[\"bzz-raw://d6cdc0efe2630b611fa69e8a2457b295dc96c598d1b43a810917e6b5ae789c4c\",\"dweb:/ipfs/Qmd2ahNsBx5NNLeh2F5d13VJWZuQHj2JujXK1fPWLmZws7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 271,
								"contract": "wasser/staking.sol:Staking",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 372,
								"contract": "wasser/staking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "wasser/staking.sol:Staking",
								"label": "minStakeAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1452,
								"contract": "wasser/staking.sol:Staking",
								"label": "maxStakeAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1454,
								"contract": "wasser/staking.sol:Staking",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1489,
								"contract": "wasser/staking.sol:Staking",
								"label": "userMonthToAmount",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)1459_storage))"
							},
							{
								"astId": 1493,
								"contract": "wasser/staking.sol:Staking",
								"label": "monthToInterestRate",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1496,
								"contract": "wasser/staking.sol:Staking",
								"label": "token",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)504"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)504": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(User)1459_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct Staking.User))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(User)1459_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)1459_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Staking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1459_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(User)1459_storage": {
								"encoding": "inplace",
								"label": "struct Staking.User",
								"members": [
									{
										"astId": 1456,
										"contract": "wasser/staking.sol:Staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1458,
										"contract": "wasser/staking.sol:Staking",
										"label": "deadline",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> wasser/staking.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "wasser/staking.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:0",
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nativeSrc": "8860:31:0",
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:0",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1113
						],
						"Pausable": [
							361
						]
					},
					"id": 362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 362,
							"sourceUnit": 1114,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 258,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1113,
										"src": "632:7:1"
									},
									"id": 259,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 361,
							"linearizedBaseContracts": [
								361,
								1113
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 264,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 269,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 361,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 270,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 280,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 361,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 283,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 286,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 288,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 291,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 294,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 296,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 361,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 310,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 361,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 322,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 361,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 334,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 339,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 338,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 331,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 361,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 350,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 355,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 354,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 347,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 296,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 361,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 362,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								264,
								269
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							426
						]
					},
					"id": 427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 364,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 426,
							"linearizedBaseContracts": [
								426
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 367,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 370,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 371,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 375,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 376,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 380,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 426,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 383,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 386,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 387,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 391,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 396,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 402,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 426,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 410,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 426,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 421,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 419,
												"id": 423,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 426,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 427,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							504
						]
					},
					"id": 505,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 429,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 504,
							"linearizedBaseContracts": [
								504
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 438,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 447,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 504,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 504,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 504,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 504,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 504,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 504,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 505,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								438,
								447
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							540
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 506,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 507,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 540,
							"linearizedBaseContracts": [
								540
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 517,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 519,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 521,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 540,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 540,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 540,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 541,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1083
						],
						"IERC20": [
							504
						],
						"IERC20Permit": [
							540
						],
						"SafeERC20": [
							830
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 542,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 505,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 543,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 504,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 541,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 545,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 540,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 1084,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 547,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1083,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 830,
							"linearizedBaseContracts": [
								830
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 552,
									"libraryName": {
										"id": 550,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1083,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 551,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 557,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 566,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 578,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 581,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$504",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 471,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 583,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 584,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 585,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 579,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 577,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 568,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 504,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 830,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 607,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$504",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 503,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 609,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 610,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 612,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 605,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 603,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 592,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 504,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 830,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 647,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 634,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$830",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$830",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 630,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 643,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 619,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 504,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 830,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 689,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															660
														],
														"declarations": [
															{
																"constant": false,
																"id": 660,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 689,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 669,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 665,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$830",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$830",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 663,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 667,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 661,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 481,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 671,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 680,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 679,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 674,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 675,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 660,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 676,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 656,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 673,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 678,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 682,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 683,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 684,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 685,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 681,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 688,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 504,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 830,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 702,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 706,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$504",
																	"typeString": "contract IERC20"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 491,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 708,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 710,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 704,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 714,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$504",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 715,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$504",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 713,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 719,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$504",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 722,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 695,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$504",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 491,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 724,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 697,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 725,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 726,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 720,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$504",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 718,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$504",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 732,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$504",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 730,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 734,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 504,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 830,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 747,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"arguments": [
														{
															"id": 754,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 751,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 749,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 757,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 763,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 764,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 761,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 773,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$504",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$504",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 740,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 504,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 830,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													792,
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 793,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"id": 800,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 797,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$504",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 795,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 803,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 804,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 794,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 810,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 794,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 812,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 811,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 813,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 808,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 820,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$504",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$504",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 818,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 790,
												"id": 827,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$504",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 782,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 504,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 504,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 830,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 831,
							"src": "751:5018:5",
							"usedErrors": [
								557,
								566
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1083
						]
					},
					"id": 1084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 833,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1083,
							"linearizedBaseContracts": [
								1083
							],
							"name": "Address",
							"nameLocation": "203:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 838,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "349:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:6"
									},
									"src": "316:50:6"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 843,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "475:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:6"
									},
									"src": "452:39:6"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 846,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:6"
									},
									"src": "591:24:6"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "1602:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 856,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1083",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1083",
																		"typeString": "library Address"
																	}
																],
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 854,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 859,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1640:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "1612:109:6",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "1648:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 864,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1083",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1083",
																					"typeString": "library Address"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "1669:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "1662:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													871,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "1732:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 870,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 878,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 872,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "1750:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 874,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:6"
											},
											{
												"condition": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:6",
													"subExpression": {
														"id": 879,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "1798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "1793:63:6",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "1807:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 881,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "1828:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "RevertStatement",
															"src": "1821:24:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1550:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1577:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:6"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:6"
									},
									"scope": 1083,
									"src": "1531:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2794:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "2833:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "2841:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 897,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2811:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 896,
												"id": 902,
												"nodeType": "Return",
												"src": "2804:45:6"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2743:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:6"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2780:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:6"
									},
									"scope": 1083,
									"src": "2705:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "3293:279:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 918,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1083",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1083",
																		"typeString": "library Address"
																	}
																],
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 916,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 921,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "3331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "3303:108:6",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "3338:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 926,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1083",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1083",
																					"typeString": "library Address"
																				}
																			],
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 924,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 923,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "3359:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "3352:48:6"
														}
													]
												}
											},
											{
												"assignments": [
													933,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "3421:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 932,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "3435:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 934,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"arguments": [
														{
															"id": 940,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "3488:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 936,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "3462:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 938,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "3481:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "3545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 946,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "3554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 943,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "3510:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 915,
												"id": 948,
												"nodeType": "Return",
												"src": "3503:62:6"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3211:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3227:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3246:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3279:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:6"
									},
									"scope": 1083,
									"src": "3180:392:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "3811:154:6",
										"statements": [
											{
												"assignments": [
													961,
													963
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "3822:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 960,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 963,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "3836:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 962,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 968,
												"initialValue": {
													"arguments": [
														{
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3881:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 964,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3863:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3930:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 972,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3947:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 969,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "3903:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 959,
												"id": 974,
												"nodeType": "Return",
												"src": "3896:62:6"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3739:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3755:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3797:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:6"
									},
									"scope": 1083,
									"src": "3711:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "4203:156:6",
										"statements": [
											{
												"assignments": [
													987,
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1001,
														"src": "4214:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 986,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1001,
														"src": "4228:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 988,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"initialValue": {
													"arguments": [
														{
															"id": 992,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "4275:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 990,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4255:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4324:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "4332:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 998,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "4341:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 995,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "4297:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 985,
												"id": 1000,
												"nodeType": "Return",
												"src": "4290:62:6"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "4136:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "4152:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 980,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:6"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "4189:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:6"
									},
									"scope": 1083,
									"src": "4106:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "4783:424:6",
										"statements": [
											{
												"condition": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:6",
													"subExpression": {
														"id": 1014,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "4857:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1021,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "5045:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1025,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "5071:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1036,
															"nodeType": "IfStatement",
															"src": "5041:119:6",
															"trueBody": {
																"id": 1035,
																"nodeType": "Block",
																"src": "5096:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1032,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "5138:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1031,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "5121:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1034,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1037,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "5180:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1013,
															"id": 1038,
															"nodeType": "Return",
															"src": "5173:17:6"
														}
													]
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "4793:408:6",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "4807:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "4829:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1016,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "4821:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4716:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "4769:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:6"
									},
									"scope": 1083,
									"src": "4625:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "5509:122:6",
										"statements": [
											{
												"condition": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:6",
													"subExpression": {
														"id": 1052,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "5524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "5583:42:6",
													"statements": [
														{
															"expression": {
																"id": 1059,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "5604:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1051,
															"id": 1060,
															"nodeType": "Return",
															"src": "5597:17:6"
														}
													]
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "5519:106:6",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "5533:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1055,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "5555:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1054,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "5547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1057,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5433:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5447:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5495:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:6"
									},
									"scope": 1083,
									"src": "5407:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "5798:461:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1070,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "5874:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1079,
													"nodeType": "Block",
													"src": "6204:49:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1076,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "6225:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1078,
															"nodeType": "RevertStatement",
															"src": "6218:24:6"
														}
													]
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "5870:383:6",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "5897:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:6",
																"nodeType": "YulBlock",
																"src": "6055:133:6",
																"statements": [
																	{
																		"nativeSrc": "6073:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:6"
																			},
																			"nativeSrc": "6096:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:6",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:6",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:6"
																					},
																					"nativeSrc": "6137:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:6"
																			},
																			"nativeSrc": "6130:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:6"
																		},
																		"nativeSrc": "6130:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1067,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1067,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:6",
																	"valueSize": 1
																}
															],
															"id": 1074,
															"nodeType": "InlineAssembly",
															"src": "6046:142:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5760:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:6"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:6"
									},
									"scope": 1083,
									"src": "5743:516:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1084,
							"src": "195:6066:6",
							"usedErrors": [
								838,
								843,
								846
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1113
						]
					},
					"id": 1114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1086,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1113,
							"linearizedBaseContracts": [
								1113
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1091,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1093,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1113,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1100,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1102,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1113,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1108,
												"id": 1110,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1113,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1114,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1425
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1116,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 1146,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															1129
														],
														"declarations": [
															{
																"constant": false,
																"id": 1129,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1133,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1134,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1135,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1141,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1127,
															"id": 1140,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1143,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1144,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1127,
														"id": 1145,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1425,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 1174,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1161,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1167,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1159,
															"id": 1166,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1169,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1170,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1172,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1159,
														"id": 1173,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1425,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 1216,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1195,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1193,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1187,
															"id": 1194,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															1197
														],
														"declarations": [
															{
																"constant": false,
																"id": 1197,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1216,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1201,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1199,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1202,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1203,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1205,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1211,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1187,
															"id": 1210,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1213,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1187,
														"id": 1215,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1425,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 1244,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1230,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1237,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1235,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1229,
															"id": 1236,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1239,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1240,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1229,
														"id": 1243,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1425,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 1272,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1265,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1257,
															"id": 1264,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1267,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1268,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1270,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1257,
														"id": 1271,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1425,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1284,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1285,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1287,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1425,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1300,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1302,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1425,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1314,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1315,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1313,
												"id": 1317,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1425,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1330,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1328,
												"id": 1332,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1425,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1347,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1425,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "5054:106:8",
										"statements": [
											{
												"id": 1372,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1362,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "5096:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1363,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "5101:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1365,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "5104:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1361,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1367,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "5138:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1369,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "5142:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1360,
														"id": 1371,
														"nodeType": "Return",
														"src": "5131:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4972:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4983:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4994:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5045:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:8"
									},
									"scope": 1425,
									"src": "4959:201:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "5739:105:8",
										"statements": [
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1387,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5781:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1390,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "5788:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1386,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1392,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "5822:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1394,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5826:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1385,
														"id": 1396,
														"nodeType": "Return",
														"src": "5815:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5679:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:8"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5730:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:8"
									},
									"scope": 1425,
									"src": "5644:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "6585:105:8",
										"statements": [
											{
												"id": 1422,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1412,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "6627:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1415,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6634:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1411,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1417,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "6668:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "6672:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1410,
														"id": 1421,
														"nodeType": "Return",
														"src": "6661:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6503:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6514:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6525:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:8"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6576:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:8"
									},
									"scope": 1425,
									"src": "6490:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1426,
							"src": "482:6210:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:8"
				},
				"id": 8
			},
			"wasser/staking.sol": {
				"ast": {
					"absolutePath": "wasser/staking.sol",
					"exportedSymbols": {
						"Address": [
							1083
						],
						"IERC20": [
							504
						],
						"IERC20Permit": [
							540
						],
						"Initializable": [
							253
						],
						"Pausable": [
							361
						],
						"ReentrancyGuard": [
							426
						],
						"SafeERC20": [
							830
						],
						"SafeMath": [
							1425
						],
						"Staking": [
							1802
						]
					},
					"id": 1803,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1803,
							"sourceUnit": 362,
							"src": "27:71:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1428,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "35:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1803,
							"sourceUnit": 427,
							"src": "100:85:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1430,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "108:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1803,
							"sourceUnit": 1426,
							"src": "187:73:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1432,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1425,
										"src": "195:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1803,
							"sourceUnit": 831,
							"src": "262:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1803,
							"sourceUnit": 254,
							"src": "329:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1436,
										"name": "Pausable",
										"nameLocations": [
											"430:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "430:8:9"
									},
									"id": 1437,
									"nodeType": "InheritanceSpecifier",
									"src": "430:8:9"
								},
								{
									"baseName": {
										"id": 1438,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"440:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 426,
										"src": "440:15:9"
									},
									"id": 1439,
									"nodeType": "InheritanceSpecifier",
									"src": "440:15:9"
								},
								{
									"baseName": {
										"id": 1440,
										"name": "Initializable",
										"nameLocations": [
											"457:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "457:13:9"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "457:13:9"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1802,
							"linearizedBaseContracts": [
								1802,
								253,
								426,
								361,
								1113
							],
							"name": "Staking",
							"nameLocation": "419:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1444,
									"libraryName": {
										"id": 1442,
										"name": "SafeMath",
										"nameLocations": [
											"481:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "481:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "475:27:9",
									"typeName": {
										"id": 1443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "494:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1448,
									"libraryName": {
										"id": 1445,
										"name": "SafeERC20",
										"nameLocations": [
											"511:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "511:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "505:27:9",
									"typeName": {
										"id": 1447,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1446,
											"name": "IERC20",
											"nameLocations": [
												"525:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 504,
											"src": "525:6:9"
										},
										"referencedDeclaration": 504,
										"src": "525:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$504",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f1887684",
									"id": 1450,
									"mutability": "mutable",
									"name": "minStakeAmount",
									"nameLocation": "552:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "537:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1449,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "537:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5d80ca32",
									"id": 1452,
									"mutability": "mutable",
									"name": "maxStakeAmount",
									"nameLocation": "585:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "570:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1454,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "618:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "603:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1453,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "603:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.User",
									"id": 1459,
									"members": [
										{
											"constant": false,
											"id": 1456,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "651:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "643:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "643:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1458,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "669:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1459,
											"src": "661:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1457,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "661:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "634:4:9",
									"nodeType": "StructDefinition",
									"scope": 1802,
									"src": "627:55:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "726:27:9",
										"statements": [
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "730:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1465,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "738:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "742:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "738:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "730:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "730:18:9"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1462,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1461,
												"name": "initializer",
												"nameLocations": [
													"714:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "714:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "714:11:9"
										}
									],
									"name": "initialize",
									"nameLocation": "694:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:2:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:9"
									},
									"scope": 1802,
									"src": "685:68:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "779:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1473,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "791:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "795:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "791:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1475,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "805:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "791:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792061646d696e732061726520616c6c6f776564",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "812:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7",
																"typeString": "literal_string \"only admins are allowed\""
															},
															"value": "only admins are allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc62d1b2b87cc7016e551c1d35245aa61b787d979cff2d7d8054569dce8cc9b7",
																"typeString": "literal_string \"only admins are allowed\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "783:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "783:55:9"
											},
											{
												"id": 1480,
												"nodeType": "PlaceholderStatement",
												"src": "842:1:9"
											}
										]
									},
									"id": 1482,
									"name": "onlyOwner",
									"nameLocation": "768:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "777:2:9"
									},
									"src": "759:89:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "9fa828ac",
									"id": 1489,
									"mutability": "mutable",
									"name": "userMonthToAmount",
									"nameLocation": "905:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "853:69:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct Staking.User))"
									},
									"typeName": {
										"id": 1488,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1483,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "853:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct Staking.User))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1487,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1484,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "880:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "872:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$",
												"typeString": "mapping(uint256 => struct Staking.User)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1486,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1485,
													"name": "User",
													"nameLocations": [
														"891:4:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1459,
													"src": "891:4:9"
												},
												"referencedDeclaration": 1459,
												"src": "891:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
													"typeString": "struct Staking.User"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "97378b1a",
									"id": 1493,
									"mutability": "mutable",
									"name": "monthToInterestRate",
									"nameLocation": "961:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "926:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1492,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1490,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "926:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1491,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "945:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1496,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1000:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "986:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$504",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1495,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1494,
											"name": "IERC20",
											"nameLocations": [
												"986:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 504,
											"src": "986:6:9"
										},
										"referencedDeclaration": 504,
										"src": "986:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$504",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "1068:33:9",
										"statements": [
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1503,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "1072:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$504",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1505,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "1087:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1504,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "1080:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$504_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1080:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$504",
															"typeString": "contract IERC20"
														}
													},
													"src": "1072:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$504",
														"typeString": "contract IERC20"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "1072:24:9"
											}
										]
									},
									"functionSelector": "e30081a0",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1500,
												"name": "onlyOwner",
												"nameLocations": [
													"1058:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "1058:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1058:9:9"
										}
									],
									"name": "setAddress",
									"nameLocation": "1020:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1039:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1031:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:18:9"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:0:9"
									},
									"scope": 1802,
									"src": "1011:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "1198:508:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1522,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "1210:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1523,
																"name": "minStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "1221:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1210:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616464206d6f726520616d6f756e74",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d",
																"typeString": "literal_string \"add more amount\""
															},
															"value": "add more amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88bf73b549db43805180085d77cd2f832c8cbac75054b85707022aaf83cc466d",
																"typeString": "literal_string \"add more amount\""
															}
														],
														"id": 1521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1202:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "1202:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "1267:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1530,
																"name": "maxStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "1278:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1267:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616464206c65737320616d6f756e74",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1294:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23",
																"typeString": "literal_string \"add less amount\""
															},
															"value": "add less amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_030591bee219f3263188c8931c350c9a0d5eb744fc0842c36801ab933cb91f23",
																"typeString": "literal_string \"add less amount\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1259:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1259:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "1259:53:9"
											},
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "interestRate",
														"nameLocation": "1324:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "1316:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1316:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"baseExpression": {
														"id": 1537,
														"name": "monthToInterestRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "1339:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1539,
													"indexExpression": {
														"id": 1538,
														"name": "_month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "1359:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1339:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:50:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "interestRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "1378:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1393:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1378:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206d6f6e7468",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1396:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0",
																"typeString": "literal_string \"invalid month\""
															},
															"value": "invalid month"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_830241287e426295dd64c952bed7e3c4d6bd1a06aea4efaa9cae9fb9527d62d0",
																"typeString": "literal_string \"invalid month\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1370:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1370:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "1370:42:9"
											},
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1431:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "1418:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
															"typeString": "struct Staking.User"
														},
														"typeName": {
															"id": 1549,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1548,
																"name": "User",
																"nameLocations": [
																	"1418:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1459,
																"src": "1418:4:9"
															},
															"referencedDeclaration": 1459,
															"src": "1418:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
																"typeString": "struct Staking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1551,
															"name": "userMonthToAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "1438:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct Staking.User storage ref))"
															}
														},
														"id": 1554,
														"indexExpression": {
															"expression": {
																"id": 1552,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1456:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1460:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1456:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1438:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$",
															"typeString": "mapping(uint256 => struct Staking.User storage ref)"
														}
													},
													"id": 1556,
													"indexExpression": {
														"id": 1555,
														"name": "_month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "1468:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1438:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1459_storage",
														"typeString": "struct Staking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1418:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1559,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "1487:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
																		"typeString": "struct Staking.User storage pointer"
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1492:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1456,
																"src": "1487:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1502:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1487:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479207374616b6564",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e",
																"typeString": "literal_string \"already staked\""
															},
															"value": "already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f48e9ee35b4b58fa13482d62c181c78b90904a6bafe3530d970f9a6bf221977e",
																"typeString": "literal_string \"already staked\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "1479:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1551:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1555:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1551:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1573,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1571:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1802",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1802",
																		"typeString": "contract Staking"
																	}
																],
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1563:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1563:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1563:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1578:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1566,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "1528:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1534:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 617,
														"src": "1528:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$504_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "1528:58:9"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1578,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "1590:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
																"typeString": "struct Staking.User storage pointer"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1595:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1456,
														"src": "1590:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1581,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1604:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1590:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "1590:21:9"
											},
											{
												"expression": {
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1584,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "1615:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
																"typeString": "struct Staking.User storage pointer"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1620:8:9",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1458,
														"src": "1615:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1590,
																	"name": "_month",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "1651:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1660:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "1651:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1587,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1631:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1637:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1631:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1647:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1289,
															"src": "1631:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1631:32:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1615:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "1615:48:9"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1516,
												"name": "whenNotPaused",
												"nameLocations": [
													"1167:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "1167:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:13:9"
										},
										{
											"id": 1519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1518,
												"name": "nonReentrant",
												"nameLocations": [
													"1183:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 391,
												"src": "1183:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1183:12:9"
										}
									],
									"name": "stake",
									"nameLocation": "1115:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1129:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1121:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_month",
												"nameLocation": "1146:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1138:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:33:9"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:0:9"
									},
									"scope": 1802,
									"src": "1106:600:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1766:439:9",
										"statements": [
											{
												"assignments": [
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1783:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "1770:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
															"typeString": "struct Staking.User"
														},
														"typeName": {
															"id": 1605,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1604,
																"name": "User",
																"nameLocations": [
																	"1770:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1459,
																"src": "1770:4:9"
															},
															"referencedDeclaration": 1459,
															"src": "1770:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
																"typeString": "struct Staking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1607,
															"name": "userMonthToAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "1790:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct Staking.User storage ref))"
															}
														},
														"id": 1610,
														"indexExpression": {
															"expression": {
																"id": 1608,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1808:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1812:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1808:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1790:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$",
															"typeString": "mapping(uint256 => struct Staking.User storage ref)"
														}
													},
													"id": 1612,
													"indexExpression": {
														"id": 1611,
														"name": "_month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "1820:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1790:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1459_storage",
														"typeString": "struct Staking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1770:57:9"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1839:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "1831:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1831:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"expression": {
														"id": 1616,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "1848:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
															"typeString": "struct Staking.User storage pointer"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1853:6:9",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1456,
													"src": "1848:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1831:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "1871:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1880:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1871:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20756e7374616b65206461746120666f756e64",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1883:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185",
																"typeString": "literal_string \"no unstake data found\""
															},
															"value": "no unstake data found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0aebfd8bb15fca0353d6ea8176a8e8c7abddd204835f4a009a76656f52255185",
																"typeString": "literal_string \"no unstake data found\""
															}
														],
														"id": 1619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1863:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "1863:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1627,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1919:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1925:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1919:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1629,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "1937:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1459_storage_ptr",
																		"typeString": "struct Staking.User storage pointer"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1942:8:9",
																"memberName": "deadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1458,
																"src": "1937:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1919:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706572696f64206973206e6f742065787069726564",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1952:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485",
																"typeString": "literal_string \"period is not expired\""
															},
															"value": "period is not expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29500f7a2c2cfcf9582163b586a39367d9c6794fde682557d6b0e506d52a9485",
																"typeString": "literal_string \"period is not expired\""
															}
														],
														"id": 1626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1911:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "1911:65:9"
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "interestRate",
														"nameLocation": "1988:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "1980:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1980:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"baseExpression": {
														"id": 1637,
														"name": "monthToInterestRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "2003:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1639,
													"indexExpression": {
														"id": 1638,
														"name": "_month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2023:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2003:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1980:50:9"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2042:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "2034:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2034:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"arguments": [
														{
															"id": 1644,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "2067:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1645,
															"name": "interestRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "2075:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1646,
															"name": "_month",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "2089:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1643,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "2051:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2034:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1652,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2121:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2125:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2121:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1656,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "2144:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1654,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "2133:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2140:3:9",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1289,
																"src": "2133:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2133:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1649,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "2102:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2108:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "2102:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$504_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "2102:50:9"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2156:44:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1660,
																"name": "userMonthToAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "2163:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct Staking.User storage ref))"
																}
															},
															"id": 1663,
															"indexExpression": {
																"expression": {
																	"id": 1661,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2181:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2185:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2181:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2163:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1459_storage_$",
																"typeString": "mapping(uint256 => struct Staking.User storage ref)"
															}
														},
														"id": 1665,
														"indexExpression": {
															"id": 1664,
															"name": "_month",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "2193:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2163:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1459_storage",
															"typeString": "struct Staking.User storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "2156:44:9"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1601,
												"name": "nonReentrant",
												"nameLocations": [
													"1753:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 391,
												"src": "1753:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1753:12:9"
										}
									],
									"name": "unstake",
									"nameLocation": "1720:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "_month",
												"nameLocation": "1736:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1728:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:16:9"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:0:9"
									},
									"scope": 1802,
									"src": "1711:494:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "2331:96:9",
										"statements": [
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2343:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1697,
														"src": "2335:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_12000_by_1",
																"typeString": "int_const 12000"
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2395:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3132",
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2402:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2395:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12000_by_1",
																"typeString": "int_const 12000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_12000_by_1",
																"typeString": "int_const 12000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1687,
																	"name": "_month",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "2383:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1684,
																			"name": "_interestRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1673,
																			"src": "2364:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1682,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "2352:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2360:3:9",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1319,
																		"src": "2352:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2352:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2379:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1319,
																"src": "2352:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2352:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2391:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1334,
														"src": "2352:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2352:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2335:70:9"
											},
											{
												"expression": {
													"id": 1695,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1681,
													"src": "2416:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1696,
												"nodeType": "Return",
												"src": "2409:13:9"
											}
										]
									},
									"functionSelector": "a8e62b97",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2219:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2246:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2238:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "_interestRate",
												"nameLocation": "2265:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2257:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "_month",
												"nameLocation": "2290:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2282:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:66:9"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2322:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:9:9"
									},
									"scope": 1802,
									"src": "2210:217:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "2496:36:9",
										"statements": [
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1705,
														"name": "minStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "2500:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1706,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "2517:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2500:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "2500:27:9"
											}
										]
									},
									"functionSelector": "ff897dbd",
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1703,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1702,
												"name": "onlyOwner",
												"nameLocations": [
													"2486:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "2486:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2486:9:9"
										}
									],
									"name": "updateMinAmount",
									"nameLocation": "2441:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "2465:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2457:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:20:9"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:9"
									},
									"scope": 1802,
									"src": "2432:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "2601:36:9",
										"statements": [
											{
												"expression": {
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1717,
														"name": "maxStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "2605:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1718,
														"name": "_maxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "2622:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2605:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "2605:27:9"
											}
										]
									},
									"functionSelector": "106b5da1",
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1714,
												"name": "onlyOwner",
												"nameLocations": [
													"2591:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "2591:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2591:9:9"
										}
									],
									"name": "updateMaxAmount",
									"nameLocation": "2546:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "_maxAmount",
												"nameLocation": "2570:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "2562:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:20:9"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2601:0:9"
									},
									"scope": 1802,
									"src": "2537:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "2696:208:9",
										"statements": [
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "2708:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1754,
														"src": "2700:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2700:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1738,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1735,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2750:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1802",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1802",
																		"typeString": "contract Staking"
																	}
																],
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2742:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2742:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2742:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1731,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "2726:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2732:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "2726:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2726:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2700:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1740,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "2771:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1741,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "2790:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2801:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8",
																"typeString": "literal_string \"Contract does not have enough balance to withdraw\""
															},
															"value": "Contract does not have enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4fecd9e84480725a9f24885af3dcc44eca2e7b0fcf4636e5142358fe2b1652b8",
																"typeString": "literal_string \"Contract does not have enough balance to withdraw\""
															}
														],
														"id": 1739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2760:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2760:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "2760:96:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1749,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2879:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2883:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2879:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1751,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "2891:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1746,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "2860:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$504",
																"typeString": "contract IERC20"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2866:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "2860:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$504_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$504_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2860:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "2860:39:9"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1726,
												"name": "onlyOwner",
												"nameLocations": [
													"2686:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "2686:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:9:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "2651:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2668:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2660:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:17:9"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:9"
									},
									"scope": 1802,
									"src": "2642:262:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "3003:52:9",
										"statements": [
											{
												"expression": {
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1764,
															"name": "monthToInterestRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3007:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1766,
														"indexExpression": {
															"id": 1765,
															"name": "_month",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "3027:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3007:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1767,
														"name": "_interestRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "3037:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3007:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "3007:43:9"
											}
										]
									},
									"functionSelector": "6cee0131",
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1761,
												"name": "onlyOwner",
												"nameLocations": [
													"2991:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "2991:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2991:9:9"
										}
									],
									"name": "setMonthInterestRate",
									"nameLocation": "2918:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "_month",
												"nameLocation": "2947:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "2939:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "_interestRate",
												"nameLocation": "2963:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "2955:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2955:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:39:9"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3003:0:9"
									},
									"scope": 1802,
									"src": "2909:146:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "3094:17:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1776,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "3098:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3098:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "3098:8:9"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1774,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1773,
												"name": "onlyOwner",
												"nameLocations": [
													"3084:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "3084:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3084:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "3069:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3074:2:9"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3094:0:9"
									},
									"scope": 1802,
									"src": "3060:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "3152:19:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1785,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "3156:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3156:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "3156:10:9"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1783,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1782,
												"name": "onlyOwner",
												"nameLocations": [
													"3142:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "3142:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3142:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "3125:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3132:2:9"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3152:0:9"
									},
									"scope": 1802,
									"src": "3116:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "3239:25:9",
										"statements": [
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1796,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "3243:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1797,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "3251:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3243:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "3243:16:9"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1794,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1793,
												"name": "onlyOwner",
												"nameLocations": [
													"3230:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1482,
												"src": "3230:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3230:9:9"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3185:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3211:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "3203:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:18:9"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:0:9"
									},
									"scope": 1802,
									"src": "3176:88:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1803,
							"src": "410:2861:9",
							"usedErrors": [
								16,
								19,
								557,
								838,
								843,
								846
							],
							"usedEvents": [
								24,
								264,
								269
							]
						}
					],
					"src": "0:3271:9"
				},
				"id": 9
			}
		}
	}
}